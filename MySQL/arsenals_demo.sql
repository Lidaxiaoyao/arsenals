/*
SQLyog v10.2 
MySQL - 5.5.27 : Database - arsenals_demo
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`arsenals_demo` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `arsenals_demo`;

/*Table structure for table `ar_article` */

DROP TABLE IF EXISTS `ar_article`;

CREATE TABLE `ar_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `title` varchar(200) NOT NULL COMMENT '文章标题',
  `content` text COMMENT '文章内容',
  `intro` varchar(500) DEFAULT NULL COMMENT '文章介绍',
  `feature_img` varchar(200) DEFAULT NULL COMMENT '特色图片',
  `author` varchar(100) DEFAULT NULL COMMENT '文章作者',
  `source` varchar(200) DEFAULT NULL COMMENT '文章来源',
  `isvalid` smallint(1) DEFAULT '1' COMMENT '是否有效',
  `creator` int(11) DEFAULT NULL COMMENT '创建者',
  `publish_date` int(11) DEFAULT NULL COMMENT '发布时间',
  `update_date` int(11) DEFAULT NULL COMMENT '更新时间',
  `updator` int(11) DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=252 DEFAULT CHARSET=utf8 COMMENT='文章表';

/*Data for the table `ar_article` */

insert  into `ar_article`(`id`,`title`,`content`,`intro`,`feature_img`,`author`,`source`,`isvalid`,`creator`,`publish_date`,`update_date`,`updator`) values (131,'域名也可以用了，在此纪念一下这位大重要的时刻','域名也可以使用了，ithinkblog为新博客准备，暂时先用在这吧，guanyiyao-blog.cn还没有备案下来<img src=\"/saeadmin/editor/plugins/emoticons/0.gif\" border=\"0\" alt=\"\" />','域名也可以使用了，ithinkblog为新博客准备，暂时先用在这吧，guanyiyao-blog.cn还没有备案下来<img src=\"/saeadmin/editor/plugins/emoticons/0.gif\" border=\"0\" alt=\"\" />','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(132,'［转载］Ubuntu下连接真实手机进行android开发','<p style=\"font-weight:bold;\"><span style=\"color:#e53333;\">本文转载自http://www.rosoo.net/a/201112/15505.html</span></p>\r\n<p><span style=\"color:#e53333;font-weight:bold;\">本人测试通过。</span></p>\r\n<p>我的笔记本是windows  xp+ubuntu10.10双系统，两个系统下均配置了<a href=\"http://www.rosoo.net/a/list_37_1.html\" target=\"_blank\"><u>Android</u></a>开发环境，只是因为xp下同时运行程序太多，至少要跑个360+杀毒软件，所以再 加上avd，机器直接卡得不行，于是便决定不启动模拟器了，直接上真机调试，windows下的连接还比较容易，本人是htc desire  z，连接上后配置下<a href=\"http://www.rosoo.net/a/list_34_1.html\" target=\"_blank\"><u>驱动</u></a>就好了，<a href=\"http://www.rosoo.net/a/list_34_1.html\" target=\"_blank\"><u>驱动</u></a>下载地址<a href=\"http://download.csdn.net/source/3018592\">http://download.csdn.net/source/3018592</a></p>\r\n<p>windows下很快连接真机成功了，于是手痒痒了起来，想把ubuntu下也配置好，进入ubuntu，手机连上笔记本后，use调试打开，但是\r\n 在eclipse的target  \r\ndevice中却显示一堆小问号“？？？？？？？？？”,程序运行时，选择那个“？？？？？？”也没有用，上网搜教程，弄了半天，终于成功，现将成功过程\r\n 总结写下。</p>\r\n<p>首先要在ubuntu下将Android开发环境配置好，以前的文章中有写，此处不再赘述。</p>\r\n<p>手机连接上笔记本后，在手机中的usb调试一定要开启，然后在terminal中键入“lsusb”</p>\r\n<p>ritter@ritter-Hasee:~$ lsusb<br />\r\nBus 003 Device 002: ID 04fc:05da Sunplus Technology Co., Ltd&nbsp;<br />\r\nBus 003 Device 001: ID 1d6b:0001 <a href=\"http://www.rosoo.net/a/list_49_1.html\" target=\"_blank\"><u>Linux</u></a> Foundation 1.1 root hub<br />\r\nBus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub<br />\r\nBus 001 Device 007: ID 0bb4:0c91 High Tech Computer Corp.&nbsp;<br />\r\nBus 001 Device 005: ID 0bda:0158 Realtek Semiconductor Corp. USB 2.0 multicard reader<br />\r\nBus 001 Device 002: ID 0bda:8187 Realtek Semiconductor Corp. RTL8187 Wireless Adapter<br />\r\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</p>\r\n<p>本人是htc手机，故&nbsp;Bus 001 Device 007: ID 0bb4:0c91 High Tech Computer Corp.就是我的手机设备，注意ID后的0bb4，比较重要，下文再讲。</p>\r\n<p>接着键入“cd /etc/udev/rules.d/”&nbsp;</p>\r\n<p>ritter@ritter-Hasee:~$ cd /etc/udev/rules.d/<br />\r\nritter@ritter-Hasee:/etc/udev/rules.d$&nbsp;</p>\r\n<p>进入到此目录下，新建文档“50-android.rules”</p>\r\n<p>ritter@ritter-Hasee:/etc/udev/rules.d$ sudo gedit 50-android.rules&nbsp;</p>\r\n<p>名字应该是随意的，但是网上的教程都是叫这个，于是我也这样命名，进入文档后，输入以下两行内容</p>\r\n<p>SUBSYSTEM ==\"usb\" , SYSFS{ \"High Tech Computer Corp.\" } ==\"0bb4\" , MODE =\"0666\"<br />\r\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE=\"0666\"</p>\r\n<p>大家可以看到，因为我的手机刚才ID后的是0bb4，所以第一行中的&nbsp;SYSFS{ \"High Tech Computer Corp.\" } \r\n \r\n==\"0bb4\"这样写，如果你的手机不是htc的，可以通过“lsusb”查看详情后，照着样子修改，第二行原样复制即可。本来一开始只写了第一行，试\r\n 了不行，后来网上找到第二行，说是万能写法，就也写在后面，结果成功了，读者最好也像这样两行都写。</p>\r\n<p>文档内容完成后赋予所有人所有权限“sudo chmod 777 50-android.rules”</p>\r\n<p>ritter@ritter-Hasee:/etc/udev/rules.d$ sudo chmod 777 50-android.rules</p>\r\n<p>然后输入“<span style=\"color:#1e375a;font-family:Arial;line-height:18px;\">sudo /etc/init.d/udev restart</span>”，对usb设备重启连接。</p>\r\n<p>然后进入android sdk解压的路径，进入platform-tools&nbsp;</p>\r\n<p>ritter@ritter-Hasee:/etc/udev/rules.d$ cd /home/ritter/android-sdk-linux_86/platform-tools/<br />\r\nritter@ritter-Hasee:~/android-sdk-linux_86/platform-tools$&nbsp;</p>\r\n<p>输入“&nbsp;sudo ./adb &nbsp;kill-server”</p>\r\n<p>ritter@ritter-Hasee:~/android-sdk-linux_86/platform-tools$ sudo ./adb &nbsp;kill-server</p>\r\n<p>然后输入“sudo ./adb &nbsp;start-server”</p>\r\n<p>ritter@ritter-Hasee:~/android-sdk-linux_86/platform-tools$ sudo ./adb &nbsp;start-server</p>\r\n<p>* daemon not running. starting it now on port 5037 *<br />\r\n* daemon started successfully *</p>\r\n<p>然后输入“./adb devices”</p>\r\n<p>ritter@ritter-Hasee:~/android-sdk-linux_86/platform-tools$ ./adb devices</p>\r\n<p>List of devices attached&nbsp;<br />\r\nSH0B5RT08771<span style=\"white-space:pre;\"> </span>device</p>\r\n<p>此时，我的手机设备号已经正确显示了。说明真机连接成功，此时在eclipse中只要配置run configurations中的target为手机设备就可以将程序安装到真机中调试了。</p>\r\n<p>Ps:下次连接时，如果设备显示为“？？？？？？？？”时，记住要进入android SDK下的platforms-tools中</p>\r\n<p>执行</p>\r\n<p>“sudo ./adb kill-server”</p>\r\n<p>\"sudo ./adb devices\"</p>\r\n<p>即可看见正确识别的设备了 </p>','<p style=\"font-weight:bold;\"><span style=\"color:#e53333;\">本文转载自http://www.rosoo.net/a/201112/15505.html</span></p><p><span style=\"color:#e53333;font-weight:bold;\">本人测试通过。</span></p><p>我的笔记本是windows  xp+ubuntu10.10双系统，两个系统下均配置了<a href=\"http://www.rosoo.net/a/list_37_1.html\" target=\"_blank\"><u>Android</u></a>开发环境，只是因为xp下同时运行程序太多，至少要跑个360+杀毒软件，所以再 加上avd，机器直接卡得不行，于是便决定不启动模拟器了，直接上真机调试，windows下的连接还比较容易，本人是htc desire  z，连接上后配置下<a href=\"http://www.rosoo.net/a/list_34_1.html\" target=\"_blank\"><u>驱动</u></a','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(133,'MyEclipse 9.0 安装SVN整理（笔记）','<p><span style=\"color:#e53333;\">本文章来自互联网，本人只是在此进行整理了一下，一遍以后查阅。</span></p>\r\n<p></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:\'Microsoft Yahei\', 微软雅黑, Tahoma, Arial, Helvetica, STHeiti;font-size:14px;line-height:24px;\">1.下载&nbsp;<a href=\"http://download.csdn.net/detail/gmmgmmgmmgmm/3669715\">site-1.6.5.zip</a>&nbsp;解压后拷贝其中的features和plugins到\"D:\\\\Program&nbsp;Files\\\\MyEclipse\\\\MyPlug\\\\svn</p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:\'Microsoft Yahei\', 微软雅黑, Tahoma, Arial, Helvetica, STHeiti;font-size:14px;line-height:24px;\">2.D:\\Program&nbsp;Files\\MyEclipse\\MyEclipse&nbsp;9\\configuration\\org.eclipse.equinox.simpleconfigurator</p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:\'Microsoft Yahei\', 微软雅黑, Tahoma, Arial, Helvetica, STHeiti;font-size:14px;line-height:24px;\">的bundles.info中增加以下程序的输出。</p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:\'Microsoft Yahei\', 微软雅黑, Tahoma, Arial, Helvetica, STHeiti;font-size:14px;line-height:24px;\"></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">import java.io.File;\r\nimport java.util.ArrayList;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * MyEclipse9 插件配置代码生成器\r\n * \r\n */\r\npublic class PlugConfigCreator {\r\n	public PlugConfigCreator() {\r\n\r\n	}\r\n\r\n	public void print(String path) {\r\n\r\n		List&lt;String&gt; list = getFileList(path);\r\n		if (list == null)\r\n\r\n		{\r\n			return;\r\n		}\r\n\r\n		int length = list.size();\r\n		for (int i = 0; i &lt; length; i++) {\r\n			String result = \"\";\r\n\r\n			String thePath = getFormatPath(getString(list.get(i)));\r\n\r\n			File file = new File(thePath);\r\n			if (file.isDirectory()) {\r\n				String fileName = file.getName();\r\n				if (fileName.indexOf(\"_\") &lt; 0) {\r\n					print(thePath);\r\n\r\n					continue;\r\n				}\r\n\r\n				String[] filenames = fileName.split(\"_\");\r\n\r\n				String filename1 = filenames[0];\r\n\r\n				String filename2 = filenames[1];\r\n\r\n				result = filename1 + \",\" + filename2 + \",file:/\" + path + \"/\"\r\n						+ fileName + \"\\\\,4,false\";\r\n\r\n				System.out.println(result);\r\n			} else if (file.isFile()) {\r\n				String fileName = file.getName();\r\n				if (fileName.indexOf(\"_\") &lt; 0) {\r\n					continue;\r\n\r\n				}\r\n				int last = fileName.lastIndexOf(\"_\");// 最后一个下划线的位置\r\n				String filename1 = fileName.substring(0, last);\r\n				String filename2 = fileName.substring(last + 1, fileName\r\n\r\n				.length() - 4);\r\n				result = filename1 + \",\" + filename2 + \",file:/\" + path + \"/\"\r\n						+ fileName + \",4,false\";\r\n\r\n				System.out.println(result);\r\n			}\r\n\r\n		}\r\n	}\r\n\r\n	public List&lt;String&gt; getFileList(String path) {\r\n		path = getFormatPath(path);\r\n		path = path + \"/\";\r\n		File filePath = new File(path);\r\n		if (!filePath.isDirectory())\r\n\r\n		{\r\n			return null;\r\n		}\r\n\r\n		String[] filelist = filePath.list();\r\n\r\n		List&lt;String&gt; filelistFilter = new ArrayList&lt;String&gt;();\r\n\r\n		for (int i = 0; i &lt; filelist.length; i++) {\r\n\r\n			String tempfilename = getFormatPath(path + filelist[i]);\r\n\r\n			filelistFilter.add(tempfilename);\r\n		}\r\n\r\n		return filelistFilter;\r\n	}\r\n\r\n	public String getString(Object object) {\r\n		if (object == null) {\r\n			return \"\";\r\n		}\r\n\r\n		return String.valueOf(object);\r\n	}\r\n\r\n	public String getFormatPath(String path) {\r\n		path = path.replaceAll(\"\\\\\\\\\", \"/\");\r\n		path = path.replaceAll(\"//\", \"/\");\r\n		return path;\r\n	}\r\n\r\n	public static void main(String[] args) {\r\n		/* 你的插件的安装目录 */\r\n\r\n		String plugin = \"D:\\\\MyEclipse\\\\MyPlug\\\\Svn\";\r\n\r\n		new PlugConfigCreator().print(plugin);\r\n	}\r\n}</pre><p></p>\r\n<p></p>','<p><span style=\"color:#e53333;\">本文章来自互联网，本人只是在此进行整理了一下，一遍以后查阅。</span></p>\r\n<p></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:\'Microsoft Yahei\', 微软雅黑, Tahoma, Arial, Helvetica, STHeiti;font-size:14px;line-height:24px;\">1.下载site-1.6.5.zip解压后拷贝其中的features和plugins到\"D:\\\\Program&nbsp;Files\\\\MyEclipse\\\\MyPlug\\\\svn</p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:\'Microsoft Yahei\', 微软雅黑, Tahoma, Arial, Helvetica, STHeiti;font-size:14px;line-height:24px;\">2.','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(134,'Ubuntu常用配置','<p>1.&nbsp;安装谷歌和sunpinyin输入法</p>\r\n<p>sudo&nbsp;apt-get&nbsp;install&nbsp;ibus-googlepinyin&nbsp;#谷歌拼音输入法</p>\r\n<p>sudo&nbsp;apt-get&nbsp;install&nbsp;ibus-sunpinyin&nbsp;#Sun&nbsp;拼音输入法</p>\r\n<p>sudo&nbsp;apt-get&nbsp;install&nbsp;scim&nbsp;#安装&nbsp;SCIM&nbsp;</p>\r\nsudo&nbsp;apt-get&nbsp;install&nbsp;fcitx&nbsp;#安装小企鹅输入法','<p>1.&nbsp;安装谷歌和sunpinyin输入法</p><p>sudo&nbsp;apt-get&nbsp;install&nbsp;ibus-googlepinyin&nbsp;#谷歌拼音输入法</p><p>sudo&nbsp;apt-get&nbsp;install&nbsp;ibus-sunpinyin&nbsp;#Sun&nbsp;拼音输入法</p><p>sudo&nbsp;apt-get&nbsp;install&nbsp;scim&nbsp;#安装&nbsp;SCIM&nbsp;</p>\r\nsudo&nbsp;apt-get&nbsp;install&nbsp;fcitx&nbsp;#安装小企鹅输入法','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(135,'【原创】ThinkPHP URL安全漏洞入侵','查看地址：<a target=\"_blank\" href=\"http://hi.baidu.com/mylxsw/item/8f1782f3d68f770d84d27880\">http://hi.baidu.com/mylxsw/item/8f1782f3d68f770d84d27880</a><br />','查看地址：<a target=\"_blank\" href=\"http://hi.baidu.com/mylxsw/item/8f1782f3d68f770d84d27880\">http://hi.baidu.com/mylxsw/item/8f1782f3d68f770d84d27880</a><br />','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(136,'【原创】ThinkPHP URL安全漏洞入侵2 木马写入','查看地址：<a target=\"_blank\" href=\"http://hi.baidu.com/mylxsw/item/9a47ba3ab7ed614e033edc9d\">http://hi.baidu.com/mylxsw/item/9a47ba3ab7ed614e033edc9d</a><br />','查看地址：<a target=\"_blank\" href=\"http://hi.baidu.com/mylxsw/item/9a47ba3ab7ed614e033edc9d\">http://hi.baidu.com/mylxsw/item/9a47ba3ab7ed614e033edc9d</a><br />','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(137,'Ubuntu下连接Windows远程桌面','<p>Ubunut下连接windows远程桌面只需要安装rdesktop即可。</p>\r\n<p><pre class=\"brush:java; toolbar: true; auto-links: true;\">rdesktop 远程ip -u 用户名 -p 密码 -a 16 -g 1024x768 -r sound:local -5</pre></p>','<p>Ubunut下连接windows远程桌面只需要安装rdesktop即可。</p><p><pre class=\"brush:java; toolbar: true; auto-links: true;\">rdesktop 远程ip -u 用户名 -p 密码 -a 16 -g 1024x768 -r sound:local -5</pre></p>','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(138,'[转]GoAgent，看看外面的世界','<p><a href=\"http://maolihui.com/goagent-detailed-version-of-the-tutorial.html\">http://maolihui.com/goagent-detailed-version-of-the-tutorial.html</a></p>\r\n<p>&nbsp;</p>\r\n<p>终于折腾成功了，注意的是，用goagent上传时使用密码登陆不成功是会提示使用应用密码登陆。</p>\r\n<p>&nbsp;</p>\r\n<p>能上facebook和youtube了。</p>','<p><a href=\"http://maolihui.com/goagent-detailed-version-of-the-tutorial.html\">http://maolihui.com/goagent-detailed-version-of-the-tutorial.html</a></p><p>&nbsp;</p><p>终于折腾成功了，注意的是，用goagent上传时使用密码登陆不成功是会提示使用应用密码登陆。</p><p>&nbsp;</p><p>能上facebook和youtube了。</p>','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(139,'【转载】fedora17 安装配置pptp VPN服务','<p>源文章地址：<a target=\"_blank\" href=\"http://blog.plite.org/neo_one2199/2011/04/03/installing-and-configuring-pptp-vpn-on-rhelcentos-5/\">http://blog.plite.org/neo_one2199/2011/04/03/installing-and-configuring-pptp-vpn-on-rhelcentos-5/</a></p>\r\n<p>In the following tutorial, I will explain how to set up a PPTP VPN  \r\nserver on RHEL/CentOS 5, so that you can use it to browse the internet. \r\n So, if you have a RHEL/CentOS 5 dedicated server in US, you will be \r\nable  to access US only sites.</p>\r\n<p>A set up like this also has other benefits. Since the connection  \r\nbetween the server and your computer will be encrypted, your ISP wont be\r\n  able to intercept or track your internet usage.</p>\r\n<p><strong>Installation and Configuration</strong></p>\r\n<p>Ok, so lets get started. First make sure that you have ppp installed.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">yum install ppp</pre><p></p>\r\n<p>In my case it was already installed, so I got the message ‘Package ppp – 2.4.4-1.el5.x86_64 is already installed’.</p>\r\n<p>After you make sure that you have ppp installed, download and install Poptop. You can get the RHEL/CentOS 5 RPMs from <a href=\"http://poptop.sourceforge.net/yum/stable/rhel5/\" target=\"_blank\">http://poptop.sourceforge.net/yum/stable/rhel5/</a>. I was using 64 bit version of CentOS 5. So I downloaded and installed the 64 bit (x86_64) version of the RPM.</p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">wget http://poptop.sourceforge.net/yum/stable/rhel5/x86_64/pptpd-1.3.4-1.rhel5.1.x86_64.rpm\r\n\r\nrpm -ivh pptpd-1.3.4-1.rhel5.1.x86_64.rpm</pre><p>After installing Poptop, open the file /etc/pptpd.conf.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">nano /etc/pptpd.conf</pre><p></p>\r\n<p>Go to the end of the file where you can see examples of localip and  \r\nremoteip. Below them add your own values for localip and remoteip.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">localip 10.0.0.1\r\nremoteip 10.0.0.10-100</pre><p></p>\r\n<p>In the above, 10.0.0.1 will be used for the ppp interface and  \r\n10.0.0.10 – 10.0.0.100 will be assigned to the clients. You can also use\r\n  different private IPs in ‘localip’ and ‘remoteip’, like 10.20.26.1 and\r\n  10.20.26.10-100. The <a href=\"http://www.openvpn.net/\" target=\"_blank\">OpenVPN</a> documentation has some good info about numbering private subnets. <a href=\"http://openvpn.net/index.php/documentation/howto.html#numbering\" target=\"_blank\">Click here</a> to check it out.</p>\r\n<p>Next, open the file /etc/ppp/options.pptpd.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">nano /etc/ppp/options.pptpd</pre><p></p>\r\n<p>Uncomment the ms-dns lines (by removing the ‘#’ in front of them) and\r\n  change them to the dns servers provided by your ISP or to public DNS  \r\nservers like ones provided by <a href=\"http://www.opendns.com/\" target=\"_blank\">OpenDNS</a>.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">ms-dns 208.67.222.222\r\nms-dns 208.67.220.220</pre><p></p>\r\n<p>Thats all you need to change in the options.pptpd file. Next you will\r\n  need to edit the file /etc/ppp/chap-secrets to add usernames and  \r\npasswords for your <em>clients</em>. You need to enter the usernames and passwords in the following format.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\"># Secrets for authentication using CHAP\r\n# client server secret IP addresses\r\nusername pptpd password *\r\nusername2 pptpd password2 *</pre><p></p>\r\n<div style=\"float:none;margin:1px 0 1px 0;text-align:center;\">\r\n<div align=\"center\">\r\n</div>\r\n</div>\r\n<p>You can also put a * in place of ‘pptpd’ just like there is a * below\r\n  ‘IP addresses’. Also instead of a * below ‘IP addresses’ you can put  \r\nthe IP address from which the client will be connecting.</p>\r\n<p>&nbsp;</p>\r\n<p><strong>IP Forwarding and Firewall Rules</strong></p>\r\n<p>Now we need to enable IP forwarding. So open the file /etc/sysctl.conf and set ‘net.ipv4.ip_forward’ to 1.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">net.ipv4.ip_forward = 1</pre><p></p>\r\n<p>To make the changes to sysctl.conf take effect, use the following command.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">sysctl -p</pre><p></p>\r\n<p>Or you can also use the following command to enable IP forwarding temporarily.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</pre><p></p>\r\n<p>Next, configure iptables to do NAT.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</pre><p></p>\r\n<blockquote>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<p>Are you using a VPS? If yes, then the ipt_MASQUERADE module is most likely disabled. So, try the following instead.</p>\r\n<p>iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -o eth0 -j SNAT --to 77.77.77.77</p>\r\n<p>Change 77.77.77.77 to the public IP address of your server.</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</blockquote>\r\n<p>Next, we need to allow TCP port 1723 and the GRE protocol through iptables.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">iptables -A INPUT -i eth0 -p tcp --dport 1723 -j ACCEPT\r\niptables -A INPUT -i eth0 -p gre -j ACCEPT</pre><br />\r\n<p></p>\r\n<p>The following iptables rules are necessary if you want to be able to route all your internet traffic through the VPN server.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">iptables -A FORWARD -i ppp+ -o eth0 -j ACCEPT\r\niptables -A FORWARD -i eth0 -o ppp+ -j ACCEPT</pre><p></p>\r\n<p>Now start the PPTP server if you haven’t already.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">service pptpd start</pre><p></p>\r\n<p>If you followed the above steps correctly, the PPTP server should now be ready for use.</p>\r\n<p><strong>Troubleshooting</strong></p>\r\n<p>In case you are unable to connect to the VPN, check out the following\r\n  Microsoft knowledge base article. It has some good troubleshooting  \r\ntips.</p>\r\n<p><a rel=\"nofollow\" href=\"http://support.microsoft.com/kb/314076/en-us\" target=\"_blank\">http://support.microsoft.com/kb/314076/en-us</a></p>\r\n<p>If you are unable to browse certain sites through the VPN, you may  \r\nneed to change the MTU of the ppp interface. To do this open the <strong>/etc/ppp/ip-up</strong> file and just before the last line, add the following line.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">/sbin/ifconfig $1 mtu 1400</pre><p></p>\r\n<p>Save the file after that and then restart the PPTP server.</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">service pptpd restart</pre><p></p>\r\n<p>In my case the ppp interface was being assigned 1396 as the MTU. Due \r\n to which I was unable to browse some sites. After changing MTU to 1400,\r\n  the problem went away.</p>\r\n<p><strong>Notes</strong></p>\r\n<p>If you are not satisfied with PPTP you should try OpenVPN. You will find excellent <a href=\"http://www.openvpn.net/index.php/documentation/howto.html\" target=\"_blank\">documentation</a> on their website.</p>\r\n<p>Anyway, I hope you have found the above tutorial useful. <img src=\"http://blog.plite.org/neo_one2199/wp-includes/images/smilies/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" /> </p>','<p>源文章地址：<a target=\"_blank\" href=\"http://blog.plite.org/neo_one2199/2011/04/03/installing-and-configuring-pptp-vpn-on-rhelcentos-5/\">http://blog.plite.org/neo_one2199/2011/04/03/installing-and-configuring-pptp-vpn-on-rhelcentos-5/</a></p>\r\n<p>In the following tutorial, I will explain how to set up a PPTP VPN  \r\nserver on RHEL/CentOS 5, so that you can use it to browse the internet. \r\n So, if you have a RHEL/CentOS 5 dedicated server in US, you will be \r\nable  to access US only sites.</p>\r\n<p>A s','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(140,'fedora配置笔记','<p>配置vpn</p>\r\n<p><a href=\"http://hi.baidu.com/zwc137149/item/c0707714ce1842e9dceeca40\">http://hi.baidu.com/zwc137149/item/c0707714ce1842e9dceeca40</a></p>\r\n<p>&nbsp;开启root登录</p>\r\n<p>&nbsp;<a href=\"http://xxqhome.blog.163.com/blog/static/19673302020111021102752910/\">http://xxqhome.blog.163.com/blog/static/19673302020111021102752910/</a></p>\r\n<p>开启ssh</p>\r\n<p><a href=\"http://hi.baidu.com/wuwei199008/item/387c29dda81335f293a9743a\">http://hi.baidu.com/wuwei199008/item/387c29dda81335f293a9743a</a></p>\r\n<p>iptables设置</p>\r\n<p><a href=\"http://hi.baidu.com/jenningsloy318/item/a4e1dc3cd23c67fbde2221ae\">http://hi.baidu.com/jenningsloy318/item/a4e1dc3cd23c67fbde2221ae</a></p>','<p>配置vpn</p><p><a href=\"http://hi.baidu.com/zwc137149/item/c0707714ce1842e9dceeca40\">http://hi.baidu.com/zwc137149/item/c0707714ce1842e9dceeca40</a></p><p>&nbsp;开启root登录</p><p>&nbsp;<a href=\"http://xxqhome.blog.163.com/blog/static/19673302020111021102752910/\">http://xxqhome.blog.163.com/blog/static/19673302020111021102752910/</a></p><p>开启ssh</p><p><a href=\"http://hi.baidu.com/wuwei199008/item/387c29dda81335f293a9743a\">http://hi.baidu.com/wuwei199008/item/387c29dda81335f293a9743a</a></p><p>iptabl','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(141,'在SAE安家落户了','&nbsp; &nbsp; 先这样吧，暂时就在SAE上安家落户吧，域名就先用ithink这个了，以后多多写日志了。<br />','&nbsp; &nbsp; 先这样吧，暂时就在SAE上安家落户吧，域名就先用ithink这个了，以后多多写日志了。<br />','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(142,'【转载】windows 2003 配置VPN服务','<p></p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">转自：<span><span style=\"background-color:#ffffff;color:#e53333;\"><b><a href=\"http://blog.chinaunix.net/space.php?uid=21323988&amp;do=blog&amp;id=1827883\" target=\"_blank\"><span style=\"color:#e53333;\">http://blog.chinaunix.net/space.php?uid=21323988&amp;do=blog&amp;id=1827883</span></a></b></span></span></p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\"><span><span style=\"background-color:#ffffff;color:#e53333;\"><br />\r\n</span></span></p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">WINDOWS SERVER 2003单网卡VPN代理服务器架设</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">开启VPN需要的服务<br />\r\n-----------------------------------------服务器----------------<br />\r\n服务里面：<br />\r\nwindows自带防火墙 （windows firewall/internet connection sharing(ICS)）要停止（或允许1723端口）<br />\r\n远程注册表服务(remote Registry) 必需开启<br />\r\nserver服务(Server)必需开启<br />\r\nrouter路由服务(Routing and Remote Access)必需开启<br />\r\n然后 开始--设置--控制面版--管理工具--路由和远程访问</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">****（本地） 右键选配置并启用路由和远程访问 下一步 选 自定义配置[选这个可以使用单网卡的情况，默认单网卡是不给开VPN服务的]</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">再勾选 VPN访问 和 NAT/基本防火墙 下一步 完成 是</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">右击****（本地）属性 IP选项卡 默认是选择动态主机配置协议（DHCP)由服务器自动分配IP</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">也可以选择选静态地址池,随便添个内网IP范围 例如：起始IP地址：192.168.8.2 结束IP地址192.168.8.254</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">确定保存！</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">下一步找到IP路由选择 → NAT/基本防火墙 右键 选择第一个 新增接口 在这里选本地连接 公用接口连接到Internet 在此接口上启用NAT 前勾上</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">确定保存!退出</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">在到计算机管理→本地用户和组--用户 选一个要拨入的用户 点 右键 属性 拨入选项卡 选允许拨入 确定</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">这样VPN就基本设置就完成了。<br />\r\n-----------------------------------------本机上的操作----------------</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">下面配置自己的机子连接VPN</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">网上邻居 右键属性 新建连接向导 下一步 选‘连接到我的工作场所的网络’</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">下一步 选虚拟网络专用连接 随便输入一个公司名 下一步 输入服务器IP或（域名） 完成</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">输入刚刚设置的拨入用户 连接进去之后</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">在CMD下输入 IPCONFIG -ALL 可以发现多了一个IP地址了</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">好了在去<a href=\"http://www.ip138.com/\" style=\"text-decoration:none;color:#63401b;\">www.ip138.com</a>先看下没连接VPN之前的IP</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">用VPN连接之后在看看IP</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">自己现在的IP是不和VPN服务器的一样了！</p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">这样代理服务器就弄好了</p>\r\n<p></p>','<p></p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-height:1.5;font-size:14px;font-family:宋体, Arial;background-color:#f5f7f8;\">转自：<span><span style=\"background-color:#ffffff;color:#e53333;\"><b><a href=\"http://blog.chinaunix.net/space.php?uid=21323988&amp;do=blog&amp;id=1827883\" target=\"_blank\"><span style=\"color:#e53333;\">http://blog.chinaunix.net/space.php?uid=21323988&amp;do=blog&amp;id=1827883</span></a></b></span></span></p>\r\n<p style=\"margin-bottom:0px;padding:5px 0px 0px;line-hei','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(143,'myeclipse tomcat 内存不足','在myeclipse的tomcat的jdk中加入以下选项<br />\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">-Xms1024M   -Xmx1024M -XX:MaxPermSize=400M</pre><br />','在myeclipse的tomcat的jdk中加入以下选项<br />\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">-Xms1024M   -Xmx1024M -XX:MaxPermSize=400M</pre><br />','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(144,'Servlet Request对象的几个方法取值','<p>请求的URL地址：</p>\r\n<p>http://localhost:8080/StudyJspBBS/servlet/TestServlet/aaa/bb/ssss?a=2</p>\r\n<p>取值：</p>\r\n<p><pre class=\"brush:java; toolbar: true; auto-links: true;\">ContextPath : /StudyJspBBS\r\nQueryString : a=2\r\nRequestURI : /StudyJspBBS/servlet/TestServlet/aaa/bb/ssss\r\nRequestURL : http://localhost:8080/StudyJspBBS/servlet/TestServlet/aaa/bb/ssss\r\nPathTranslated : D:\\apache-tomcat-7.0.29\\webapps\\StudyJspBBS\\aaa\\bb\\ssss</pre></p>','<p>请求的URL地址：</p><p>http://localhost:8080/StudyJspBBS/servlet/TestServlet/aaa/bb/ssss?a=2</p><p>取值：</p><p><pre class=\"brush:java; toolbar: true; auto-links: true;\">ContextPath : /StudyJspBBS\r\nQueryString : a=2\r\nRequestURI : /StudyJspBBS/servlet/TestServlet/aaa/bb/ssss\r\nRequestURL : http://localhost:8080/StudyJspBBS/servlet/TestServlet/aaa/bb/ssss\r\nPathTranslated : D:\\apache-tomcat-7.0.29\\webapps\\StudyJspBBS\\aaa\\bb\\ssss</pre></p>','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(145,'PHP/MySQL 学习笔记（1）MySQL笔记','<p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\">1. MySQL 联接</p><p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\">（1）INNER JOIN 内连接，取得两个表中共同相关的记录。</p><p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\">（2）LEFT/RIGHT (OUTER) JOIN 外连接，分为左外连接和右外连接</p><p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\">（3）更新操作和删除操作时使用JOIN</p><p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\"><br /></p><pre class=\"brush:sql; toolbar:true; auto-links:true;\">UPDATE flags INNER JOIN colors USING(color) \nSET flags.color = UPPER(color)\nWHERE colors.is_dark = \'yes\'</pre><p>2.MySQL提供了四个用于流程控制的函数：IF(), CASE , IFNULL(), NULLIF()</p><p><br /></p><p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\">3. 修改表</p><p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\"><br /></p><pre class=\"brush:sql; toolbar:true; auto-links:true;\">ALTER TABLE flags\nADD FOREIGN KEY (color)\nREFERENCES colors(color)\nON DELETE CASCADE;</pre><p>4.清空表</p><p><br /></p><p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\"><br /></p><pre class=\"brush:sql; toolbar:true; auto-links:true;\">TRUNCATE TABLE examples;</pre><p>5.查看建表语句</p><p><br /></p><p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\"><br /></p><pre class=\"brush:sql; toolbar:true; auto-links:true;\">SHOW CREATE TABLE example\\G</pre><p>6.MySQL潜在行为</p><p><br /></p><p style=\"font-family:微软雅黑, &#39;microsoft yahei&#39;, 微软雅黑, tahoma, arial, helvetica, stheiti;font-size:14px;line-height:21px;margin-bottom:0px;\"><br /></p><pre class=\"brush:sql; toolbar:true; auto-links:true;\">1. VARCHAR类型的列存储数据少于四个字节时将被自动转换成CHAR类型\n2. 所有的TIMESTAMP（时间戳）列将会被自动添加NOT NULL约束\n3. 使用二进制CHARACTER SET关键字定义的字符串类型的列将会自动转换成对应的二进制数据类型，如VARCHAR转换为VARBINARY类型</pre><p><br /></p>','1. MySQL 联接\n（1）INNER JOIN 内连接，取得两个表中共同相关的记录。\n（2）LEFT/RIGHT (OUTER) JOIN 外连接，分为左外连接和右外连接\n（3）更新操作和删除操作时使用JOIN\n','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(146,'仙剑奇侠传5前传 悲情结局','<p><iframe height=\"498\" width=\"510\" frameborder=\"0\" src=\"http://player.youku.com/embed/XNTAyMzMyMTk2\"></iframe></p>','结束了，又是一个悲剧的结局','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(147,'在MyEclipse中javadoc编码错误','<p>在导出doc的时候，在vm options中添加以下语句：</p><pre class=\"brush:java;toolbar:false;\">-encoding UTF-8 -charset UTF-8</pre><p><br /></p><p>即可。</p><p><br /></p>','在导出doc的时候，在vm options中添加以下语句：\n-encoding UTF-8 -charset UTF-8\n即可。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(148,'【转】JBPM5 简单示例 ','<div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\"> &nbsp; &nbsp;功能是提示用户输入月收入，然后根据该收入，判断该用户是否可以开信用卡，然后给出结果。<br /></div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">在左边导航栏按右键，选择new-&gt;other-&gt;jbpm-&gt;jbpm project，给project取名trial。</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">双击导航栏里的trial-&gt;src/main/resource下的sample.bpmn,会在主界面打开该流程定义，将其改为如下的流程：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\"><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=5a658a610100uojr&amp;url=http://s7.sinaimg.cn/orignal/5a658a61ga3f768ea1b16\" target=\"_blank\" style=\"text-decoration:none;color:#3e73a0;\"><img src=\"http://s7.sinaimg.cn/bmiddle/5a658a61ga3f768ea1b16&amp;690\" real_src=\"http://s7.sinaimg.cn/bmiddle/5a658a61ga3f768ea1b16&amp;690\" width=\"490\" height=\"443\" name=\"image_operate_77501306184053265\" alt=\"JBPM5 &lt;wbr&gt;实例教程\" title=\"JBPM5 &lt;wbr&gt;实例教程\" action-data=\"http%3A%2F%2Fs7.sinaimg.cn%2Fbmiddle%2F5a658a61ga3f768ea1b16%26690\" action-type=\"show-slide\" style=\"margin:0px auto;padding:0px;border:0px;list-style:none;display:block;\" /></a><br />首先为该流程的properties（在该流程图下面的一排小按键里有一个Properties）添加两个变量，type和income,类型为String和Integer, type用来储存客户是qualified还是unqualified,income是客户输入的月收入。</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">然后点击input这个node,在它的Properties中的Action属性加入一段代码，如下图：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\"><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=5a658a610100uojr&amp;url=http://s16.sinaimg.cn/orignal/5a658a61ga3f7abb9391f\" target=\"_blank\" style=\"text-decoration:none;color:#3e73a0;\"><img src=\"http://s16.sinaimg.cn/middle/5a658a61ga3f7abb9391f&amp;690\" real_src=\"http://s16.sinaimg.cn/middle/5a658a61ga3f7abb9391f&amp;690\" width=\"690\" height=\"502\" name=\"image_operate_28821306184422778\" alt=\"JBPM5 &lt;wbr&gt;实例教程\" title=\"JBPM5 &lt;wbr&gt;实例教程\" action-data=\"http%3A%2F%2Fs16.sinaimg.cn%2Fmiddle%2F5a658a61ga3f7abb9391f%26690\" action-type=\"show-slide\" style=\"margin:0px auto;padding:0px;border:0px;list-style:none;display:block;\" /></a><br />在Action editor的imports里加上：import java.io.*,然后点击OK保存。</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">点击第一个gateway node（流程图里带X的绿色节点），将它的Type改成XOR，然后编辑Constraints,如下图：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\"><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=5a658a610100uojr&amp;url=http://s3.sinaimg.cn/orignal/5a658a61ga3f7c1d64242\" target=\"_blank\" style=\"text-decoration:none;color:#3e73a0;\"><img src=\"http://s3.sinaimg.cn/middle/5a658a61ga3f7c1d64242&amp;690\" real_src=\"http://s3.sinaimg.cn/middle/5a658a61ga3f7c1d64242&amp;690\" width=\"690\" height=\"412\" name=\"image_operate_99271306184599597\" alt=\"JBPM5 &lt;wbr&gt;实例教程\" title=\"JBPM5 &lt;wbr&gt;实例教程\" action-data=\"http%3A%2F%2Fs3.sinaimg.cn%2Fmiddle%2F5a658a61ga3f7c1d64242%26690\" action-type=\"show-slide\" style=\"margin:0px auto;padding:0px;border:0px;list-style:none;display:block;\" /></a><br /><br />点击Edit,编辑流程走左边分支（Qualified）的条件，在弹出窗口中加入如下代码：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\"><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=5a658a610100uojr&amp;url=http://s9.sinaimg.cn/orignal/5a658a61ga3f7ccc463f8\" target=\"_blank\" style=\"text-decoration:none;color:#3e73a0;\"><img src=\"http://s9.sinaimg.cn/middle/5a658a61ga3f7ccc463f8&amp;690\" real_src=\"http://s9.sinaimg.cn/middle/5a658a61ga3f7ccc463f8&amp;690\" name=\"image_operate_93931306185126864\" alt=\"JBPM5 &lt;wbr&gt;实例教程\" title=\"JBPM5 &lt;wbr&gt;实例教程\" action-data=\"http%3A%2F%2Fs9.sinaimg.cn%2Fmiddle%2F5a658a61ga3f7ccc463f8%26690\" action-type=\"show-slide\" style=\"margin:0px auto;padding:0px;border:0px;list-style:none;display:block;\" /></a><br />这表示当用户的收入大于2000元时，流程走Qualified这边，表示客户可以办理信用卡。</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">同样方法编辑Unqualified那一边，加入代码return income &lt; 2001;</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">接着点击Qualified这个node,编辑其Properties下面的Action属性，加入：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">kcontext.setVariable(&quot;Type&quot;,&quot;Qualified&quot;);</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">这句代码将流程变量Type的值设置为Qualified。</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">用同样的方法为Unqualified节点的Action属性添加如下代码：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">kcontext.setVariable(&quot;Type&quot;,&quot;Unqualified&quot;);</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">再接着点击Script这个节点，为它的Action属性加上代码，如下图：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\"><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=5a658a610100uojr&amp;url=http://s14.sinaimg.cn/orignal/5a658a61ga3f7ed7b665d\" target=\"_blank\" style=\"text-decoration:none;color:#3e73a0;\"><img src=\"http://s14.sinaimg.cn/middle/5a658a61ga3f7ed7b665d&amp;690\" real_src=\"http://s14.sinaimg.cn/middle/5a658a61ga3f7ed7b665d&amp;690\" width=\"690\" height=\"471\" name=\"image_operate_23261306185600145\" alt=\"JBPM5 &lt;wbr&gt;实例教程\" title=\"JBPM5 &lt;wbr&gt;实例教程\" style=\"margin:0px auto;padding:0px;border:0px;list-style:none;display:block;\" /></a><br />该节点确认用户收入，并输出一条消息，以通知用户是否够资格办理credit card。</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">现在测试一下流程，运行ProcessTest.java这个程序，系统会在console窗口输出：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">Please input your monthly income</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">输入3000,回车，</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">系统会显示：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\"><div>Your income is:3000</div><div>You are Qualified for the credit card</div></div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\">如下图：</div><div style=\"color:#464646;font-family:simsun;font-size:14px;line-height:21px;\"><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=5a658a610100uojr&amp;url=http://s2.sinaimg.cn/orignal/5a658a61ga3f806810a71\" target=\"_blank\" style=\"text-decoration:none;color:#3e73a0;\"></a><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=5a658a610100uojr&amp;url=http://s3.sinaimg.cn/orignal/5a658a61ga3f8095717f2\" target=\"_blank\" style=\"text-decoration:none;color:#3e73a0;\"><img src=\"http://s3.sinaimg.cn/middle/5a658a61ga3f8095717f2&amp;690\" real_src=\"http://s3.sinaimg.cn/middle/5a658a61ga3f8095717f2&amp;690\" width=\"688\" height=\"262\" name=\"image_operate_91821306185619017\" alt=\"JBPM5 &lt;wbr&gt;实例教程\" title=\"JBPM5 &lt;wbr&gt;实例教程\" action-data=\"http%3A%2F%2Fs3.sinaimg.cn%2Fmiddle%2F5a658a61ga3f8095717f2%26690\" action-type=\"show-slide\" style=\"margin:0px auto;padding:0px;border:0px;list-style:none;display:block;\" /></a></div><p><br /></p><p><strong><span style=\"background-color:#92d050;\">注意：</span></strong></p><p><strong><span style=\"background-color:#92d050;\">该实例中有部分小错误，如最后System.out.println(&quot;You are &quot;+type+&quot;for the credit card&quot;);是type,不是customerType.</span></strong></p><p><strong><span style=\"background-color:#92d050;\"><br /></span></strong></p><p><strong><span style=\"background-color:#92d050;\"></span></strong></p><hr /><p>转自：http://blog.sina.com.cn/s/blog_5a658a610100uojr.html</p>','功能是提示用户输入月收入，然后根据该收入，判断该用户是否可以开信用卡，然后给出结果。\n在左边导航栏按右键，选择new->other->jbpm->jbpm project，给project取名trial。\n双击导航栏里的trial->src/main/resource下的sample.bpmn,会在主界面打开该流程定义，将其改为如下的流程','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(149,'PHP/MySQL 学习笔记（2）使用正则表达式','<p>1. PHP中的正则表达式以一个定界符开始和结束，通常是斜杠字符（/）， 但也可以是出现在表达式首字符位置的任意字符，相比之下，在MySQL中正则表达式不含有定界符。PHP中也通常把#当做正则表示的定界符。修饰符位于结束定界符的后面，用来改变正则表达式的行为。修饰符i用来表示正则表达式不区分大小写。</p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">/yin\\/yang/i\r\n#yin/yang#i</pre>2. 重要的简写字符<p></p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">\\s 匹配空白字符（如空格、换行、回车）：[\\t\\n\\r]\r\n\\d 匹配数字[0-9]\r\n\\w 匹配[A-Za-z0-9_]\r\n字母大写将取反</pre>3. 通配符<p></p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">【lookaheads（正向预查）】\r\n\r\n使用=号（！代替=为取反的意思）\r\n\r\n【lookbehinds（反向预查）】\r\n\r\n使用&lt;=号（！代替=为取反的意思）\r\n\r\n例如：\r\n\r\n/(?&lt;=a)b(=c)/</pre><p></p>\r\n<p>&nbsp;4. 任何限定符通过使用？可以变成惰性类型（lazy）：尽可能少的匹配</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">/(\'|\")[^\\1]*<span style=\"color:#e53333;\">?</span>\\1/\r\n\r\n\\1是反向引用</pre>5. ？在正则表达式中的作用</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">1. 标记前面的字符、分组或字符类是可选的。\r\n2. 将前面的限定符变成惰性类型，而贪婪（greedy）的类型会尽可能多的匹配字符串\r\n3. 标示分组的类型（如果问号直接放到开始的圆括号之后）</pre>6. 文档化正则表达式（注释）</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">(?#注释内容)</pre>7. PHP中可以使用preg_函数使用Perl类型的额正则表达式，ereg_函数在PHP5.3版本中已经不再支持和使用</p>\r\n<p>8. MySQL中使用正则表达式通过使用REGEXP和REGEXP BINARY,仅支持基本字符类、或操作、定位操作以及修饰符，不支持通配符lookaround、反向引用和捕获组.</p>\r\n<p><pre class=\"brush:sql; toolbar: true; auto-links: true;\">SELECT * FROM `links` \r\nWHERE `url` <span style=\"color:#e53333;\">REGEXP</span> \'https?://([a-z0-9-]*\\.)*example\\.com\'</pre>可以使用MySQL自定义函数库LIB_MYSQLUDF_PREG扩展MySQL使其支持反向引用和通配符，捕获组。</p>\r\n<p>MySQL中，RLIKE是REGEXP的别名。</p>\r\n<p>&nbsp;</p>','<p>1. PHP中的正则表达式以一个定界符开始和结束，通常是斜杠字符（/）， 但也可以是出现在表达式首字符位置的任意字符，相比之下，在MySQL中正则表达式不含有定界符。PHP中也通常把#当做正则表示的定界符。修饰符位于结束定界符的后面，用来改变正则表达式的行为。修饰符i用来表示正则表达式不区分大小写。</p><pre class=\"brush:php; toolbar: true; auto-links: true;\">/yin\\/yang/i\r\n#yin/yang#i</pre>2. 重要的简写字符<pre class=\"brush:php; toolbar: true; auto-links: true;\">\\s 匹配空白字符（如空格、换行、回车）：[\\t\\n\\r]\r\n\\d 匹配数字[0-9]\r\n\\w 匹配[A-Za-z0-9_]\r\n字母大写将取反</pre>3. 通配符<pre class=\"brush:php; toolbar: true; auto-links: true;\">【lookaheads（正向预查）】\r\n\r\n使用=号（！代替=为取反的意思）\r\n\r\n【lookb','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(150,'PHP/MySQL 学习笔记（3）高级PHP概念','<p>1. Iterator接口，Countable接口， SeekableIterator接口， ArrayAccess接口</p>\r\n<p>2. Lambda函数和闭包</p>\r\n<p>PHP4可以使用create_function()函数创建lambda风格的函数，但并不是实际意义上的匿名函数。</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">create_function(参数列表， 函数代码)</pre>PHP5.3之后提供了真正的lambda函数.</p>\r\n<p>闭包是指封装在当前作用域内的函数，即闭包定义所在范畴至少闭包自身能够访问。</p>\r\n<p>PHP中，变量利用值传递复制到闭包中。这种默认行为可以通过use语句的变量前显式添加&amp;更改。</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">$mul = 5;\r\n$x = function($number) use(&amp;$mul) {\r\n    return $mul * $number;\r\n}\r\n\r\necho $x(5);</pre>利用关键字use可以将初始域中的变量传递给闭包， 如果该变量不是对象，则进行的传递为值传递。不过，也可以使用符号&amp;使变量进行引用传递。关键字$this不能直接传递给闭包，它必须实现赋值给一个临时变量，通常用$self作为该临时变量。</p>','<p>1. Iterator接口，Countable接口， SeekableIterator接口， ArrayAccess接口</p><p>2. Lambda函数和闭包</p><p>PHP4可以使用create_function()函数创建lambda风格的函数，但并不是实际意义上的匿名函数。</p><p><pre class=\"brush:php; toolbar: true; auto-links: true;\">create_function(参数列表， 函数代码)</pre>PHP5.3之后提供了真正的lambda函数.</p><p>闭包是指封装在当前作用域内的函数，即闭包定义所在范畴至少闭包自身能够访问。</p><p>PHP中，变量利用值传递复制到闭包中。这种默认行为可以通过use语句的变量前显式添加&amp;更改。</p><p><pre class=\"brush:php; toolbar: true; auto-links: true;\">$mul = 5;\r\n$x = function($number) use(&amp;$mul) {\r\n    return $mul ','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(151,'Hibernate笔记 (1)','<p>创建第一个Hibernate程序</p>\r\n<p>使用MyEclipse8</p>\r\n<p>1. 创建java项目， 加入Hibernate开发能力。</p>\r\n<p>2. Hibernate配置文件（hibernate.cfg.xml） &nbsp;&nbsp;</p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">&lt;?xml version=\'1.0\' encoding=\'UTF-8\'?&gt;\r\n&lt;!DOCTYPE hibernate-configuration PUBLIC\r\n          \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n          \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\"&gt;\r\n\r\n&lt;!-- Generated by MyEclipse Hibernate Tools.                   --&gt;\r\n&lt;hibernate-configuration&gt;\r\n\r\n    &lt;session-factory&gt;\r\n        &lt;property name=\"hbm2ddl.auto\"&gt;update&lt;/property&gt;&lt;!-- 自动创建数据表 --&gt;\r\n        &lt;property name=\"dialect\"&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;\r\n        &lt;property name=\"connection.url\"&gt;jdbc:mysql://localhost:3306/test&lt;/property&gt;\r\n        &lt;property name=\"connection.username\"&gt;root&lt;/property&gt;\r\n        &lt;property name=\"connection.driver_class\"&gt;com.mysql.jdbc.Driver&lt;/property&gt;\r\n    	\r\n    	\r\n    	&lt;mapping resource=\"com/ithinkblog/po/News.hbm.xml\"/&gt;&lt;!-- Hibernate映射文件 --&gt;\r\n    &lt;/session-factory&gt;\r\n\r\n&lt;/hibernate-configuration&gt;</pre>3. 创建PO（News.java)<p></p>\r\n<p></p>\r\n<pre class=\"brush:java; toolbar: true; auto-links: true;\">package com.ithinkblog.po;\r\n\r\npublic class News {\r\n	private Integer id;\r\n	private String title;\r\n	private String content;\r\n	\r\n	public Integer getId() {\r\n		return id;\r\n	}\r\n	public void setId(Integer id) {\r\n		this.id = id;\r\n	}\r\n	public String getTitle() {\r\n		return title;\r\n	}\r\n	public void setTitle(String title) {\r\n		this.title = title;\r\n	}\r\n	public String getContent() {\r\n		return content;\r\n	}\r\n	public void setContent(String content) {\r\n		this.content = content;\r\n	}\r\n	\r\n}</pre><p>4. 创建映射文件（News.hbm.xml）</p>\r\n<p><pre class=\"brush:java; toolbar: true; auto-links: true;\">&lt;?xml version=\"1.0\"?&gt;\r\n&lt;!DOCTYPE hibernate-mapping PUBLIC\r\n        \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"\r\n        \"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\"&gt;\r\n\r\n&lt;hibernate-mapping package=\"com.ithinkblog.po\"&gt;\r\n	&lt;class name=\"News\" table=\"news_table\"&gt;\r\n		&lt;id name=\"id\"&gt;\r\n			&lt;generator class=\"identity\"&gt;&lt;/generator&gt;\r\n		&lt;/id&gt;\r\n		&lt;property name=\"title\"&gt;&lt;/property&gt;\r\n		&lt;property name=\"content\"&gt;&lt;/property&gt;\r\n	&lt;/class&gt;\r\n&lt;/hibernate-mapping&gt;</pre>代码模板可以在开发文档中找到</p>\r\n<p>5. 测试用例</p>\r\n<p><pre class=\"brush:java; toolbar: true; auto-links: true;\">package test;\r\n\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.cfg.Configuration;\r\nimport org.hibernate.classic.Session;\r\n\r\nimport com.ithinkblog.po.News;\r\n\r\n\r\npublic class Test {\r\n	@org.junit.Test\r\n	public void test(){\r\n		Configuration conf = new Configuration().configure();//初始化配置文件\r\n		SessionFactory sessionFactory = conf.buildSessionFactory();//创建session工厂\r\n		Session session  = sessionFactory.openSession();//打开session\r\n		Transaction tx = session.beginTransaction();//开始一个事务\r\n		\r\n		News n = new News();\r\n		n.setTitle(\"testNews1\");\r\n		n.setContent(\"Hello,world\");\r\n		\r\n		session.save(n);\r\n		\r\n		tx.commit();//提交事务\r\n		session.close();\r\n		sessionFactory.close();\r\n	}\r\n}</pre></p>\r\n<p>&nbsp;</p>\r\n<p>当然，还要在classpath中添加mysql的jdbc驱动程序。</p>\r\n<p></p>','<p>创建第一个Hibernate程序</p><p>使用MyEclipse8</p><p>1. 创建java项目， 加入Hibernate开发能力。</p><p>2. Hibernate配置文件（hibernate.cfg.xml） &nbsp;&nbsp;</p><pre class=\"brush:java; toolbar: true; auto-links: true;\">&lt;?xml version=\'1.0\' encoding=\'UTF-8\'?&gt;\r\n&lt;!DOCTYPE hibernate-configuration PUBLIC\r\n          \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n          \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\"&gt;\r\n\r\n&lt;!-- Generated by MyEclipse Hibernate Tools.                   --&gt;','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(152,'关于','<div class=\"ithink\">\r\n<p style=\"text-align:center;\"><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;\">我的作品</span></p>\r\n<p style=\"text-align:center;\"><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;\"><br />\r\n</span></p>\r\n<p style=\"text-align:center;\"><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;\"><br />\r\n</span></p>\r\n<p style=\"text-align:center;\"></p>\r\n<blockquote style=\"margin:0 0 0 40px;border:none;padding:0px;\"><p></p>\r\n<p></p>\r\n<ul><li><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;color:#337fe5;\"><a href=\"http://jpk.sdcjxy.com/JPKCQ/\" target=\"_blank\">山东城市建设职业学院物业管理精品课程群</a></span></li>\r\n</ul>\r\n<p></p>\r\n<p></p>\r\n<ul><li><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;color:#337fe5;\"><a href=\"http://www.daliboats.com/\" target=\"_blank\">大理茶花国际旅行社船舶检测站</a></span></li>\r\n</ul>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<ul><li><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;color:#337fe5;\"><a href=\"http://download.csdn.net/detail/mylxsw/4377387\" target=\"_blank\">师兄帮帮忙仿站</a></span></li>\r\n</ul>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<ul><li><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;color:#337fe5;\"><a href=\"http://download.csdn.net/detail/mylxsw/4817749\" target=\"_blank\">一览漫画后台管理系统SAE版（基于Smarty模板引擎）</a></span></li>\r\n</ul>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<ul><li><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;color:#337fe5;\"><a href=\"http://download.csdn.net/detail/mylxsw/4377348\" target=\"_blank\">Think图书借阅管理系统</a></span></li>\r\n</ul>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<ul><li><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;color:#337fe5;\"><a href=\"http://pan.baidu.com/share/link?shareid=178149&amp;uk=872644260\" target=\"_blank\">SmartLife智慧校园管理系统</a></span></li>\r\n</ul>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<ul><li><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;color:#337fe5;\"><a href=\"/#\" target=\"_blank\">SimpleFramework简单网站开发系统（半成品网站，基于ThinkPHP3.0，兼容SAE平台，后台采用DWZ框架模板，实现部分常见功能：RBAC权限控制，组管理，留言板，友链...)</a></span></li>\r\n</ul>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<ul><li><span style=\"font-family:\'Microsoft YaHei\';font-size:16px;color:#337fe5;\"><a href=\"/#\" target=\"_blank\">山东教育发展规划信息网（PHPCMS V9二次开发）</a></span></li>\r\n</ul>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<ul><li><span style=\"color:#337fe5;font-family:\'Microsoft YaHei\';font-size:16px;\"><a href=\"/#\">学位与研究生管理系统技术支持网 （不对外开放）</a></span></li>\r\n</ul>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<ul>\r\n<li><span style=\"color:#337fe5;font-family:\'Microsoft YaHei\';font-size:16px;\">&nbsp;.......</span></li>\r\n</ul>\r\n<p></p>\r\n<span style=\"font-size:16px;\"> </span><span style=\"color:#337fe5;font-size:16px;\"> </span><span style=\"font-size:16px;\"> </span><span style=\"color:#337fe5;font-size:16px;\"> </span><span style=\"font-size:16px;\"> </span><span style=\"color:#337fe5;font-size:16px;\"> </span><span style=\"font-size:16px;\"> </span><span style=\"color:#337fe5;font-size:16px;\"> </span> </blockquote>\r\n</div>\r\n<style type=\"text/css\">\r\n.ithink li{\r\n    list-style-type:square;\r\n}\r\n.ithink li:hover {\r\n    background-color:#CCC;\r\n   /* text-shadow:2px 2px 10px #7FFF00;*/\r\n}\r\n.ithink li a{\r\n    color:#1E90FF;\r\n    /*text-shadow:2px 2px 10px #000;*/\r\n}\r\n.ithink li a:hover{\r\n    color:#FF4500;\r\n   /* text-shadow:2px 2px 10px #7FFF00;*/\r\n}\r\n</style>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(153,'PHP之curl','<p>一. 函数简介</p>\r\n<p><p>curl_init() 初始化一个cURL会话</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">resource curl_init ([ string $url = NULL ] )</pre>curl_setopt() 设置一个CURL传输选项</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">bool curl_setopt ( resource $ch , int $option , mixed $value )</pre>curl_exec() 执行一个curl会话</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">mixed curl_exec ( resource $ch )</pre>curl_close() 关闭一个curl会话</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">void curl_close ( resource $ch )</pre>详情见<a href=\"http://www.php.net/manual/zh/book.curl.php\" target=\"_blank\">官方文档</a>。</p>\r\n<p>二. 一个文件上传的例子</p>\r\n<p>test/curl_upload.php &nbsp; &nbsp;访问该文件，将模拟表单提交文件到upload.php</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">&lt;?php\r\n$data= array(\r\n	\'name\' =&gt; \'test\',\r\n	\'file\' =&gt; \'@C:\\mylog.log\' //C盘的某个文件，注意，前缀要有一个@符号\r\n	);\r\n\r\n$ch = curl_init();//初始化curl\r\ncurl_setopt($ch	,CURLOPT_URL ,\"http://localhost/test/other/upload.php\" );\r\ncurl_setopt($ch , CURLOPT_POST , 1);\r\ncurl_setopt($ch , CURLOPT_POSTFIELDS, $data);\r\n\r\ncurl_exec($ch);\r\n\r\n?&gt;</pre>test/other/upload.php &nbsp; &nbsp;接受通过post提交的文件，并保存到test/data/文件夹中</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">&lt;?php\r\n\r\nif(move_uploaded_file($_FILES[\'file\'][\'tmp_name\'], \'../data/\' . $_FILES[\'file\'][\'name\'])){\r\n	echo \"success\";\r\n}else{\r\n	echo \"failed\";\r\n}\r\n?&gt;</pre></p>\r\n</p>','<p>一. 函数简介</p><p><p>curl_init() 初始化一个cURL会话</p><p><pre class=\"brush:php; toolbar: true; auto-links: true;\">resource curl_init ([ string $url = NULL ] )</pre>curl_setopt() 设置一个CURL传输选项</p><p><pre class=\"brush:php; toolbar: true; auto-links: true;\">bool curl_setopt ( resource $ch , int $option , mixed $value )</pre>curl_exec() 执行一个curl会话</p><p><pre class=\"brush:php; toolbar: true; auto-links: true;\">mixed curl_exec ( resource $ch )</pre>curl_close() 关闭一个curl会话</p><p><pre class=\"brush:php; toolbar:','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(154,'Go笔记 （1） 环境变量','<pre class=\"brush:cpp; toolbar: true; auto-links: true;\">$GOROOT    Go Tree（或者是安装的）的根目录，通常取值是$HOME/go，但是也可以更改它。\r\n$GOARCH    目标机器的处理器架构（取值：386,amd64, arm）\r\n$GOOS      目标机器的操作系统（取值: darwin, freebsd , linux , windows）\r\n$GOBIN     二进制文件（编译器，连接器等等）的安装位置，默认是$GOROOT/bin</pre><p>注意：</p>\r\n<p>&nbsp; &nbsp; 1. &nbsp;目标机器是指运行Go应用程序的机器。</p>\r\n<p>&nbsp;</p>\r\n<p>Go编译器允许跨平台编译，在一台机器上可以编译成其它架构，处理器上运行的程序。</p>\r\n<p>可以使用$GOHOSTOS和$GOHOSTARCH进行跨平台编译。</p>\r\n<p>&nbsp;</p>\r\n<p>以下环境变量会经常使用：</p>\r\n<p>&nbsp; &nbsp;<pre class=\"brush:cpp; toolbar: true; auto-links: true;\">$GOPATH    默认是GOROOT， 指定了包含Go源代码，包的二进制(object)和可执行程序（命令文件）；它们在分别GOPATH的src，pkg和bin子目录下，如果要使用go tool的话，必须设置合格环境变量。\r\n$GOROOT_FINAL  默认等于$GOROOT， 所以不需要显式的设置。如果在安装完Go以后，想要把安装后的文件移动到其他位置，使用这个变量包含最终的位置。\r\n$GOARM    针对ARM架构，可能取值是5,6，默认值是6\r\n$GOMAXPROCS    指定应用程序使用的处理器核心数目</pre></p>','<pre class=\"brush:cpp; toolbar: true; auto-links: true;\">$GOROOT    Go Tree（或者是安装的）的根目录，通常取值是$HOME/go，但是也可以更改它。\r\n$GOARCH    目标机器的处理器架构（取值：386,amd64, arm）\r\n$GOOS      目标机器的操作系统（取值: darwin, freebsd , linux , windows）\r\n$GOBIN     二进制文件（编译器，连接器等等）的安装位置，默认是$GOROOT/bin</pre><p>注意：</p><p>&nbsp; &nbsp; 1. &nbsp;目标机器是指运行Go应用程序的机器。</p><p>&nbsp;</p><p>Go编译器允许跨平台编译，在一台机器上可以编译成其它架构，处理器上运行的程序。</p><p>可以使用$GOHOSTOS和$GOHOSTARCH进行跨平台编译。</p><p>&nbsp;</p><p>以下环境变量会经常使用：</p><p>&nbsp; &nbsp;<pre class=\"brush:cpp; too','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(155,'Go笔记 (2) 安装后的目录结构','<p>\\bin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 所有的执行文件，比如，编译器和Go-tools</p>\r\n<p>\\doc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 帮助程序，程序之南，文档等等</p>\r\n<p>\\include&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; C/C++头文件</p>\r\n<p>\\lib&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 文档模板</p>\r\n<p>\\misc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; Go语言编辑器的配置文件，cgo示例</p>\r\n<p>\\pkg\\os_arch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 标准库的所有报的对象文件（.a）</p>\r\n<p>\\src&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; bash-script和制作命令文件</p>\r\n<p>\\cmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;编译器和命令的脚本和源文件（Go， C）</p>\r\n<p>\\lib9 \\libbio \\libmach&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C-文件</p>\r\n<p>\\pkg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Go标准库中所有包的源文件（开源）</p>','<p>\\bin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 所有的执行文件，比如，编译器和Go-tools</p><p>\\doc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(156,'PHP/MySQL 学习笔记（4） MySQL驱动程序和存储引擎','<p>1. 查看所有的存储引擎</p>\r\n<p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">SHOW ENGINES \\G</pre><p>输出结果：</p>\r\n<p>&nbsp;<a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/2ace7e0ddc324f941d9408346ec0013220121013143016.jpg\" id=\"ematt:2\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/2ace7e0ddc324f941d9408346ec0013220121013143016.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p>\r\n<p>2 . MySQL一般默认存储引擎是MyISAM,可以在配置文件my.cnf中修改default-storage-engine来改变默认存储引擎。</p>\r\n<p>3. 获取表的统计信息以及特定引擎的细节</p>\r\n<p><pre class=\"brush:sql; toolbar: true; auto-links: true;\">USE mysql\r\n\r\nSHOW TABLE STATUS LIKE \'db\' \\G</pre>结果：</p>\r\n<p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/2ace7e0ddc324f941d9408346ec0013220121013143837.jpg\" id=\"ematt:3\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/2ace7e0ddc324f941d9408346ec0013220121013143837.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p>\r\n<p>4. MyISAM主要用在读或写频率较高的环境中，但是并不适应于并发读/写的环境（因为表级锁定），当mysql数据库实例突然崩溃时， 无法保证数据的完整性。快速插入操作，支持全文索引。</p>\r\n<p>5.InnoDB</p>','<p>1. 查看所有的存储引擎</p><pre class=\"brush:sql; toolbar: true; auto-links: true;\">SHOW ENGINES \\G</pre><p>输出结果：</p><p>&nbsp;<a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/2ace7e0ddc324f941d9408346ec0013220121013143016.jpg\" id=\"ematt:2\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/2ace7e0ddc324f941d9408346ec0013220121013143016.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p><p>2 . MySQL一般默认存储引擎是MyISAM,可以在配置文件my.cnf中修改default-storage-engine来改','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(157,'PHP/MySQL 学习笔记（5）通过缓存提高性能','<p>1. C10K难题：服务器如何处理一万个并发的客户端连接。帮助解决C10K难题的两个主要组件是利用异步/非阻塞调用和有效缓存。</p>\r\n<p>2. PHP中间码缓存扩展接受PHP编译器生成的代码，并一起编译以后的格式对代码进行存储。常见的两种中间码缓存扩展：eAccelerator和APC，两者都是使用系统内存和磁盘进行缓存的。</p>\r\n<p>示例：</p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">APC:\r\napc_store(\"key\" , $object , 3600);\r\n$stored_object = apc_fetch(\"key\");\r\n\r\neAccelerator:\r\neaccelerator_put(\"key\" , serialize($object), 3600);\r\n$stored_object = unserialize(eaccelerator_get(\"key\"));</pre>3. 不应该在生产环境中部署既不含有APC也不含有eAccelerator的应用程序，因为他们都可以极大的提高性能。数据变化过于频繁的情况下，不应该使用本地用户缓存。本地用户缓存最大的缺点是多台服务器上统一数据生成了多个副本，如果有多个网络服务器，，就不要使用本地用户缓存。<p></p>\r\n<p>4. memcached是高性能的，分布式的内存对象缓存系统。本质上，它是一个简单的多线程的服务器，它分配内存以”key-value\"的方式提供缓存，从而为应用程序提供缓存数据，减轻与数据库交互的负载和对文件系统的访问。</p>\r\n<p>5. memcached能够更好地利用内存，因为它可以将多个独立的memcached服务器汇集成一个内存池。</p>\r\n<p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/eba7c9418d91b600b857dd88fec9e48720121016012807.jpg\" id=\"ematt:4\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/eba7c9418d91b600b857dd88fec9e48720121016012807.jpg\" alt=\"点击查看原图\" border=\"0\" style=\"padding:5px;border:1px solid #CCC;width:300px;\" /></a></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;6. memcached工作机制</p>\r\n<p>核心采用了也块分配器，并提供了一个字典或者哈希查找表，并将其项缓存到内存中，该字典是为了更快的性能，在网络上通过服务器利用libevent而建成（libevent是非堵塞的网络函数库）。</p>\r\n<p>memcached是一种LRU缓存，意味着当达到memcached的最大内存容量时，删除最旧且最少访问的存储数据，并用新的项替换那些数据，就删除掉的优先级顺序而言memcached首先替换失效的对象，然后在替换最旧及最近最少使用的对象。</p>\r\n<p>memcached不是CPU密集型的，只是简单利用了内存。</p>','<p>1. C10K难题：服务器如何处理一万个并发的客户端连接。帮助解决C10K难题的两个主要组件是利用异步/非阻塞调用和有效缓存。</p><p>2. PHP中间码缓存扩展接受PHP编译器生成的代码，并一起编译以后的格式对代码进行存储。常见的两种中间码缓存扩展：eAccelerator和APC，两者都是使用系统内存和磁盘进行缓存的。</p><p>示例：</p><pre class=\"brush:php; toolbar: true; auto-links: true;\">APC:\r\napc_store(\"key\" , $object , 3600);\r\n$stored_object = apc_fetch(\"key\");\r\n\r\neAccelerator:\r\neaccelerator_put(\"key\" , serialize($object), 3600);\r\n$stored_object = unserialize(eaccelerator_get(\"key\"));</pre>3. 不应该在生产环境中部署既不含有APC也不含有eAccelerator的应用程序，因为他们都可以极大的提','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(158,'CodeIgniter框架 学习笔记 （1） 研究源码时遇到的函数','<p>1. strpos和strrpos&nbsp;</p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) 查找字符串首次出现的位置\n\nint strrpos ( string $haystack , string $needle [, int $offset = 0 ] ) 查找字符串最后一次出现的位置</pre><p></p>\n<p>&nbsp;2. ucfirst</p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">string ucfirst ( string $str ) 将字符串的首字母转换为大写</pre>3. get_object_vars<p></p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">array get_object_vars ( object $obj ) 返回由对象属性组成的关联数组</pre><p></p>\n<p>&nbsp;4. array_unshift , array_shift, array_pop , array_push</p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">int array_unshift ( array &amp;$array , mixed $var [, mixed $... ] ) 在数组开头插入一个或多个单元 \n\nmixed array_shift ( array &amp;$array ) 将数组开头的单元移出数组\n\nint array_push ( array &amp;$array , mixed $var [, mixed $... ] ) 将一个或多个单元压入数组的末尾（入栈） \n\nmixed array_pop ( array &amp;$array ) 将数组最后一个单元弹出（出栈）</pre>5. array_diff , array_intersert (差集，交集）<p></p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">array array_diff ( array $array1 , array $array2 [, array $ ... ] ) 计算数组的差集</pre>6. pathinfo<p></p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">mixed pathinfo ( string $path [, int $options ] ) 返回文件路径的信息</pre>7. ob_start,&nbsp;<p></p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">bool ob_start ([ callback $output_callback [, int $chunk_size [, bool $erase ]]] ) 打开输出控制缓冲\n\n     此函数将打开输出缓冲。当输出缓冲是活跃的时候，没有输出能从脚本送出（除http标头外），\n相反输 出的内容被存储在内部缓冲区中。 内部缓冲区的内容\n可以用 ob_get_contents() 函数复制到一个字符串变量中。 \n    想要输出存储在内部缓冲区中的内容，可以使用 ob_end_flush() 函数。\n另外， 使用ob_end_clean() 函数会静默丢弃掉缓冲区的内容。\n    输出缓冲区是可堆叠的，这即意谓着，当有一个ob_start() 是活跃的时， \n你可以调用另一个 ob_start() 。 只要确保又正确调用了 ob_end_flush() 恰当的\n次数即可。 如果有多重输出回调函数是活跃的，输出内容会一直按嵌套的\n顺序依次通过它们而被过滤。 </pre><p></p>\n<p>&nbsp;8.eval</p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">mixed eval ( string $code_str ) 把字符串作为PHP代码执行</pre><p></p>\n<p>&nbsp;9.is_uploaded_file</p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">bool is_uploaded_file ( string $filename ) 判断文件是否是通过 HTTP POST 上传的</pre><p></p>\n<p>&nbsp;10. stripslashes</p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">string stripslashes ( string $str ) 反引用一个引用字符串。 </pre><p></p>\n<p>&nbsp;11.strrev</p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">string strrev ( string $string ) 反转字符串</pre><p></p>\n<p>&nbsp;12. php_sapi_name</p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">string php_sapi_name ( void ) 返回在web服务器和PHP之间的接口类型\nReturns the type of interface between web server and PHP .\nReturns a lowercase string that describes the type of interface (the Server API, SAPI) that PHP is using. For example, in CLI PHP this string will be \"cli\" whereas with Apache it may have several different values depending on the exact SAPI used. Possible values are listed below. \nthe possible return values include aolserver, apache, apache2filter, apache2handler, caudium, cgi (until PHP 5.3), cgi-fcgi, cli, continuity, embed, isapi, litespeed, milter, nsapi, phttpd, pi3web, roxen, thttpd, tux, and webjames. \n\n注意：常量PHP_SAPI与该函数的值是一样的。</pre>13. array_slice<p></p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">array array_slice ( array $array , int $offset [, int $length [, bool $preserve_keys ]] ) 从数组中取出一段\n注意：分割数组后，新段的键将会默认失效，编程0,1,2...\npreserve_keys 为true的时候，会保留key，否则不保留。\n\n&lt;?php\n$input = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n\n$output = array_slice($input, 2);      // returns \"c\", \"d\", and \"e\"\n$output = array_slice($input, -2, 1);  // returns \"d\"\n$output = array_slice($input, 0, 3);   // returns \"a\", \"b\", and \"c\"\n\n// note the differences in the array keys\nprint_r(array_slice($input, 2, -1));\nprint_r(array_slice($input, 2, -1, true));\n?&gt; \n\n以上例程会输出：\n\nArray\n(\n    [0] =&gt; c\n    [1] =&gt; d\n)\nArray\n(\n    [2] =&gt; c\n    [3] =&gt; d\n)</pre><p></p>\n<p>&nbsp;14. preg_split</p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">array preg_split ( string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]] )通过一个正则表达式分隔给定字符串. </pre>15.dirname<p></p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">string dirname ( string $path )返回路径中的目录部分</pre>16.parse_str<p></p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">void parse_str ( string $str [, array &amp;$arr ] )解析字符串到变量中\nParses str as if it were the query string passed via a URL and sets variables in the current scope. </pre>17.parse_url<p></p>\n<p></p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">array parse_url ( string $url )本函数解析一个 URL 并返回一个关联数组，包含在 URL 中出现的各种组成部分。 \n\n本函数不是用来验证给定 URL 的合法性的，只是将其分解为下面列出的部分。不完整的 URL 也被接受，parse_url() 会尝试尽量正确地将其解析。 </pre><p></p>\n<p>&nbsp;18.getenv</p>\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">string getenv ( string $varname )\n\nGets the value of an environment variable</pre>19.preg_quote</p>\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">string preg_quote ( string $str [, string $delimiter = NULL ] )转义正则表达式字符\n\npreg_quote()需要参数str并向其中 每个正则表达式语法中的字符前增加一个反斜线. 这通常用于你有一些运行时字符串 需要作为正则表达式进行匹配的时候.\n \n正则表达式特殊字符有: . \\ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | : - </pre></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>','<p>1. strpos和strrpos&nbsp;</p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) 查找字符串首次出现的位置\n\nint strrpos ( string $haystack , string $needle [, int $offset = 0 ] ) 查找字符串最后一次出现的位置</pre><p>&nbsp;2. ucfirst</p>\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">string ucfirst ( string $str ) 将字符串的首字母转换为大写</pre>3. get_object_vars<pre class=\"brush:php; toolbar: true; auto-links: true;\">array get_object_vars ( object $','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(159,'CodeIgniter框架 学习笔记 （2） Session类','<pre class=\"brush:php; toolbar: true; auto-links: true;\">// ------------------------------------------------------------------------\r\n/*Session存数据库的表\r\n * CREATE TABLE IF NOT EXISTS  `ci_sessions` (\r\n	session_id varchar(40) DEFAULT \'0\' NOT NULL,\r\n	ip_address varchar(45) DEFAULT \'0\' NOT NULL,\r\n	user_agent varchar(120) NOT NULL,\r\n	last_activity int(10) unsigned DEFAULT 0 NOT NULL,\r\n	user_data text NOT NULL,\r\n	PRIMARY KEY (session_id),\r\n	KEY `last_activity_idx` (`last_activity`)\r\n);\r\n配置文件内容\r\n$config[\'sess_use_database\'] = TRUE;\r\n$config[\'sess_table_name\'] = \'ci_sessions\';\r\n * \r\n * \r\n * 使用数据库存储时，不需要手动清理数据库过期数据，类的垃圾回收将会随机找时间进行清理\r\n * \r\n * 详细文档：http://codeigniter.com/user_guide/libraries/sessions.html\r\n */\r\n/**\r\n * Session 类\r\n *\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Sessions\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/sessions.html\r\n */\r\nclass CI_Session {\r\n\r\n	var $sess_encrypt_cookie		= FALSE;//是否需要加密cookie\r\n	var $sess_use_database			= FALSE;//使用数据库存储\r\n	var $sess_table_name			= \'\';	//数据库存储的数据表\r\n	var $sess_expiration			= 7200;		//session过期时间\r\n	var $sess_expire_on_close		= FALSE;	//当浏览器关闭时，cookie失效\r\n	var $sess_match_ip				= FALSE; 	//是否匹配ip地址\r\n	var $sess_match_useragent		= TRUE;		//是否匹配用户代理\r\n	var $sess_cookie_name			= \'ci_session\'; //使用cookie的名字\r\n	var $cookie_prefix				= \'\';//cookie前缀\r\n	var $cookie_path				= \'\';//cookie路径\r\n	var $cookie_domain				= \'\';//cookie作用的域名\r\n	var $cookie_secure				= FALSE;//是否使用安全的http （https）\r\n	var $sess_time_to_update		= 300;	//默认session更新时间（5分钟）\r\n	var $encryption_key				= \'\';		//session加密密钥\r\n	var $flashdata_key				= \'flash\';\r\n	var $time_reference				= \'time\';\r\n	var $gc_probability				= 5;\r\n	var $userdata					= array();\r\n	var $CI;									//超级对象\r\n	var $now;									//现在的时间\r\n\r\n	/**\r\n	 * Session Constructor 构造函数\r\n	 *\r\n	 * The constructor runs the session routines automatically \r\n	 * whenever the class is instantiated.\r\n	 */\r\n	public function __construct($params = array())\r\n	{\r\n		log_message(\'debug\', \"Session Class Initialized\");\r\n\r\n		// Set the super object to a local variable for use throughout the class 引入超级对象\r\n		$this-&gt;CI =&amp; get_instance();\r\n\r\n		// Set all the session preferences, which can either be set 设置所有的session属性，可以通过手动的\r\n		// manually via the $params array above or via the config file 传入$params数组或者是使用配置文件设置\r\n		foreach (array(\'sess_encrypt_cookie\', \'sess_use_database\', \'sess_table_name\', \'sess_expiration\', \'sess_expire_on_close\', \'sess_match_ip\', \'sess_match_useragent\', \'sess_cookie_name\', \'cookie_path\', \'cookie_domain\', \'cookie_secure\', \'sess_time_to_update\', \'time_reference\', \'cookie_prefix\', \'encryption_key\') as $key)\r\n		{\r\n			$this-&gt;$key = (isset($params[$key])) ? $params[$key] : $this-&gt;CI-&gt;config-&gt;item($key);//传入参数优先，没传入的使用配置文件\r\n		}\r\n\r\n		if ($this-&gt;encryption_key == \'\')//不在配置文件中设置的话，可以通过参数直接传入\r\n		{\r\n			show_error(\'要使用Session类的话，你必须在配置文件中设置加密密钥.\');\r\n		}\r\n\r\n		// Load the string helper so we can use the strip_slashes() function 载入string助手，让我们可以使用strip_slashs()函数\r\n		$this-&gt;CI-&gt;load-&gt;helper(\'string\');\r\n\r\n		// Do we need encryption? If so, load the encryption class 如果需要加密的话，导入encryption类\r\n		if ($this-&gt;sess_encrypt_cookie == TRUE) \r\n		{\r\n			$this-&gt;CI-&gt;load-&gt;library(\'encrypt\');\r\n		}\r\n\r\n		// Are we using a database?  If so, load it 使用数据库的存储的话，载入数据库管理类\r\n		if ($this-&gt;sess_use_database === TRUE AND $this-&gt;sess_table_name != \'\')\r\n		{\r\n			$this-&gt;CI-&gt;load-&gt;database();\r\n		}\r\n\r\n		// Set the \"now\" time.  Can either be GMT or server time, based on the 设置现在的时间，依赖配置属性，可以使用GMT或者是服务器时间\r\n		// config prefs.  We use this to set the \"last activity\" time 可以通过这个来设置“最后活动”时间\r\n		$this-&gt;now = $this-&gt;_get_time();\r\n\r\n		// Set the session length. If the session expiration is 设置session的有效时间，如果设为0的话\r\n		// set to zero we\'ll set the expiration two years from now. 将会设置为从现在起2年的时间\r\n		if ($this-&gt;sess_expiration == 0)\r\n		{\r\n			$this-&gt;sess_expiration = (60*60*24*365*2);\r\n		}\r\n\r\n		// Set the cookie name 设置cookie的名字\r\n		$this-&gt;sess_cookie_name = $this-&gt;cookie_prefix.$this-&gt;sess_cookie_name;\r\n\r\n		// Run the Session routine. If a session doesn\'t exist we\'ll 运行session程序，如果session不存在，我们将会\r\n		// create a new one.  If it does, we\'ll update it.创建一个新的。如果存在，将会更新它\r\n		if ( ! $this-&gt;sess_read())//session是否存在（可读）\r\n		{\r\n			$this-&gt;sess_create();//创建\r\n		}\r\n		else\r\n		{\r\n			$this-&gt;sess_update();//更新\r\n		}\r\n\r\n		// Delete \'old\' flashdata (from last request) 实现了flashdata的临时性，每次请求后清空上次的旧数据\r\n		$this-&gt;_flashdata_sweep();\r\n\r\n		// Mark all new flashdata as old (data will be deleted before next request)把新数据标记为旧的（下次就可以清理了）\r\n		$this-&gt;_flashdata_mark();\r\n\r\n		// Delete expired sessions if necessary 如果需要的话，删除过期的sessions（随机执行）\r\n		$this-&gt;_sess_gc();\r\n\r\n		log_message(\'debug\', \"Session routines successfully run\");\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Fetch the current session data if it exists\r\n	 * 如果存在的话，检索当前的session\r\n	 * @access	public\r\n	 * @return	bool\r\n	 */\r\n	function sess_read()\r\n	{\r\n		// Fetch the cookie 获取cookie\r\n		$session = $this-&gt;CI-&gt;input-&gt;cookie($this-&gt;sess_cookie_name);\r\n\r\n		// No cookie?  Goodbye cruel world!... 没有cookie的话，返回错误（不可读）\r\n		if ($session === FALSE)\r\n		{\r\n			log_message(\'debug\', \'A session cookie was not found.\');\r\n			return FALSE;\r\n		}\r\n\r\n		// Decrypt the cookie data 揭秘cookie数据\r\n		if ($this-&gt;sess_encrypt_cookie == TRUE)\r\n		{\r\n			$session = $this-&gt;CI-&gt;encrypt-&gt;decode($session);\r\n		}\r\n		else\r\n		{\r\n			// encryption was not used, so we need to check the md5 hash 没有使用加密，所以需要检查MD5哈希值\r\n			$hash	 = substr($session, strlen($session)-32); // get last 32 chars 获取最后32个字符（MD5值）\r\n			$session = substr($session, 0, strlen($session)-32);//除最后32个之外的，SESSION数据\r\n\r\n			// Does the md5 hash match?  This is to prevent manipulation of session data in userspace 哈希值是否匹配？ 这里是防止在用户空间操纵session数据\r\n			if ($hash !==  md5($session.$this-&gt;encryption_key))\r\n			{\r\n				log_message(\'error\', \'SESSION的Cookie与我们预期的不同.可能是一次黑客攻击行为.\');\r\n				$this-&gt;sess_destroy();//销毁。。。。\r\n				return FALSE;\r\n			}\r\n		}\r\n\r\n		// Unserialize the session array 反序列化session数组\r\n		$session = $this-&gt;_unserialize($session);\r\n\r\n		// Is the session data we unserialized an array with the correct format? 反序列化后的session是否是正确格式的数组？\r\n		if ( ! is_array($session) OR ! isset($session[\'session_id\']) OR ! isset($session[\'ip_address\']) OR ! isset($session[\'user_agent\']) OR ! isset($session[\'last_activity\']))\r\n		{//这里检查了设置了（$session是一个数组，session_id存在，ip_address存在， last_activity存在，user_agent存在\r\n			$this-&gt;sess_destroy();//数据不合法的话，销毁。。。\r\n			return FALSE;\r\n		}\r\n\r\n		// Is the session current? 检查session是否过期\r\n		if (($session[\'last_activity\'] + $this-&gt;sess_expiration) &lt; $this-&gt;now)\r\n		{\r\n			$this-&gt;sess_destroy();\r\n			return FALSE;\r\n		}\r\n\r\n		// Does the IP Match? 检查IP地址是否匹配\r\n		if ($this-&gt;sess_match_ip == TRUE AND $session[\'ip_address\'] != $this-&gt;CI-&gt;input-&gt;ip_address())\r\n		{\r\n			$this-&gt;sess_destroy();\r\n			return FALSE;\r\n		}\r\n\r\n		// Does the User Agent Match?  检查用户代理是否匹配\r\n		if ($this-&gt;sess_match_useragent == TRUE AND trim($session[\'user_agent\']) != trim(substr($this-&gt;CI-&gt;input-&gt;user_agent(), 0, 120)))\r\n		{\r\n			$this-&gt;sess_destroy();\r\n			return FALSE;\r\n		}\r\n\r\n		// Is there a corresponding session in the DB? 如果启用数据库存储的话，是否有对应的session\r\n		if ($this-&gt;sess_use_database === TRUE)\r\n		{\r\n			#构造查询条件\r\n			$this-&gt;CI-&gt;db-&gt;where(\'session_id\', $session[\'session_id\']);\r\n\r\n			if ($this-&gt;sess_match_ip == TRUE)\r\n			{\r\n				$this-&gt;CI-&gt;db-&gt;where(\'ip_address\', $session[\'ip_address\']);\r\n			}\r\n\r\n			if ($this-&gt;sess_match_useragent == TRUE)\r\n			{\r\n				$this-&gt;CI-&gt;db-&gt;where(\'user_agent\', $session[\'user_agent\']);\r\n			}\r\n			#执行查询\r\n			$query = $this-&gt;CI-&gt;db-&gt;get($this-&gt;sess_table_name);\r\n\r\n			// No result?  Kill it! 查询不到记录，销毁当前session\r\n			if ($query-&gt;num_rows() == 0)\r\n			{\r\n				$this-&gt;sess_destroy();\r\n				return FALSE;\r\n			}\r\n\r\n			// Is there custom data?  If so, add it to the main session array 如果有数据的话，添加到主session数组中\r\n			$row = $query-&gt;row();\r\n			if (isset($row-&gt;user_data) AND $row-&gt;user_data != \'\')//存在user_data同时不为空\r\n			{\r\n				$custom_data = $this-&gt;_unserialize($row-&gt;user_data);//反序列化用户数据\r\n\r\n				if (is_array($custom_data))//如果返回的不是数组而是字符串的话将会被抛弃掉\r\n				{\r\n					foreach ($custom_data as $key =&gt; $val)\r\n					{\r\n						$session[$key] = $val;\r\n					}\r\n				}\r\n			}\r\n		}\r\n\r\n		// Session is valid! 可用\r\n		$this-&gt;userdata = $session;\r\n		unset($session);//销毁$session局部变量，节省内存\r\n\r\n		return TRUE;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Write the session data\r\n	 * 写入session数据\r\n	 * @access	public\r\n	 * @return	void\r\n	 */\r\n	function sess_write()\r\n	{\r\n		// Are we saving custom data to the DB?  If not, all we do is update the cookie 是否保存数据到数据库中，如果不是的话，所做的所有行为都将更新到cookie中\r\n		if ($this-&gt;sess_use_database === FALSE)\r\n		{\r\n			$this-&gt;_set_cookie();\r\n			return;\r\n		}\r\n		#使用数据库存储\r\n		// set the custom userdata, the session data we will set in a second 设置自定义的userdata， session数据将会稍后设置\r\n		$custom_userdata = $this-&gt;userdata;\r\n		$cookie_userdata = array();//用户写到用户端cookie文件中\r\n\r\n		// Before continuing, we need to determine if there is any custom data to deal with. 在继续之前，需要确定是否有用户自定义的数据需要处理\r\n		// Let\'s determine this by removing the default indexes to see if there\'s anything left in the array 通过移除默认的索引查看是否在数组中还有其他的数据\r\n		// and set the session data while we\'re at it 设置我们正在使用的session数据\r\n		foreach (array(\'session_id\',\'ip_address\',\'user_agent\',\'last_activity\') as $val)\r\n		{\r\n			unset($custom_userdata[$val]);//从自定义用户数据中移除默认数据\r\n			$cookie_userdata[$val] = $this-&gt;userdata[$val];//将默认数据加入到用户的cookie数据中\r\n		}\r\n\r\n		// Did we find any custom data?  If not, we turn the empty array into a string 是否还有其它的自定义数据，如果没有的话，把这个空数组转换为空字符串\r\n		// since there\'s no reason to serialize and store an empty array in the DB 因为没有任何理由序列化和存储一个空数组到数据库中\r\n		if (count($custom_userdata) === 0)\r\n		{\r\n			$custom_userdata = \'\';\r\n		}\r\n		else\r\n		{\r\n			// Serialize the custom data array so we can store it 当含有用户自定义数据时，序列化成字符串\r\n			$custom_userdata = $this-&gt;_serialize($custom_userdata);\r\n		}\r\n\r\n		// Run the update query 更新到数据库\r\n		$this-&gt;CI-&gt;db-&gt;where(\'session_id\', $this-&gt;userdata[\'session_id\']);//条件\r\n		$this-&gt;CI-&gt;db-&gt;update($this-&gt;sess_table_name, array(\'last_activity\' =&gt; $this-&gt;userdata[\'last_activity\'], \'user_data\' =&gt; $custom_userdata));\r\n\r\n		// Write the cookie.  Notice that we manually pass the cookie data array to the 写入cookie，注意，我们手动的传递cookie数据数组到_set_cookie()\r\n		// _set_cookie() function. Normally that function will store $this-&gt;userdata, but 函数，正常情况下，这个函数将会存储$this-&gt;userdata,但是我们不希望把存有用户数据的cookie写入到cookie中\r\n		// in this case that array contains custom data, which we do not want in the cookie. (这里写入的cookie是不包含用户数据的，前面赋值只是把默认数据添加到了cookie_data中)\r\n		$this-&gt;_set_cookie($cookie_userdata);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Create a new session\r\n	 * 创建一个新的session\r\n	 * @access	public\r\n	 * @return	void\r\n	 */\r\n	function sess_create()\r\n	{\r\n		$sessid = \'\';\r\n		while (strlen($sessid) &lt; 32)//生成一个32个字符的sessionid（随机）\r\n		{\r\n			$sessid .= mt_rand(0, mt_getrandmax());//mt_rand生成更好的随机数 ， mt_getrandmax显示随机数的最大可能值\r\n		}\r\n\r\n		// To make the session ID even more secure we\'ll combine it with the user\'s IP 为了使生成的sessionID更加安全，合并sessionid和客户端的ip地址\r\n		$sessid .= $this-&gt;CI-&gt;input-&gt;ip_address();\r\n\r\n		#string uniqid ([ string $prefix = \"\" [, bool $more_entropy = false ]] ) 获取一个带前缀、基于当前时间微秒数的唯一ID。 \r\n		\r\n		$this-&gt;userdata = array(\r\n							\'session_id\'	=&gt; md5(uniqid($sessid, TRUE)),//根据sessionid生成一个唯一的ID， 前缀sessionid， 长度23位，然后md5取得哈希值最为最终的session_id\r\n							\'ip_address\'	=&gt; $this-&gt;CI-&gt;input-&gt;ip_address(),\r\n							\'user_agent\'	=&gt; substr($this-&gt;CI-&gt;input-&gt;user_agent(), 0, 120),\r\n							\'last_activity\'	=&gt; $this-&gt;now,\r\n							\'user_data\'		=&gt; \'\'\r\n							);\r\n\r\n\r\n		// Save the data to the DB if needed 如果需要的话存储数据到数据库中\r\n		if ($this-&gt;sess_use_database === TRUE)\r\n		{\r\n			$this-&gt;CI-&gt;db-&gt;query($this-&gt;CI-&gt;db-&gt;insert_string($this-&gt;sess_table_name, $this-&gt;userdata));\r\n		}\r\n\r\n		// Write the cookie 写入到cookie中\r\n		$this-&gt;_set_cookie();\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Update an existing session \r\n	 * 更新一个已经存在的session\r\n	 * @access	public\r\n	 * @return	void\r\n	 */\r\n	function sess_update()\r\n	{\r\n		// We only update the session every five minutes by default 默认5分钟更新一次session\r\n		if (($this-&gt;userdata[\'last_activity\'] + $this-&gt;sess_time_to_update) &gt;= $this-&gt;now)\r\n		{\r\n			return;\r\n		}\r\n\r\n		// Save the old session id so we know which record to 保存原来的sessionid以使我们可以知道需要在数据库\r\n		// update in the database if we need it 中更新那一条记录\r\n		$old_sessid = $this-&gt;userdata[\'session_id\'];\r\n		#以下代码与产生session时一样的算法，产生一个唯一的session_id\r\n		$new_sessid = \'\';\r\n		while (strlen($new_sessid) &lt; 32)\r\n		{\r\n			$new_sessid .= mt_rand(0, mt_getrandmax());\r\n		}\r\n\r\n		// To make the session ID even more secure we\'ll combine it with the user\'s IP\r\n		$new_sessid .= $this-&gt;CI-&gt;input-&gt;ip_address();\r\n\r\n		// Turn it into a hash\r\n		$new_sessid = md5(uniqid($new_sessid, TRUE));\r\n\r\n		// Update the session data in the session data array 更新userdata中的额session_id\r\n		$this-&gt;userdata[\'session_id\'] = $new_sessid;\r\n		$this-&gt;userdata[\'last_activity\'] = $this-&gt;now;\r\n\r\n		// _set_cookie() will handle this for us if we aren\'t using database sessions \r\n		// by pushing all userdata to the cookie.  //_set_cookie将会把用户数据也写入到cookie中\r\n		$cookie_data = NULL;\r\n\r\n		// Update the session ID and last_activity field in the DB if needed 如果需要的话，更新数据库中的sessionid和最后活动时间\r\n		if ($this-&gt;sess_use_database === TRUE)\r\n		{\r\n			// set cookie explicitly to only have our session data 明确的设定cookie中只存放session数据\r\n			$cookie_data = array();\r\n			foreach (array(\'session_id\',\'ip_address\',\'user_agent\',\'last_activity\') as $val)\r\n			{\r\n				$cookie_data[$val] = $this-&gt;userdata[$val];\r\n			}\r\n\r\n			$this-&gt;CI-&gt;db-&gt;query($this-&gt;CI-&gt;db-&gt;update_string($this-&gt;sess_table_name, array(\'last_activity\' =&gt; $this-&gt;now, \'session_id\' =&gt; $new_sessid), array(\'session_id\' =&gt; $old_sessid)));//更新到数据库\r\n		}\r\n\r\n		// Write the cookie 写到cookie中\r\n		$this-&gt;_set_cookie($cookie_data);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Destroy the current session\r\n	 * 销毁当前的session\r\n	 * @access	public\r\n	 * @return	void\r\n	 */\r\n	function sess_destroy()\r\n	{\r\n		// Kill the session DB row 从数据库中删除记录\r\n		if ($this-&gt;sess_use_database === TRUE &amp;&amp; isset($this-&gt;userdata[\'session_id\']))\r\n		{\r\n			$this-&gt;CI-&gt;db-&gt;where(\'session_id\', $this-&gt;userdata[\'session_id\']);\r\n			$this-&gt;CI-&gt;db-&gt;delete($this-&gt;sess_table_name);\r\n		}\r\n\r\n		// Kill the cookie 清除cookie（通过session过期时间为以前的时间）\r\n		setcookie(\r\n					$this-&gt;sess_cookie_name,\r\n					addslashes(serialize(array())),\r\n					($this-&gt;now - 31500000),\r\n					$this-&gt;cookie_path,\r\n					$this-&gt;cookie_domain,\r\n					0\r\n				);\r\n\r\n		// Kill session data 清空userdata数组\r\n		$this-&gt;userdata = array();\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Fetch a specific item from the session array\r\n	 * 从session数组中获取指定的项\r\n	 * @access	public\r\n	 * @param	string\r\n	 * @return	string\r\n	 */\r\n	function userdata($item)\r\n	{\r\n		return ( ! isset($this-&gt;userdata[$item])) ? FALSE : $this-&gt;userdata[$item];\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Fetch all session data\r\n	 * 检索出所有的session数据\r\n	 * @access	public\r\n	 * @return	array\r\n	 */\r\n	function all_userdata()\r\n	{\r\n		return $this-&gt;userdata;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Add or change data in the \"userdata\" array\r\n	 * 添加或者是改变userdata数组中的数据\r\n	 * @access	public\r\n	 * @param	mixed\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	function set_userdata($newdata = array(), $newval = \'\')\r\n	{\r\n		if (is_string($newdata))//确保$newdata是一个数组\r\n		{\r\n			$newdata = array($newdata =&gt; $newval);\r\n		}\r\n\r\n		if (count($newdata) &gt; 0)//设置的新数据非空，则写入到当前userdata中\r\n		{\r\n			foreach ($newdata as $key =&gt; $val)\r\n			{\r\n				$this-&gt;userdata[$key] = $val;\r\n			}\r\n		}\r\n		//不要忘记最后还要写入到session中（保存到数据库以及更新cookie文件）\r\n		$this-&gt;sess_write();\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Delete a session variable from the \"userdata\" array\r\n	 * 从userdata数组中删除session变量\r\n	 * @access	array\r\n	 * @return	void\r\n	 */\r\n	function unset_userdata($newdata = array())\r\n	{\r\n		if (is_string($newdata))\r\n		{\r\n			$newdata = array($newdata =&gt; \'\');\r\n		}\r\n\r\n		if (count($newdata) &gt; 0)\r\n		{\r\n			foreach ($newdata as $key =&gt; $val)\r\n			{\r\n				unset($this-&gt;userdata[$key]);\r\n			}\r\n		}\r\n\r\n		$this-&gt;sess_write();\r\n	}\r\n\r\n	// ------------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Add or change flashdata, only available\r\n	 * until the next request\r\n	 * 添加或者是改变flashdata ， 仅仅在下次请求前有效\r\n	 * @access	public\r\n	 * @param	mixed\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	function set_flashdata($newdata = array(), $newval = \'\')\r\n	{\r\n		if (is_string($newdata))\r\n		{\r\n			$newdata = array($newdata =&gt; $newval);\r\n		}\r\n\r\n		if (count($newdata) &gt; 0)\r\n		{\r\n			foreach ($newdata as $key =&gt; $val)\r\n			{\r\n				$flashdata_key = $this-&gt;flashdata_key.\':new:\'.$key;\r\n				$this-&gt;set_userdata($flashdata_key, $val);\r\n			}\r\n		}\r\n	}\r\n\r\n	// ------------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Keeps existing flashdata available to next request.\r\n	 * 保持已经存在的flashdata在下次请求中可用\r\n	 * @access	public\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	function keep_flashdata($key)\r\n	{	\r\n		// \'old\' flashdata gets removed.  Here we mark all 旧的flashdata被移除了，这里使所有的flashdata作为新的，防止_flashdata_sweep()\r\n		// flashdata as \'new\' to preserve it from _flashdata_sweep()\r\n		// Note the function will return FALSE if the $key 注意如果提供的key不存在的话将会返回false\r\n		// provided cannot be found\r\n		$old_flashdata_key = $this-&gt;flashdata_key.\':old:\'.$key;\r\n		$value = $this-&gt;userdata($old_flashdata_key);\r\n\r\n		$new_flashdata_key = $this-&gt;flashdata_key.\':new:\'.$key;\r\n		$this-&gt;set_userdata($new_flashdata_key, $value);\r\n	}\r\n\r\n	// ------------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Fetch a specific flashdata item from the session array\r\n	 * 从session数组中检索出指定的flashdata\r\n	 * @access	public\r\n	 * @param	string\r\n	 * @return	string\r\n	 */\r\n	function flashdata($key)\r\n	{\r\n		$flashdata_key = $this-&gt;flashdata_key.\':old:\'.$key;\r\n		return $this-&gt;userdata($flashdata_key);\r\n	}\r\n\r\n	// ------------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Identifies flashdata as \'old\' for removal 鉴定flashdata作为old当_flashdata_sweep()运行时\r\n	 * when _flashdata_sweep() runs.\r\n	 *\r\n	 * @access	private\r\n	 * @return	void\r\n	 */\r\n	function _flashdata_mark()\r\n	{\r\n		$userdata = $this-&gt;all_userdata();\r\n		foreach ($userdata as $name =&gt; $value)\r\n		{\r\n			$parts = explode(\':new:\', $name);\r\n			if (is_array($parts) &amp;&amp; count($parts) === 2)\r\n			{\r\n				$new_name = $this-&gt;flashdata_key.\':old:\'.$parts[1];\r\n				$this-&gt;set_userdata($new_name, $value);\r\n				$this-&gt;unset_userdata($name);\r\n			}\r\n		}\r\n	}\r\n\r\n	// ------------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Removes all flashdata marked as \'old\'\r\n	 * 移除所有标记为old的flashdata\r\n	 * @access	private\r\n	 * @return	void\r\n	 */\r\n\r\n	function _flashdata_sweep()\r\n	{\r\n		$userdata = $this-&gt;all_userdata();\r\n		foreach ($userdata as $key =&gt; $value)\r\n		{\r\n			if (strpos($key, \':old:\'))//strpos查找指定字符首次出现的位置，如果查找不到返回false、\r\n			{\r\n				$this-&gt;unset_userdata($key);\r\n			}\r\n		}\r\n\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Get the \"now\" time\r\n	 * 获取现在的时间\r\n	 * @access	private\r\n	 * @return	string\r\n	 */\r\n	function _get_time()\r\n	{\r\n		if (strtolower($this-&gt;time_reference) == \'gmt\')//格林尼治时间\r\n		{\r\n			$now = time();\r\n			$time = mktime(gmdate(\"H\", $now), gmdate(\"i\", $now), gmdate(\"s\", $now), gmdate(\"m\", $now), gmdate(\"d\", $now), gmdate(\"Y\", $now));\r\n		}\r\n		else//系统时间\r\n		{\r\n			$time = time();\r\n		}\r\n\r\n		return $time;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Write the session cookie\r\n	 * 设置一个session cookie\r\n	 * @access	public\r\n	 * @return	void\r\n	 */\r\n	function _set_cookie($cookie_data = NULL)\r\n	{\r\n		if (is_null($cookie_data))//没有传入cookie数据\r\n		{\r\n			$cookie_data = $this-&gt;userdata;//使用userdata\r\n		}\r\n\r\n		// Serialize the userdata for the cookie序列化userdata为cookie\r\n		$cookie_data = $this-&gt;_serialize($cookie_data);\r\n\r\n		if ($this-&gt;sess_encrypt_cookie == TRUE)//加密\r\n		{\r\n			$cookie_data = $this-&gt;CI-&gt;encrypt-&gt;encode($cookie_data);\r\n		}\r\n		else\r\n		{\r\n			// if encryption is not used, we provide an md5 hash to prevent userside tampering 如果没有采用 加密，使用MD5哈希校验防止数据被篡改\r\n			$cookie_data = $cookie_data.md5($cookie_data.$this-&gt;encryption_key);//将cookie数据和密钥一起md5哈希后加入到cookie数据后面\r\n		}\r\n		#如果配置为当session到期关闭的话，当关闭浏览器的时候cookie失效，否则，在当前时间加上有效时间后过期\r\n		$expire = ($this-&gt;sess_expire_on_close === TRUE) ? 0 : $this-&gt;sess_expiration + time();\r\n\r\n		// Set the cookie 设置cookie\r\n		setcookie(\r\n					$this-&gt;sess_cookie_name,\r\n					$cookie_data,\r\n					$expire,\r\n					$this-&gt;cookie_path,\r\n					$this-&gt;cookie_domain,\r\n					$this-&gt;cookie_secure\r\n				);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Serialize an array\r\n	 * 序列化一个数组\r\n	 * This function first converts any slashes found in the array to a temporary\r\n	 * marker, so when it gets unserialized the slashes will be preserved\r\n	 * 首先转换发现的数组为临时数据，然后把没有被序列化的斜杠转成{{slash}}\r\n	 * @access	private\r\n	 * @param	array\r\n	 * @return	string\r\n	 */\r\n	function _serialize($data)\r\n	{\r\n		if (is_array($data))\r\n		{\r\n			foreach ($data as $key =&gt; $val)\r\n			{\r\n				if (is_string($val))\r\n				{\r\n					$data[$key] = str_replace(\'\\\\\', \'{{slash}}\', $val);\r\n				}\r\n			}\r\n		}\r\n		else\r\n		{\r\n			if (is_string($data))\r\n			{\r\n				$data = str_replace(\'\\\\\', \'{{slash}}\', $data);\r\n			}\r\n		}\r\n\r\n		return serialize($data);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Unserialize 反序列化\r\n	 *\r\n	 * This function unserializes a data string, then converts any 反序列化一个字符串数据，然后把{{slash}}\r\n	 * temporary slash markers back to actual slashes 转换成真实的\\\\\r\n	 *\r\n	 * @access	private\r\n	 * @param	array\r\n	 * @return	string\r\n	 */\r\n	function _unserialize($data)\r\n	{\r\n		$data = @unserialize(strip_slashes($data));\r\n\r\n		if (is_array($data))\r\n		{\r\n			foreach ($data as $key =&gt; $val)\r\n			{\r\n				if (is_string($val))\r\n				{\r\n					$data[$key] = str_replace(\'{{slash}}\', \'\\\\\', $val);\r\n				}\r\n			}\r\n\r\n			return $data;\r\n		}\r\n\r\n		return (is_string($data)) ? str_replace(\'{{slash}}\', \'\\\\\', $data) : $data;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Garbage collection 垃圾回收\r\n	 *\r\n	 * This deletes expired session rows from database 如果有遇见的可能的话\r\n	 * if the probability percentage is met从数据库中删除过期的session\r\n	 *\r\n	 * @access	public\r\n	 * @return	void\r\n	 */\r\n	function _sess_gc()\r\n	{\r\n		if ($this-&gt;sess_use_database != TRUE)//不适用数据库的话直接返回\r\n		{\r\n			return;\r\n		}\r\n\r\n		srand(time());//播下随机数发生器种子\r\n		if ((rand() % 100) &lt; $this-&gt;gc_probability)//随机数除以100的余数如果小于垃圾回收可能性的话，执行垃圾回收？？？？\r\n		{\r\n			$expire = $this-&gt;now - $this-&gt;sess_expiration;//取得过期的时间（该时间前的数据都过期了）\r\n\r\n			$this-&gt;CI-&gt;db-&gt;where(\"last_activity &lt; {$expire}\");\r\n			$this-&gt;CI-&gt;db-&gt;delete($this-&gt;sess_table_name);//删除过期记录\r\n\r\n			log_message(\'debug\', \'Session的垃圾回收执行...\');\r\n		}\r\n	}\r\n\r\n\r\n}</pre><p> 在控制器中首先要$this-&gt;load-&gt;library(\'session\')</p>\r\n<p>然后使用$this-&gt;session-&gt;...操作</p>','<pre class=\"brush:php; toolbar: true; auto-links: true;\">// ------------------------------------------------------------------------\r\n/*Session存数据库的表\r\n * CREATE TABLE IF NOT EXISTS  `ci_sessions` (\r\n	session_id varchar(40) DEFAULT \'0\' NOT NULL,\r\n	ip_address varchar(45) DEFAULT \'0\' NOT NULL,\r\n	user_agent varchar(120) NOT NULL,\r\n	last_activity int(10) unsigned DEFAULT 0 NOT NULL,\r\n	user_data text NOT NULL,\r\n	PRIMARY KEY (session_id),\r\n	KEY `last_activity_idx` (`last_activity`)\r\n);\r\n配置文件内容\r\n$config','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(160,'CodeIgniter框架 学习笔记 （3） 类加载器Loader','<p>Loader.php类主要实现了在控制器中使用$this-&gt;load方式载入其他的类库，助手类，模型，数据库，视图等。</p>\r\n<p>渲染后的视图页面发送到用户浏览器也是在该类中完成的。</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * Loader Class\r\n *\r\n * Loads views and files \r\n * 载入视图和文件\r\n *\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @author		ExpressionEngine Dev Team\r\n * @category	Loader\r\n * @link		http://codeigniter.com/user_guide/libraries/loader.html\r\n */\r\nclass CI_Loader {\r\n\r\n	// All these are set automatically. Don\'t mess with them. \r\n	// 一下所有的内容都会自动的被设置，不要修改它们\r\n	/**\r\n	 * Nesting level of the output buffering mechanism\r\n	 * 输出缓冲机制的嵌套级别\r\n	 * @var int\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_ob_level;\r\n	/**\r\n	 * List of paths to load views from\r\n	 * 载入视图的路径\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_view_paths		= array();\r\n	/**\r\n	 * List of paths to load libraries from\r\n	 * 载入类库的路径\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_library_paths	= array();\r\n	/**\r\n	 * List of paths to load models from\r\n	 * 载入模型的路径\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_model_paths		= array();\r\n	/**\r\n	 * List of paths to load helpers from\r\n	 * 载入助手的路径\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_helper_paths		= array();\r\n	/**\r\n	 * List of loaded base classes\r\n	 * Set by the controller class\r\n	 * 基础类的载入列表，通过控制器类设置(这些是在CodeIgniter.php中加载过的）\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_base_classes		= array(); // Set by the controller class\r\n	/**\r\n	 * List of cached variables\r\n	 * 缓存变量的列表\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_cached_vars		= array();\r\n	/**\r\n	 * List of loaded classes\r\n	 * 载入类的列表\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_classes			= array();\r\n	/**\r\n	 * List of loaded files\r\n	 * 载入文件的列表\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_loaded_files		= array();\r\n	/**\r\n	 * List of loaded models\r\n	 * 载入模型的列表\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_models			= array();\r\n	/**\r\n	 * List of loaded helpers\r\n	 * 载入助手的列表\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_helpers			= array();\r\n	/**\r\n	 * List of class name mappings\r\n	 * 类名映射的列表\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_ci_varmap			= array(\'unit_test\' =&gt; \'unit\',\r\n											\'user_agent\' =&gt; \'agent\');\r\n\r\n	/**\r\n	 * Constructor\r\n	 * 设置视图文件的路径，获取初始化输出缓冲区的嵌套级别\r\n	 * Sets the path to the view files and gets the initial output buffering level\r\n	 */\r\n	public function __construct()\r\n	{\r\n		//ob_get_level()返回输出缓冲机制的嵌套级别\r\n		$this-&gt;_ci_ob_level  = ob_get_level();\r\n		$this-&gt;_ci_library_paths = array(APPPATH, BASEPATH);\r\n		$this-&gt;_ci_helper_paths = array(APPPATH, BASEPATH);\r\n		$this-&gt;_ci_model_paths = array(APPPATH);\r\n		$this-&gt;_ci_view_paths = array(APPPATH.\'views/\'	=&gt; TRUE);\r\n\r\n		log_message(\'debug\', \"类加载器完成初始化\");\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Initialize the Loader\r\n	 * 初始化类加载器\r\n	 *\r\n	 * This method is called once in CI_Controller.\r\n	 * 这个方法只在CI_Controller中被调用一次\r\n	 * @param 	array\r\n	 * @return 	object\r\n	 */\r\n	public function initialize()\r\n	{\r\n		$this-&gt;_ci_classes = array();\r\n		$this-&gt;_ci_loaded_files = array();\r\n		$this-&gt;_ci_models = array();\r\n		$this-&gt;_base_classes =&amp; is_loaded();\r\n\r\n		$this-&gt;_ci_autoloader();\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Is Loaded 是否载入了？\r\n	 *\r\n	 * A utility function to test if a class is in the self::$_ci_classes array.\r\n	 * 一个使用的工具函数，用于测试是否是一个类已经在self::$_ci_classes数组中\r\n	 * This function returns the object name if the class tested for is loaded,\r\n	 * 如果类已经被加载了，这个函数返回这个对象的名字\r\n	 * and returns FALSE if it isn\'t.\r\n	 * 如果没有的话返回FALSE\r\n	 *\r\n	 * It is mainly used in the form_helper -&gt; _get_validation_object()\r\n	 * 通常用在form_helper-&gt;_get_validation_object()\r\n	 * @param 	string	class being checked for\r\n	 * @return 	mixed	class object name on the CI SuperObject or FALSE\r\n	 */\r\n	public function is_loaded($class)\r\n	{\r\n		if (isset($this-&gt;_ci_classes[$class]))\r\n		{\r\n			return $this-&gt;_ci_classes[$class];\r\n		}\r\n\r\n		return FALSE;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Class Loader 类加载\r\n	 *\r\n	 * This function lets users load and instantiate classes.\r\n	 * 这个函数让用户可以载入和实例化类\r\n	 * It is designed to be called from a user\'s app controllers.\r\n	 * 这个函数设计用来在用户应用的控制器中调用\r\n	 * \r\n	 * 在控制器中应该是这样调用的：\r\n	 * 		$this-&gt;load-&gt;library(类库名);\r\n	 * \r\n	 * 类库可以是个数组，用于同时载入多个类\r\n	 * \r\n	 * @param	string	the name of the class\r\n	 * @param	mixed	the optional parameters\r\n	 * @param	string	an optional object name\r\n	 * @return	void\r\n	 */\r\n	public function library($library = \'\', $params = NULL, $object_name = NULL)\r\n	{\r\n		if (is_array($library))//是可以同时载入多个类\r\n		{\r\n			foreach ($library as $class)\r\n			{\r\n				$this-&gt;library($class, $params);\r\n			}\r\n\r\n			return;\r\n		}\r\n\r\n		//如果加载的类库名字为空或者是这个类库在基类库中，则返回FALSE\r\n		if ($library == \'\' OR isset($this-&gt;_base_classes[$library]))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		if ( ! is_null($params) &amp;&amp; ! is_array($params))\r\n		{\r\n			$params = NULL;\r\n		}\r\n\r\n		$this-&gt;_ci_load_class($library, $params, $object_name);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Model Loader 模型加载\r\n	 *\r\n	 * This function lets users load and instantiate models.\r\n	 *\r\n	 * @param	string	the name of the class\r\n	 * @param	string	name for the model\r\n	 * @param	bool	database connection\r\n	 * @return	void\r\n	 */\r\n	public function model($model, $name = \'\', $db_conn = FALSE)\r\n	{\r\n		if (is_array($model))\r\n		{\r\n			foreach ($model as $babe)\r\n			{\r\n				$this-&gt;model($babe);\r\n			}\r\n			return;\r\n		}\r\n\r\n		if ($model == \'\')\r\n		{\r\n			return;\r\n		}\r\n\r\n		$path = \'\';\r\n\r\n		// Is the model in a sub-folder? If so, parse out the filename and path.\r\n		if (($last_slash = strrpos($model, \'/\')) !== FALSE)\r\n		{\r\n			// The path is in front of the last slash\r\n			$path = substr($model, 0, $last_slash + 1);\r\n\r\n			// And the model name behind it\r\n			$model = substr($model, $last_slash + 1);\r\n		}\r\n\r\n		if ($name == \'\')\r\n		{\r\n			$name = $model;\r\n		}\r\n\r\n		if (in_array($name, $this-&gt;_ci_models, TRUE))\r\n		{\r\n			return;\r\n		}\r\n\r\n		$CI =&amp; get_instance();\r\n		if (isset($CI-&gt;$name))\r\n		{\r\n			show_error(\'The model name you are loading is the name of a resource that is already being used: \'.$name);\r\n		}\r\n\r\n		$model = strtolower($model);\r\n\r\n		foreach ($this-&gt;_ci_model_paths as $mod_path)\r\n		{\r\n			if ( ! file_exists($mod_path.\'models/\'.$path.$model.\'.php\'))\r\n			{\r\n				continue;\r\n			}\r\n\r\n			if ($db_conn !== FALSE AND ! class_exists(\'CI_DB\'))\r\n			{\r\n				if ($db_conn === TRUE)\r\n				{\r\n					$db_conn = \'\';\r\n				}\r\n\r\n				$CI-&gt;load-&gt;database($db_conn, FALSE, TRUE);\r\n			}\r\n\r\n			if ( ! class_exists(\'CI_Model\'))\r\n			{\r\n				load_class(\'Model\', \'core\');\r\n			}\r\n\r\n			require_once($mod_path.\'models/\'.$path.$model.\'.php\');\r\n\r\n			$model = ucfirst($model);\r\n\r\n			$CI-&gt;$name = new $model();\r\n\r\n			$this-&gt;_ci_models[] = $name;\r\n			return;\r\n		}\r\n\r\n		// couldn\'t find the model\r\n		show_error(\'Unable to locate the model you have specified: \'.$model);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Database Loader 加载数据库\r\n	 *\r\n	 * @param	string	the DB credentials\r\n	 * @param	bool	whether to return the DB object\r\n	 * @param	bool	whether to enable active record (this allows us to override the config setting)\r\n	 * @return	object\r\n	 */\r\n	public function database($params = \'\', $return = FALSE, $active_record = NULL)\r\n	{\r\n		// Grab the super object 获取CI控制器对象\r\n		$CI =&amp; get_instance();\r\n\r\n		// Do we even need to load the database class?\r\n		// 如果已经载入过了数据库，则返回\r\n		if (class_exists(\'CI_DB\') AND $return == FALSE AND $active_record == NULL AND isset($CI-&gt;db) AND is_object($CI-&gt;db))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		require_once(BASEPATH.\'database/DB.php\');\r\n\r\n		if ($return === TRUE)//返回数据库对象\r\n		{\r\n			return DB($params, $active_record);\r\n		}\r\n\r\n		// Initialize the db variable.  Needed to prevent\r\n		// 初始化db变量，在一些配置下需要防止引用错误\r\n		// reference errors with some configurations\r\n		$CI-&gt;db = \'\';\r\n\r\n		// Load the DB class 载入DB类\r\n		$CI-&gt;db =&amp; DB($params, $active_record);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Load the Utilities Class\r\n	 * 载入实用工具类\r\n	 * @return	string\r\n	 */\r\n	public function dbutil()\r\n	{\r\n		if ( ! class_exists(\'CI_DB\'))//如果没有初始化数据库的话，先初始化数据库\r\n		{\r\n			$this-&gt;database();\r\n		}\r\n\r\n		$CI =&amp; get_instance();\r\n\r\n		// for backwards compatibility, load dbforge so we can extend dbutils off it\r\n		// 为了向后兼容，载入dbforge让我们可以扩展dbutils，这个特性不推荐使用，并且强烈不建议使用了\r\n		// this use is deprecated and strongly discouraged\r\n		$CI-&gt;load-&gt;dbforge();\r\n\r\n		require_once(BASEPATH.\'database/DB_utility.php\');\r\n		require_once(BASEPATH.\'database/drivers/\'.$CI-&gt;db-&gt;dbdriver.\'/\'.$CI-&gt;db-&gt;dbdriver.\'_utility.php\');\r\n		$class = \'CI_DB_\'.$CI-&gt;db-&gt;dbdriver.\'_utility\';\r\n\r\n		$CI-&gt;dbutil = new $class();\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Load the Database Forge Class\r\n	 * 载入数据库Forge类\r\n	 * @return	string\r\n	 */\r\n	public function dbforge()\r\n	{\r\n		if ( ! class_exists(\'CI_DB\'))\r\n		{\r\n			$this-&gt;database();\r\n		}\r\n\r\n		$CI =&amp; get_instance();\r\n\r\n		require_once(BASEPATH.\'database/DB_forge.php\');\r\n		require_once(BASEPATH.\'database/drivers/\'.$CI-&gt;db-&gt;dbdriver.\'/\'.$CI-&gt;db-&gt;dbdriver.\'_forge.php\');\r\n		$class = \'CI_DB_\'.$CI-&gt;db-&gt;dbdriver.\'_forge\';\r\n\r\n		$CI-&gt;dbforge = new $class();\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Load View 载入视图\r\n	 *\r\n	 * This function is used to load a \"view\" file.  It has three parameters:\r\n	 * 这个函数用来载入视图文件，它有三个参数：\r\n	 * 1. The name of the \"view\" file to be included.\r\n	 *  需要载入的视图文件名\r\n	 * 2. An associative array of data to be extracted for use in the view.\r\n	 *  在视图中需要使用的数据的关联数组\r\n	 * 3. TRUE/FALSE - whether to return the data or load it.  In\r\n	 * some cases it\'s advantageous to be able to return data so that\r\n	 * a developer can process it in some way.\r\n	 * 第三个可选参数可以改变函数的行为，让数据作为字符串返回而不是发送到浏览器\r\n	 * @param	string\r\n	 * @param	array\r\n	 * @param	bool\r\n	 * @return	void\r\n	 */\r\n	public function view($view, $vars = array(), $return = FALSE)\r\n	{\r\n		return $this-&gt;_ci_load(array(\'_ci_view\' =&gt; $view, \'_ci_vars\' =&gt; $this-&gt;_ci_object_to_array($vars), \'_ci_return\' =&gt; $return));\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Load File\r\n	 * 载入文件\r\n	 * This is a generic file loader\r\n	 *\r\n	 * @param	string\r\n	 * @param	bool\r\n	 * @return	string\r\n	 */\r\n	public function file($path, $return = FALSE)\r\n	{\r\n		return $this-&gt;_ci_load(array(\'_ci_path\' =&gt; $path, \'_ci_return\' =&gt; $return));\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set Variables\r\n	 * 设置变量\r\n	 * Once variables are set they become available within \r\n	 * the controller class and its \"view\" files.\r\n	 * 一旦变量被设置了，它在控制器和视图文件中都是可用的\r\n	 * @param	array\r\n	 * @param 	string\r\n	 * @return	void\r\n	 */\r\n	public function vars($vars = array(), $val = \'\')\r\n	{\r\n		if ($val != \'\' AND is_string($vars))\r\n		{\r\n			$vars = array($vars =&gt; $val);\r\n		}\r\n\r\n		$vars = $this-&gt;_ci_object_to_array($vars);\r\n\r\n		if (is_array($vars) AND count($vars) &gt; 0)\r\n		{\r\n			foreach ($vars as $key =&gt; $val)\r\n			{\r\n				$this-&gt;_ci_cached_vars[$key] = $val;\r\n			}\r\n		}\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Get Variable\r\n	 *  获取变量\r\n	 *\r\n	 * Check if a variable is set and retrieve it.\r\n	 *\r\n	 * @param	array\r\n	 * @return	void\r\n	 */\r\n	public function get_var($key)\r\n	{\r\n		return isset($this-&gt;_ci_cached_vars[$key]) ? $this-&gt;_ci_cached_vars[$key] : NULL;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Load Helper\r\n	 * 载入助手\r\n	 * This function loads the specified helper file.\r\n	 *\r\n	 * @param	mixed\r\n	 * @return	void\r\n	 */\r\n	public function helper($helpers = array())\r\n	{\r\n		foreach ($this-&gt;_ci_prep_filename($helpers, \'_helper\') as $helper)\r\n		{\r\n			if (isset($this-&gt;_ci_helpers[$helper]))\r\n			{\r\n				continue;\r\n			}\r\n\r\n			$ext_helper = APPPATH.\'helpers/\'.config_item(\'subclass_prefix\').$helper.\'.php\';\r\n\r\n			// Is this a helper extension request?\r\n			if (file_exists($ext_helper))\r\n			{\r\n				$base_helper = BASEPATH.\'helpers/\'.$helper.\'.php\';\r\n\r\n				if ( ! file_exists($base_helper))\r\n				{\r\n					show_error(\'Unable to load the requested file: helpers/\'.$helper.\'.php\');\r\n				}\r\n\r\n				include_once($ext_helper);\r\n				include_once($base_helper);\r\n\r\n				$this-&gt;_ci_helpers[$helper] = TRUE;\r\n				log_message(\'debug\', \'Helper loaded: \'.$helper);\r\n				continue;\r\n			}\r\n\r\n			// Try to load the helper\r\n			foreach ($this-&gt;_ci_helper_paths as $path)\r\n			{\r\n				if (file_exists($path.\'helpers/\'.$helper.\'.php\'))\r\n				{\r\n					include_once($path.\'helpers/\'.$helper.\'.php\');\r\n\r\n					$this-&gt;_ci_helpers[$helper] = TRUE;\r\n					log_message(\'debug\', \'Helper loaded: \'.$helper);\r\n					break;\r\n				}\r\n			}\r\n\r\n			// unable to load the helper\r\n			if ( ! isset($this-&gt;_ci_helpers[$helper]))\r\n			{\r\n				show_error(\'Unable to load the requested file: helpers/\'.$helper.\'.php\');\r\n			}\r\n		}\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Load Helpers\r\n	 * 载入助手\r\n	 * This is simply an alias to the above function in case the\r\n	 * user has written the plural form of this function.\r\n	 *\r\n	 * @param	array\r\n	 * @return	void\r\n	 */\r\n	public function helpers($helpers = array())\r\n	{\r\n		$this-&gt;helper($helpers);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Loads a language file\r\n	 * 载入语言文件\r\n	 * @param	array\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	public function language($file = array(), $lang = \'\')\r\n	{\r\n		$CI =&amp; get_instance();\r\n\r\n		if ( ! is_array($file))\r\n		{\r\n			$file = array($file);\r\n		}\r\n\r\n		foreach ($file as $langfile)\r\n		{\r\n			$CI-&gt;lang-&gt;load($langfile, $lang);\r\n		}\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Loads a config file\r\n	 * 载入配置文件\r\n	 * @param	string\r\n	 * @param	bool\r\n	 * @param 	bool\r\n	 * @return	void\r\n	 */\r\n	public function config($file = \'\', $use_sections = FALSE, $fail_gracefully = FALSE)\r\n	{\r\n		$CI =&amp; get_instance();\r\n		$CI-&gt;config-&gt;load($file, $use_sections, $fail_gracefully);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Driver\r\n	 * 驱动\r\n	 * Loads a driver library\r\n	 * 载入驱动类库\r\n	 * @param	string	the name of the class\r\n	 * @param	mixed	the optional parameters\r\n	 * @param	string	an optional object name\r\n	 * @return	void\r\n	 */\r\n	public function driver($library = \'\', $params = NULL, $object_name = NULL)\r\n	{\r\n		if ( ! class_exists(\'CI_Driver_Library\'))\r\n		{\r\n			// we aren\'t instantiating an object here, that\'ll be done by the Library itself\r\n			require BASEPATH.\'libraries/Driver.php\';\r\n		}\r\n\r\n		if ($library == \'\')\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		// We can save the loader some time since Drivers will *always* be in a subfolder,\r\n		// and typically identically named to the library\r\n		if ( ! strpos($library, \'/\'))\r\n		{\r\n			$library = ucfirst($library).\'/\'.$library;\r\n		}\r\n\r\n		return $this-&gt;library($library, $params, $object_name);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Add Package Path 添加包路径\r\n	 *\r\n	 * Prepends a parent path to the library, model, helper, and config path arrays\r\n	 *\r\n	 * @param	string\r\n	 * @param 	boolean\r\n	 * @return	void\r\n	 */\r\n	public function add_package_path($path, $view_cascade=TRUE)\r\n	{\r\n		$path = rtrim($path, \'/\').\'/\';\r\n\r\n		array_unshift($this-&gt;_ci_library_paths, $path);\r\n		array_unshift($this-&gt;_ci_model_paths, $path);\r\n		array_unshift($this-&gt;_ci_helper_paths, $path);\r\n\r\n		$this-&gt;_ci_view_paths = array($path.\'views/\' =&gt; $view_cascade) + $this-&gt;_ci_view_paths;\r\n\r\n		// Add config file path\r\n		$config =&amp; $this-&gt;_ci_get_component(\'config\');\r\n		array_unshift($config-&gt;_config_paths, $path);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Get Package Paths\r\n	 *\r\n	 * Return a list of all package paths, by default it will ignore BASEPATH.\r\n	 *\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	public function get_package_paths($include_base = FALSE)\r\n	{\r\n		return $include_base === TRUE ? $this-&gt;_ci_library_paths : $this-&gt;_ci_model_paths;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Remove Package Path\r\n	 *\r\n	 * Remove a path from the library, model, and helper path arrays if it exists\r\n	 * If no path is provided, the most recently added path is removed.\r\n	 *\r\n	 * @param	type\r\n	 * @param 	bool\r\n	 * @return	type\r\n	 */\r\n	public function remove_package_path($path = \'\', $remove_config_path = TRUE)\r\n	{\r\n		$config =&amp; $this-&gt;_ci_get_component(\'config\');\r\n\r\n		if ($path == \'\')\r\n		{\r\n			$void = array_shift($this-&gt;_ci_library_paths);\r\n			$void = array_shift($this-&gt;_ci_model_paths);\r\n			$void = array_shift($this-&gt;_ci_helper_paths);\r\n			$void = array_shift($this-&gt;_ci_view_paths);\r\n			$void = array_shift($config-&gt;_config_paths);\r\n		}\r\n		else\r\n		{\r\n			$path = rtrim($path, \'/\').\'/\';\r\n			foreach (array(\'_ci_library_paths\', \'_ci_model_paths\', \'_ci_helper_paths\') as $var)\r\n			{\r\n				if (($key = array_search($path, $this-&gt;{$var})) !== FALSE)\r\n				{\r\n					unset($this-&gt;{$var}[$key]);\r\n				}\r\n			}\r\n\r\n			if (isset($this-&gt;_ci_view_paths[$path.\'views/\']))\r\n			{\r\n				unset($this-&gt;_ci_view_paths[$path.\'views/\']);\r\n			}\r\n\r\n			if (($key = array_search($path, $config-&gt;_config_paths)) !== FALSE)\r\n			{\r\n				unset($config-&gt;_config_paths[$key]);\r\n			}\r\n		}\r\n\r\n		// make sure the application default paths are still in the array\r\n		$this-&gt;_ci_library_paths = array_unique(array_merge($this-&gt;_ci_library_paths, array(APPPATH, BASEPATH)));\r\n		$this-&gt;_ci_helper_paths = array_unique(array_merge($this-&gt;_ci_helper_paths, array(APPPATH, BASEPATH)));\r\n		$this-&gt;_ci_model_paths = array_unique(array_merge($this-&gt;_ci_model_paths, array(APPPATH)));\r\n		$this-&gt;_ci_view_paths = array_merge($this-&gt;_ci_view_paths, array(APPPATH.\'views/\' =&gt; TRUE));\r\n		$config-&gt;_config_paths = array_unique(array_merge($config-&gt;_config_paths, array(APPPATH)));\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Loader\r\n	 *\r\n	 * This function is used to load views and files. 这个函数被用来载入视图和文件\r\n	 * Variables are prefixed with _ci_ to avoid symbol collision with\r\n	 * 变量名以前缀_ci_开始，避免了与视图文件的符号冲突\r\n	 * variables made available to view files\r\n	 *\r\n	 * @param	array\r\n	 * @return	void\r\n	 */\r\n	protected function _ci_load($_ci_data)\r\n	{\r\n		// Set the default data variables 设置默认的数据变量\r\n		foreach (array(\'_ci_view\', \'_ci_vars\', \'_ci_path\', \'_ci_return\') as $_ci_val)\r\n		{\r\n			$$_ci_val = ( ! isset($_ci_data[$_ci_val])) ? FALSE : $_ci_data[$_ci_val];\r\n		}\r\n\r\n		$file_exists = FALSE;\r\n\r\n		// Set the path to the requested file\r\n		// 设置请求文件的路径\r\n		if ($_ci_path != \'\')\r\n		{\r\n			$_ci_x = explode(\'/\', $_ci_path);\r\n			$_ci_file = end($_ci_x);\r\n		}\r\n		else\r\n		{\r\n			$_ci_ext = pathinfo($_ci_view, PATHINFO_EXTENSION);\r\n			$_ci_file = ($_ci_ext == \'\') ? $_ci_view.\'.php\' : $_ci_view;\r\n\r\n			foreach ($this-&gt;_ci_view_paths as $view_file =&gt; $cascade)\r\n			{\r\n				if (file_exists($view_file.$_ci_file))\r\n				{\r\n					$_ci_path = $view_file.$_ci_file;\r\n					$file_exists = TRUE;\r\n					break;\r\n				}\r\n\r\n				if ( ! $cascade)\r\n				{\r\n					break;\r\n				}\r\n			}\r\n		}\r\n\r\n		if ( ! $file_exists &amp;&amp; ! file_exists($_ci_path))\r\n		{\r\n			show_error(\'Unable to load the requested file: \'.$_ci_file);\r\n		}\r\n\r\n		// This allows anything loaded using $this-&gt;load (views, files, etc.)\r\n		// 这使得任何东西在控制器和模型中都可以通过使用$this-&gt;load进行载入（视图，文件，等等）\r\n		// to become accessible from within the Controller and Model functions.\r\n		$_ci_CI =&amp; get_instance();\r\n		foreach (get_object_vars($_ci_CI) as $_ci_key =&gt; $_ci_var)\r\n		{\r\n			if ( ! isset($this-&gt;$_ci_key))\r\n			{\r\n				$this-&gt;$_ci_key =&amp; $_ci_CI-&gt;$_ci_key;\r\n			}\r\n		}\r\n\r\n		/*\r\n		 * Extract and cache variables\r\n		 * 提取和缓存变量\r\n		 * You can either set variables using the dedicated $this-&gt;load_vars()\r\n		 *  你可以使用专用的$this-&gt;load_vars()函数设置变量或者是通过这个函数的第二个参数\r\n		 * function or via the second parameter of this function. We\'ll merge\r\n		 *  我们将会合并这两个类型并缓存它们，让嵌入其它视图的视图可以访问到这些变量\r\n		 * the two types and cache them so that views that are embedded within\r\n		 * other views can have access to these variables.\r\n		 */\r\n		if (is_array($_ci_vars))\r\n		{\r\n			$this-&gt;_ci_cached_vars = array_merge($this-&gt;_ci_cached_vars, $_ci_vars);\r\n		}\r\n		extract($this-&gt;_ci_cached_vars);//通过extract可以提取出数组中的内容，方便直接使用，大多数的视图使用控制器的变量都是通过这样实现的\r\n\r\n		/*\r\n		 * Buffer the output\r\n		 * 缓冲输出\r\n		 *\r\n		 * We buffer the output for two reasons: \r\n		 * 缓冲输出有两个原因：\r\n		 * 1. Speed. You get a significant speed boost.\r\n		 *  速度， 你可以获取重大的速度提升\r\n		 * 2. So that the final rendered template can be\r\n		 * post-processed by the output class.  Why do we\r\n		 * need post processing?  For one thing, in order to\r\n		 * show the elapsed page load time.  Unless we\r\n		 * can intercept the content right before it\'s sent to\r\n		 * the browser and then stop the timer it won\'t be accurate.\r\n		 *  最终渲染的模板可以通过output类进行后置处理。为什么需要后置处理？一个原因是\r\n		 *  为了显示页面的载入时间。除非我们可以在发送到浏览器之前与页面内容进行交互，然后\r\n		 *  终止计时器，否则时间统计将不准确\r\n		 */\r\n		ob_start();\r\n\r\n		\r\n		/**\r\n		 * 下面的处理使得使用短标记成为可能，不管是否是在PHP配置文件中\r\n		 * 禁止了使用短标记，我们都可以使用，极大地提高了模板开发效率\r\n		 */\r\n		// If the PHP installation does not support short tags we\'ll\r\n		// 如果PHP不支持短标记，我们将会做一些字符替换，改变短标记为标准的PHP echo块\r\n		// do a little string replacement, changing the short tags\r\n		// to standard PHP echo statements.\r\n		\r\n		if ((bool) @ini_get(\'short_open_tag\') === FALSE AND config_item(\'rewrite_short_tags\') == TRUE)\r\n		{\r\n			echo eval(\'?&gt;\'.preg_replace(\"/;*\\s*\\?&gt;/\", \"; ?&gt;\", str_replace(\'&lt;?=\', \'&lt;?php echo \', file_get_contents($_ci_path))));\r\n		}\r\n		else\r\n		{\r\n			include($_ci_path); // include() vs include_once() allows for multiple views with the same name\r\n		}\r\n\r\n		log_message(\'debug\', \'文件已载入: \'.$_ci_path);\r\n\r\n		// Return the file data if requested 如果请求的话，返回渲染后的模板文件数据\r\n		if ($_ci_return === TRUE)\r\n		{\r\n			$buffer = ob_get_contents();\r\n			@ob_end_clean();//清理缓冲区\r\n			return $buffer;\r\n		}\r\n\r\n		/*\r\n		 * Flush the buffer... or buff the flusher?\r\n		 * 刷新缓冲区\r\n		 * In order to permit views to be nested within\r\n		 * 为了允许视图嵌套，我们需要在第一层缓冲级别上刷新缓冲，输出内容\r\n		 * 如果不是第一层缓冲的话，将会被包含到第一层模板中。\r\n		 * \r\n		 * other views, we need to flush the content back out whenever\r\n		 * we are beyond the first level of output buffering so that\r\n		 * it can be seen and included properly by the first included\r\n		 * template and any subsequent ones. Oy!\r\n		 *\r\n		 */\r\n		if (ob_get_level() &gt; $this-&gt;_ci_ob_level + 1)\r\n		{\r\n			ob_end_flush();//刷新缓冲区，关闭当前输出缓冲\r\n		}\r\n		else\r\n		{\r\n			$_ci_CI-&gt;output-&gt;append_output(ob_get_contents());//将缓冲区内容追加到输出缓冲流中\r\n			@ob_end_clean();//清空当前缓冲区，关闭当前输出缓冲\r\n		}\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Load class 载入类\r\n	 * \r\n	 * This function loads the requested class.\r\n	 * 这个函数载入请求的类\r\n	 * @param	string	the item that is being loaded\r\n	 * @param	mixed	any additional parameters\r\n	 * @param	string	an optional object name\r\n	 * @return	void\r\n	 */\r\n	protected function _ci_load_class($class, $params = NULL, $object_name = NULL)\r\n	{\r\n		// Get the class name, and while we\'re at it trim any slashes. 获取类名\r\n		// The directory path can be included as part of the class name, 目录的路径也可以作为类名的一部分\r\n		// but we don\'t want a leading slash\r\n		//这里出掉了前后的/，并去掉了php的后缀，获取了类名（包含路径的类名）\r\n		$class = str_replace(\'.php\', \'\', trim($class, \'/\'));\r\n\r\n		// Was the path included with the class name? 类名中是否包含路径？\r\n		// We look for a slash to determine this 通过是否有/进行判断\r\n		$subdir = \'\';//子目录\r\n		if (($last_slash = strrpos($class, \'/\')) !== FALSE)//获取/在类名中最后一次出现的位置，该位置分割了类名和路径\r\n		{\r\n			// Extract the path 获取类的目录路径\r\n			$subdir = substr($class, 0, $last_slash + 1);\r\n\r\n			// Get the filename from the path 获取类的名称\r\n			$class = substr($class, $last_slash + 1);\r\n		}\r\n\r\n		// We\'ll test for both lowercase and capitalized versions of the file name\r\n		// 这里将测试小写和首字母大写两个版本的文件名\r\n		foreach (array(ucfirst($class), strtolower($class)) as $class)\r\n		{\r\n			$subclass = APPPATH.\'libraries/\'.$subdir.config_item(\'subclass_prefix\').$class.\'.php\';//获取扩展类的类路径\r\n\r\n			// Is this a class extension request? 是否这是个类的扩展的请求\r\n			if (file_exists($subclass))//存在扩展类\r\n			{\r\n				$baseclass = BASEPATH.\'libraries/\'.ucfirst($class).\'.php\';//获取扩展类的基类（在system中）\r\n\r\n				if ( ! file_exists($baseclass))//不存在要扩展的基类\r\n				{\r\n					log_message(\'error\', \"不能载入请求的类: \".$class);\r\n					show_error(\"不能载入请求的类: \".$class);\r\n				}\r\n\r\n				// Safety:  Was the class already loaded by a previous call?\r\n				// 安全： 是否这个类已经在之前的调用中载入了？\r\n				if (in_array($subclass, $this-&gt;_ci_loaded_files))\r\n				{\r\n					// Before we deem this to be a duplicate request, let\'s see \r\n					// 在我们相信这是个重复的请求之前， 让我们看一下\r\n					// if a custom object name is being supplied.  If so, we\'ll\r\n					// 是否一个自定义的对象名已经被提供了。如果提供了，我们将会\r\n					// return a new instance of the object\r\n					// 返回一个新的对象实例\r\n					if ( ! is_null($object_name))\r\n					{\r\n						$CI =&amp; get_instance();\r\n						if ( ! isset($CI-&gt;$object_name))\r\n						{\r\n							return $this-&gt;_ci_init_class($class, config_item(\'subclass_prefix\'), $params, $object_name);\r\n						}\r\n					}\r\n\r\n					$is_duplicate = TRUE;\r\n					log_message(\'debug\', $class.\" 类已经被加载了，第二次加载请求被忽略.\");\r\n					return;\r\n				}\r\n\r\n				include_once($baseclass);\r\n				include_once($subclass);\r\n				$this-&gt;_ci_loaded_files[] = $subclass;\r\n\r\n				return $this-&gt;_ci_init_class($class, config_item(\'subclass_prefix\'), $params, $object_name);\r\n			}\r\n\r\n			// Lets search for the requested library file and load it.\r\n			// 搜索请求的类库文件，并载入\r\n			$is_duplicate = FALSE;\r\n			foreach ($this-&gt;_ci_library_paths as $path)\r\n			{\r\n				$filepath = $path.\'libraries/\'.$subdir.$class.\'.php\';\r\n\r\n				// Does the file exist?  No?  Bummer...\r\n				// 文件存在？没有？懒汉！！\r\n				if ( ! file_exists($filepath))\r\n				{\r\n					continue;\r\n				}\r\n\r\n				// Safety:  Was the class already loaded by a previous call?\r\n				// 安全： 类已经在先前的调用中加载过了？\r\n				if (in_array($filepath, $this-&gt;_ci_loaded_files))\r\n				{\r\n					// Before we deem this to be a duplicate request, let\'s see\r\n					// if a custom object name is being supplied.  If so, we\'ll\r\n					// return a new instance of the object\r\n					if ( ! is_null($object_name))\r\n					{\r\n						$CI =&amp; get_instance();\r\n						if ( ! isset($CI-&gt;$object_name))\r\n						{\r\n							return $this-&gt;_ci_init_class($class, \'\', $params, $object_name);\r\n						}\r\n					}\r\n\r\n					$is_duplicate = TRUE;\r\n					log_message(\'debug\', $class.\" class already loaded. Second attempt ignored.\");\r\n					return;\r\n				}\r\n\r\n				include_once($filepath);\r\n				$this-&gt;_ci_loaded_files[] = $filepath;\r\n				return $this-&gt;_ci_init_class($class, \'\', $params, $object_name);\r\n			}\r\n\r\n		} // END FOREACH\r\n\r\n		// One last attempt.  Maybe the library is in a subdirectory, but it wasn\'t specified?\r\n		// 最后的尝试，可能类库在一个子目录中，但是没有指定？\r\n		if ($subdir == \'\')\r\n		{\r\n			$path = strtolower($class).\'/\'.$class;\r\n			return $this-&gt;_ci_load_class($path, $params);\r\n		}\r\n\r\n		// If we got this far we were unable to find the requested class.\r\n		// 如果执行到这里，说明每有发现请求的类\r\n		// We do not issue errors if the load call failed due to a duplicate request\r\n		// 如果载入的请求失败是因为重复请求，我们将不会抛出这个错误\r\n		if ($is_duplicate == FALSE)\r\n		{\r\n			log_message(\'error\', \"不能够载入请求的类: \".$class);\r\n			show_error(\"不能够载入请求的类: \".$class);\r\n		}\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Instantiates a class\r\n	 * 实例化一个类\r\n	 * @param	string\r\n	 * @param	string\r\n	 * @param	bool\r\n	 * @param	string	an optional object name\r\n	 * @return	null\r\n	 */\r\n	protected function _ci_init_class($class, $prefix = \'\', $config = FALSE, $object_name = NULL)\r\n	{\r\n		// Is there an associated config file for this class?  Note: these should always be lowercase\r\n		if ($config === NULL)\r\n		{\r\n			// Fetch the config paths containing any package paths\r\n			$config_component = $this-&gt;_ci_get_component(\'config\');\r\n\r\n			if (is_array($config_component-&gt;_config_paths))\r\n			{\r\n				// Break on the first found file, thus package files\r\n				// are not overridden by default paths\r\n				foreach ($config_component-&gt;_config_paths as $path)\r\n				{\r\n					// We test for both uppercase and lowercase, for servers that\r\n					// are case-sensitive with regard to file names. Check for environment\r\n					// first, global next\r\n					if (defined(\'ENVIRONMENT\') AND file_exists($path .\'config/\'.ENVIRONMENT.\'/\'.strtolower($class).\'.php\'))\r\n					{\r\n						include($path .\'config/\'.ENVIRONMENT.\'/\'.strtolower($class).\'.php\');\r\n						break;\r\n					}\r\n					elseif (defined(\'ENVIRONMENT\') AND file_exists($path .\'config/\'.ENVIRONMENT.\'/\'.ucfirst(strtolower($class)).\'.php\'))\r\n					{\r\n						include($path .\'config/\'.ENVIRONMENT.\'/\'.ucfirst(strtolower($class)).\'.php\');\r\n						break;\r\n					}\r\n					elseif (file_exists($path .\'config/\'.strtolower($class).\'.php\'))\r\n					{\r\n						include($path .\'config/\'.strtolower($class).\'.php\');\r\n						break;\r\n					}\r\n					elseif (file_exists($path .\'config/\'.ucfirst(strtolower($class)).\'.php\'))\r\n					{\r\n						include($path .\'config/\'.ucfirst(strtolower($class)).\'.php\');\r\n						break;\r\n					}\r\n				}\r\n			}\r\n		}\r\n		/**\r\n		 * 如果指定的前缀为空，会先判断是否存在CI_类名的类，如果不存在，\r\n		 * 判断是否有（subclass_prefix）为前缀的类是否存在，如果扔不存在，则使用传入的类名\r\n		 */\r\n		if ($prefix == \'\')\r\n		{\r\n			if (class_exists(\'CI_\'.$class))\r\n			{\r\n				$name = \'CI_\'.$class;\r\n			}\r\n			elseif (class_exists(config_item(\'subclass_prefix\').$class))\r\n			{\r\n				$name = config_item(\'subclass_prefix\').$class;\r\n			}\r\n			else\r\n			{\r\n				$name = $class;\r\n			}\r\n		}\r\n		else\r\n		{\r\n			$name = $prefix.$class;\r\n		}\r\n\r\n		// Is the class name valid?\r\n		if ( ! class_exists($name))\r\n		{\r\n			log_message(\'error\', \"不存在类: \".$name);\r\n			show_error(\"不存在类: \".$class);\r\n		}\r\n\r\n		// Set the variable name we will assign the class to\r\n		// Was a custom class name supplied?  If so we\'ll use it\r\n		$class = strtolower($class);\r\n\r\n		if (is_null($object_name))\r\n		{\r\n			$classvar = ( ! isset($this-&gt;_ci_varmap[$class])) ? $class : $this-&gt;_ci_varmap[$class];\r\n		}\r\n		else\r\n		{\r\n			$classvar = $object_name;\r\n		}\r\n\r\n		// Save the class name and object name\r\n		$this-&gt;_ci_classes[$class] = $classvar;\r\n\r\n		// Instantiate the class\r\n		$CI =&amp; get_instance();\r\n		if ($config !== NULL)\r\n		{\r\n			$CI-&gt;$classvar = new $name($config);\r\n		}\r\n		else\r\n		{\r\n			$CI-&gt;$classvar = new $name;\r\n		}\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Autoloader 自动加载\r\n	 *\r\n	 * The config/autoload.php file contains an array that permits sub-systems,\r\n	 *  配置文件config/autoload.php文件包含了一个包含允许自动加载的子系统，类库，助手的数组\r\n	 * libraries, and helpers to be loaded automatically.\r\n	 *\r\n	 * @param	array\r\n	 * @return	void\r\n	 */\r\n	private function _ci_autoloader()\r\n	{\r\n		if (defined(\'ENVIRONMENT\') AND file_exists(APPPATH.\'config/\'.ENVIRONMENT.\'/autoload.php\'))\r\n		{\r\n			include(APPPATH.\'config/\'.ENVIRONMENT.\'/autoload.php\');\r\n		}\r\n		else\r\n		{\r\n			include(APPPATH.\'config/autoload.php\');\r\n		}\r\n		// 如果在配置文件autoload.php中没有$autoload变量的话，说明没有需要自动加载的类，直接返回\r\n		if ( ! isset($autoload))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		// Autoload packages 自动载入包\r\n		if (isset($autoload[\'packages\']))\r\n		{\r\n			foreach ($autoload[\'packages\'] as $package_path)\r\n			{\r\n				$this-&gt;add_package_path($package_path);\r\n			}\r\n		}\r\n\r\n		// Load any custom config file 载入任意的自定义配置文件\r\n		if (count($autoload[\'config\']) &gt; 0)\r\n		{\r\n			$CI =&amp; get_instance();\r\n			foreach ($autoload[\'config\'] as $key =&gt; $val)\r\n			{\r\n				$CI-&gt;config-&gt;load($val);\r\n			}\r\n		}\r\n\r\n		// Autoload helpers and languages 助手和语言\r\n		foreach (array(\'helper\', \'language\') as $type)\r\n		{\r\n			if (isset($autoload[$type]) AND count($autoload[$type]) &gt; 0)\r\n			{\r\n				$this-&gt;$type($autoload[$type]);\r\n			}\r\n		}\r\n\r\n		// A little tweak to remain backward compatible 向后兼容\r\n		// The $autoload[\'core\'] item was deprecated 这个$autoload[\'core\']已经不赞成使用了\r\n		if ( ! isset($autoload[\'libraries\']) AND isset($autoload[\'core\']))\r\n		{\r\n			$autoload[\'libraries\'] = $autoload[\'core\'];\r\n		}\r\n\r\n		// Load libraries 载入类库\r\n		if (isset($autoload[\'libraries\']) AND count($autoload[\'libraries\']) &gt; 0)\r\n		{\r\n			// Load the database driver. 载入数据库驱动\r\n			if (in_array(\'database\', $autoload[\'libraries\']))\r\n			{\r\n				$this-&gt;database();//执行单独的数据库加载\r\n				$autoload[\'libraries\'] = array_diff($autoload[\'libraries\'], array(\'database\'));//把database从要加载的类库中去除\r\n			}\r\n\r\n			// Load all other libraries 载入其他类库\r\n			foreach ($autoload[\'libraries\'] as $item)\r\n			{\r\n				$this-&gt;library($item);\r\n			}\r\n		}\r\n\r\n		// Autoload models 自动载入模型\r\n		if (isset($autoload[\'model\']))\r\n		{\r\n			$this-&gt;model($autoload[\'model\']);\r\n		}\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Object to Array\r\n	 * 把对象转换为数组\r\n	 * Takes an object as input and converts the class variables to array key/vals\r\n	 * 把参数中的对象中的类成员变量转换为key/value的数组\r\n	 * @param	object\r\n	 * @return	array\r\n	 */\r\n	protected function _ci_object_to_array($object)\r\n	{\r\n		return (is_object($object)) ? get_object_vars($object) : $object;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Get a reference to a specific library or model\r\n	 * 获取指定类库或者是模型的引用\r\n	 * @param 	string\r\n	 * @return	bool\r\n	 */\r\n	protected function &amp;_ci_get_component($component)\r\n	{\r\n		$CI =&amp; get_instance();\r\n		return $CI-&gt;$component;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Prep filename\r\n	 *\r\n	 * This function preps the name of various items to make loading them more reliable.\r\n	 * 这个函数处理传入的文件名，确保其是指定的扩展名的文件，返回替换后的文件名\r\n	 *  \r\n	 * @param	mixed\r\n	 * @param 	string\r\n	 * @return	array\r\n	 */\r\n	protected function _ci_prep_filename($filename, $extension)\r\n	{\r\n		if ( ! is_array($filename))\r\n		{\r\n			return array(strtolower(str_replace(\'.php\', \'\', str_replace($extension, \'\', $filename)).$extension));\r\n		}\r\n		else\r\n		{\r\n			foreach ($filename as $key =&gt; $val)\r\n			{\r\n				$filename[$key] = strtolower(str_replace(\'.php\', \'\', str_replace($extension, \'\', $val)).$extension);\r\n			}\r\n\r\n			return $filename;\r\n		}\r\n	}\r\n}</pre></p>','<pre class=\"brush:php; toolbar: true; auto-links: true;\">//\r\n///**\r\n// * 载入类\r\n// *\r\n// * 载入视图和文件\r\n// *\r\n// * @package		CodeIgniter\r\n// * @subpackage	Libraries\r\n// * @author		ExpressionEngine Dev Team\r\n// * @category	Loader\r\n// * @link		http://codeigniter.com/user_guide/libraries/loader.html\r\n// */\r\n//class CI_Loader {\r\n//\r\n//	// All these are set automatically. Don\'t mess with them. 下面这些都会自动获取，不要修改它们\r\n//	/**\r\n//	 * Nesting level of the output buffering mechanism 输出缓冲机制的嵌套级别\r\n//	 *\r\n//	 * @var in','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(161,'CodeIgniter框架 学习笔记 （4）Router路由类','<pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * 路由类\r\n *\r\n * 解析 URIs 和 路由决策\r\n *\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @author		ExpressionEngine Dev Team\r\n * @category	Libraries\r\n * @link		http://codeigniter.com/user_guide/general/routing.html\r\n */\r\nclass CI_Router {\r\n\r\n	/**\r\n	 * 配置类\r\n	 *\r\n	 * @var object\r\n	 * @access public\r\n	 */\r\n	var $config;\r\n	/**\r\n	 * 路由列表\r\n	 *\r\n	 * @var array\r\n	 * @access public\r\n	 */\r\n	var $routes			= array();\r\n	/**\r\n	 * 错误路由列表\r\n	 *\r\n	 * @var array\r\n	 * @access public\r\n	 */\r\n	var $error_routes	= array();\r\n	/**\r\n	 * 当前类名\r\n	 *\r\n	 * @var string\r\n	 * @access public\r\n	 */\r\n	var $class			= \'\';\r\n	/**\r\n	 * 当前方法名\r\n	 *\r\n	 * @var string\r\n	 * @access public\r\n	 */\r\n	var $method			= \'index\';\r\n	/**\r\n	 * Sub-directory that contains the requested controller class\r\n	 * 包含请求的控制器的类文件的子目录\r\n	 * @var string\r\n	 * @access public\r\n	 */\r\n	var $directory		= \'\';\r\n	/**\r\n	 * Default controller (and method if specific)\r\n	 * 默认控制器\r\n	 * @var string\r\n	 * @access public\r\n	 */\r\n	var $default_controller;\r\n\r\n	/**\r\n	 * Constructor\r\n	 *\r\n	 * 运行路由映射函数.\r\n	 */\r\n	function __construct()\r\n	{\r\n		$this-&gt;config =&amp; load_class(\'Config\', \'core\');\r\n		$this-&gt;uri =&amp; load_class(\'URI\', \'core\');\r\n		log_message(\'debug\', \"路由类初始化\");\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * 设置路由映射\r\n	 *\r\n	 * This function determines what should be served based on the URI request,\r\n	 * as well as any \"routes\" that have been set in the routing config file.\r\n	 *\r\n	 * @access	private\r\n	 * @return	void\r\n	 */\r\n	function _set_routing()\r\n	{\r\n		//查询字符串是否允许使用，通常CI不适用查询字符串，因为它不是搜索引擎友好的，如果使用的话，将会使用\"目录/类/方法\"有一些不同\r\n		// Are query strings enabled in the config file?  Normally CI doesn\'t utilize query strings\r\n		// since URI segments are more search-engine friendly, but they can optionally be used.\r\n		// If this feature is enabled, we will gather the directory/class/method a little differently\r\n		$segments = array();\r\n		if ($this-&gt;config-&gt;item(\'enable_query_strings\') === TRUE AND isset($_GET[$this-&gt;config-&gt;item(\'controller_trigger\')]))//允许使用查询字符串，同时在参数中有控制器出触发的话，比如“c=控制器”\r\n		{\r\n			if (isset($_GET[$this-&gt;config-&gt;item(\'directory_trigger\')]))//如果设置了目录触发参数\r\n			{\r\n				$this-&gt;set_directory(trim($this-&gt;uri-&gt;_filter_uri($_GET[$this-&gt;config-&gt;item(\'directory_trigger\')])));//设置当前访问的目录\r\n				$segments[] = $this-&gt;fetch_directory();//设置目录,应该是$segments[0]\r\n			}\r\n\r\n			if (isset($_GET[$this-&gt;config-&gt;item(\'controller_trigger\')]))//设置了控制器触发器的话\r\n			{\r\n				$this-&gt;set_class(trim($this-&gt;uri-&gt;_filter_uri($_GET[$this-&gt;config-&gt;item(\'controller_trigger\')])));//设置要访问的控制器类\r\n				$segments[] = $this-&gt;fetch_class();//设置控制器（类）， 如果有目录参数的话，$segments[1],否则$segments[0]\r\n			}\r\n\r\n			if (isset($_GET[$this-&gt;config-&gt;item(\'function_trigger\')]))//设置了方法触发器\r\n			{\r\n				$this-&gt;set_method(trim($this-&gt;uri-&gt;_filter_uri($_GET[$this-&gt;config-&gt;item(\'function_trigger\')])));\r\n				$segments[] = $this-&gt;fetch_method();//同上\r\n			}\r\n		}\r\n\r\n		// 载入routes.php配置文件\r\n		if (defined(\'ENVIRONMENT\') AND is_file(APPPATH.\'config/\'.ENVIRONMENT.\'/routes.php\'))\r\n		{\r\n			include(APPPATH.\'config/\'.ENVIRONMENT.\'/routes.php\');\r\n		}\r\n		elseif (is_file(APPPATH.\'config/routes.php\'))\r\n		{\r\n			include(APPPATH.\'config/routes.php\');\r\n		}\r\n		#这里的$route是配置文件中的那个$route，也就是说，如果配置文件中通过这个数组配置后，将会在此处合并为成员变量\r\n		$this-&gt;routes = ( ! isset($route) OR ! is_array($route)) ? array() : $route;\r\n		unset($route);//删除掉原来的$route，释放内存\r\n\r\n		// 设置默认控制器，当不匹配时调用\r\n		$this-&gt;default_controller = ( ! isset($this-&gt;routes[\'default_controller\']) OR $this-&gt;routes[\'default_controller\'] == \'\') ? FALSE : strtolower($this-&gt;routes[\'default_controller\']);\r\n\r\n		//如果$segments数组元素个数大于0，也就是允许查询字符串，同时请求参数中存在控制器，方法和目录中的至少一个\r\n		// Were there any query string segments?  If so, we\'ll validate them and bail out since we\'re done.\r\n		if (count($segments) &gt; 0)\r\n		{\r\n			return $this-&gt;_validate_request($segments);//验证路由是否正确，正确的话使用查询字符串路由方式，失败的话会进入404页面\r\n		}\r\n		#没有从查询字符串中解析到。。\r\n\r\n		// 解析完整的url\r\n		$this-&gt;uri-&gt;_fetch_uri_string();\r\n\r\n		// 不是一个合法的URI的话，调用默认控制器\r\n		if ($this-&gt;uri-&gt;uri_string == \'\')\r\n		{\r\n			return $this-&gt;_set_default_controller();\r\n		}\r\n\r\n		//移除url后缀，应该是伪静态的后缀，如.html\r\n		$this-&gt;uri-&gt;_remove_url_suffix();\r\n\r\n		// 把uri编译，生成到数组中去\r\n		$this-&gt;uri-&gt;_explode_segments();\r\n\r\n		// 解析路由\r\n		$this-&gt;_parse_routes();\r\n\r\n		// Re-index the segment array so that it starts with 1 rather than 0不懂？？？？\r\n		$this-&gt;uri-&gt;_reindex_segments();\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * 设置默认控制器\r\n	 *\r\n	 * @access	private\r\n	 * @return	void\r\n	 */\r\n	function _set_default_controller()\r\n	{\r\n		if ($this-&gt;default_controller === FALSE)\r\n		{\r\n			show_error(\"不能决定应该显示什么. 在路由文件中没有指定默认的路由.\");\r\n		}\r\n		// Is the method being specified?\r\n		if (strpos($this-&gt;default_controller, \'/\') !== FALSE)\r\n		{\r\n			$x = explode(\'/\', $this-&gt;default_controller);\r\n\r\n			$this-&gt;set_class($x[0]);\r\n			$this-&gt;set_method($x[1]);\r\n			$this-&gt;_set_request($x);\r\n		}\r\n		else\r\n		{\r\n			$this-&gt;set_class($this-&gt;default_controller);\r\n			$this-&gt;set_method(\'index\');\r\n			$this-&gt;_set_request(array($this-&gt;default_controller, \'index\'));\r\n		}\r\n\r\n		// re-index the routed segments array so it starts with 1 rather than 0\r\n		$this-&gt;uri-&gt;_reindex_segments();\r\n\r\n		log_message(\'debug\', \"No URI present. Default controller set.\");\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * 设置路由\r\n	 *\r\n	 * This function takes an array of URI segments as\r\n	 * input, and sets the current class/method\r\n	 *\r\n	 * @access	private\r\n	 * @param	array\r\n	 * @param	bool\r\n	 * @return	void\r\n	 */\r\n	function _set_request($segments = array())\r\n	{\r\n		$segments = $this-&gt;_validate_request($segments);//首先验证一下$segments是否正确\r\n\r\n		if (count($segments) == 0)//\r\n		{\r\n			return $this-&gt;_set_default_controller();\r\n		}\r\n\r\n		$this-&gt;set_class($segments[0]);\r\n\r\n		if (isset($segments[1]))\r\n		{\r\n			// A standard method request\r\n			$this-&gt;set_method($segments[1]);\r\n		}\r\n		else\r\n		{\r\n			// This lets the \"routed\" segment array identify that the default\r\n			// index method is being used.默认方法index\r\n			$segments[1] = \'index\';\r\n		}\r\n\r\n		// Update our \"routed\" segment array to contain the segments.\r\n		// Note: If there is no custom routing, this array will be\r\n		// identical to $this-&gt;uri-&gt;segments\r\n		$this-&gt;uri-&gt;rsegments = $segments;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * 验证提供的URI段，尝试决定到控制器的路径\r\n	 * 验证成功的话，会完成设置成员变量，失败的话直接返回404错误页面\r\n	 * @access	private\r\n	 * @param	array\r\n	 * @return	array\r\n	 */\r\n	function _validate_request($segments)\r\n	{\r\n		#当目录，控制器，方法参数都有值的时候，三个值是:0目录 1控制器 2方法\r\n		if (count($segments) == 0)\r\n		{\r\n			return $segments;\r\n		}\r\n\r\n		//请求的控制器是否在应用的controllers根目录中存在？此时，假设$segments[0]为控制器名\r\n		// Does the requested controller exist in the root folder?\r\n		if (file_exists(APPPATH.\'controllers/\'.$segments[0].\'.php\'))\r\n		{\r\n			return $segments;\r\n		}\r\n\r\n		// 如果根目录中不存在，那么判断在子目录中是否存在，将$segments[0]当做是目录?\r\n		if (is_dir(APPPATH.\'controllers/\'.$segments[0]))//如果第一个参数指定的目录存在\r\n		{\r\n			// 设置第一个参数的值为访问目录\r\n			$this-&gt;set_directory($segments[0]);\r\n			$segments = array_slice($segments, 1);//数组切片，去除第一个元素\r\n\r\n			if (count($segments) &gt; 0)//如果还有参数的话，应该是不存在控制器，但存在访问的方法\r\n			{\r\n				// 判断第二个参数指定控制器是否存在\r\n				if ( ! file_exists(APPPATH.\'controllers/\'.$this-&gt;fetch_directory().$segments[0].\'.php\'))\r\n				{//不存在，说明没有找到指定的控制器，应该报错了\r\n					if ( ! empty($this-&gt;routes[\'404_override\']))//如果在routes.php中配置了默认的404页面的话继续\r\n					{//调用404错误页面\r\n						$x = explode(\'/\', $this-&gt;routes[\'404_override\']);\r\n\r\n						$this-&gt;set_directory(\'\');\r\n						$this-&gt;set_class($x[0]);\r\n						$this-&gt;set_method(isset($x[1]) ? $x[1] : \'index\');\r\n\r\n						return $x;\r\n					}\r\n					else//没有设置默认404页面，使用系统方式显示404错误\r\n					{\r\n						show_404($this-&gt;fetch_directory().$segments[0]);\r\n					}\r\n				}\r\n			}\r\n			else//不存在控制器，也不存在访问方法\r\n			{\r\n				// 路由中指定了默认的控制器?\r\n				if (strpos($this-&gt;default_controller, \'/\') !== FALSE)//strpos是查找字符串首次出现的位置，返回的是FALSE的话说明，不存在/，也就是没有指定默认方法\r\n				{//调用默认控制器，默认方法\r\n					$x = explode(\'/\', $this-&gt;default_controller);\r\n\r\n					$this-&gt;set_class($x[0]);\r\n					$this-&gt;set_method($x[1]);\r\n				}\r\n				else//调用默认控制器的index方法\r\n				{\r\n					$this-&gt;set_class($this-&gt;default_controller);\r\n					$this-&gt;set_method(\'index\');\r\n				}\r\n\r\n				// 如果默认控制器不存在子目录中的话，将目录置空，以使其访问根目录的默认控制器，主要是考虑到了解析成功目录后，如果没有解析到控制器和方法的情况\r\n				if ( ! file_exists(APPPATH.\'controllers/\'.$this-&gt;fetch_directory().$this-&gt;default_controller.\'.php\'))\r\n				{\r\n					$this-&gt;directory = \'\';\r\n					return array();\r\n				}\r\n\r\n			}\r\n\r\n			return $segments;\r\n		}\r\n\r\n		//根目录不存在子目录也不存在，只有报错了，下面判断是否有自定义404页面，有的话显示，没有的话使用默认的。\r\n		// If we\'ve gotten this far it means that the URI does not correlate to a valid\r\n		// controller class.  We will now see if there is an override\r\n		if ( ! empty($this-&gt;routes[\'404_override\']))\r\n		{\r\n			$x = explode(\'/\', $this-&gt;routes[\'404_override\']);\r\n\r\n			$this-&gt;set_class($x[0]);\r\n			$this-&gt;set_method(isset($x[1]) ? $x[1] : \'index\');\r\n\r\n			return $x;\r\n		}\r\n\r\n\r\n		// Nothing else to do at this point but show a 404\r\n		show_404($segments[0]);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 *  解析路由\r\n	 *\r\n	 * This function matches any routes that may exist in\r\n	 * the config/routes.php file against the URI to\r\n	 * determine if the class/method need to be remapped.\r\n	 *\r\n	 * @access	private\r\n	 * @return	void\r\n	 */\r\n	function _parse_routes()\r\n	{\r\n		// 把生成的url数组重新组合成uri地址\r\n		$uri = implode(\'/\', $this-&gt;uri-&gt;segments);\r\n\r\n		// 如果访问的地址在路由配置文件中存在相同映射，设置访问映射中指定的控制器方法\r\n		if (isset($this-&gt;routes[$uri]))\r\n		{\r\n			return $this-&gt;_set_request(explode(\'/\', $this-&gt;routes[$uri]));\r\n		}\r\n\r\n		// 遍历routes，解析通配符\r\n		foreach ($this-&gt;routes as $key =&gt; $val)\r\n		{\r\n			// 把框架定义的简单快捷方式转换成正则表达式,例如$route[\'news/(:any)\'] = \'news/view/$1\';  ==&gt;  $route[\'news/(.+)\'] = \'news/view/$1\';\r\n			$key = str_replace(\':any\', \'.+\', str_replace(\':num\', \'[0-9]+\', $key));//:num解析[0-9]+ , :any解析成.+\r\n\r\n			// 对uri与键名的正则进行匹配，使用了#作为定界符（#和/都可以作为定界符）\r\n			if (preg_match(\'#^\'.$key.\'$#\', $uri))//匹配成功\r\n			{\r\n				// Do we have a back-reference?\r\n				//$route[\'news/(.+)\'] = \'news/view/$1\';下面将会对uri进行正则替换.+的值匹配到了$1\r\n				if (strpos($val, \'$\') !== FALSE AND strpos($key, \'(\') !== FALSE)\r\n				{\r\n					$val = preg_replace(\'#^\'.$key.\'$#\', $val, $uri);\r\n				}\r\n\r\n				return $this-&gt;_set_request(explode(\'/\', $val));//重新设置访问参数\r\n			}\r\n		}\r\n\r\n		// 没有匹配到默认自定义的路由\r\n		$this-&gt;_set_request($this-&gt;uri-&gt;segments);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * 设置类名\r\n	 *\r\n	 * @access	public\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	function set_class($class)\r\n	{\r\n		$this-&gt;class = str_replace(array(\'/\', \'.\'), \'\', $class);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * 取得当前类\r\n	 *\r\n	 * @access	public\r\n	 * @return	string\r\n	 */\r\n	function fetch_class()\r\n	{\r\n		return $this-&gt;class;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * 设置方法\r\n	 *\r\n	 * @access	public\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	function set_method($method)\r\n	{\r\n		$this-&gt;method = $method;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 *  取得当前方法\r\n	 *\r\n	 * @access	public\r\n	 * @return	string\r\n	 */\r\n	function fetch_method()\r\n	{\r\n		if ($this-&gt;method == $this-&gt;fetch_class())\r\n		{\r\n			return \'index\';\r\n		}\r\n\r\n		return $this-&gt;method;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 *  设置目录当前访问的目录\r\n	 *\r\n	 * @access	public\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	function set_directory($dir)\r\n	{\r\n		$this-&gt;directory = str_replace(array(\'/\', \'.\'), \'\', $dir).\'/\';\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 *  Fetch the sub-directory (if any) that contains the requested controller class\r\n	 * 取得被请求控制器的子目录\r\n	 * @access	public\r\n	 * @return	string\r\n	 */\r\n	function fetch_directory()\r\n	{\r\n		return $this-&gt;directory;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 *  Set the controller overrides\r\n	 * 在index.php中配置了router的话，将覆写系统默认的路由\r\n	 * @access	public\r\n	 * @param	array\r\n	 * @return	null\r\n	 */\r\n	function _set_overrides($routing)\r\n	{\r\n		if ( ! is_array($routing))\r\n		{\r\n			return;\r\n		}\r\n\r\n		if (isset($routing[\'directory\']))\r\n		{\r\n			$this-&gt;set_directory($routing[\'directory\']);\r\n		}\r\n\r\n		if (isset($routing[\'controller\']) AND $routing[\'controller\'] != \'\')\r\n		{\r\n			$this-&gt;set_class($routing[\'controller\']);\r\n		}\r\n\r\n		if (isset($routing[\'function\']))\r\n		{\r\n			$routing[\'function\'] = ($routing[\'function\'] == \'\') ? \'index\' : $routing[\'function\'];\r\n			$this-&gt;set_method($routing[\'function\']);\r\n		}\r\n	}\r\n\r\n\r\n}</pre><br />','<pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * 路由类\r\n *\r\n * 解析 URIs 和 路由决策\r\n *\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @author		ExpressionEngine Dev Team\r\n * @category	Libraries\r\n * @link		http://codeigniter.com/user_guide/general/routing.html\r\n */\r\nclass CI_Router {\r\n\r\n	/**\r\n	 * 配置类\r\n	 *\r\n	 * @var object\r\n	 * @access public\r\n	 */\r\n	var $config;\r\n	/**\r\n	 * 路由列表\r\n	 *\r\n	 * @var array\r\n	 * @access public\r\n	 */\r\n	var $routes			= array();\r\n	/**\r\n	 * 错误路由列表\r\n	 *\r\n	 * @','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(162,'CodeIgniter框架 学习笔记 （5） CodeIgniter系统初始化文件','<p>CI的核心入口文件，该文件完成了整个请求过程的调用，具体代码解析如下：</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * System Initialization File 系统初始化文件\r\n *\r\n * Loads the base classes and executes the request. 载入基类和执行请求\r\n * \r\n * @package		CodeIgniter\r\n * @subpackage	codeigniter\r\n * @category	Front-controller\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/\r\n */\r\n\r\n/**\r\n * CodeIgniter Version 版本\r\n *\r\n * @var string\r\n *\r\n */\r\n	define(\'CI_VERSION\', \'2.1.3\');\r\n\r\n/**\r\n * CodeIgniter Branch (Core = TRUE, Reactor = FALSE)  分支\r\n *\r\n * @var boolean\r\n *\r\n */\r\n	define(\'CI_CORE\', FALSE);\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Load the global functions 载入全局函数\r\n * ------------------------------------------------------\r\n */\r\n	require(BASEPATH.\'core/Common.php\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Load the framework constants 载入框架常量\r\n *  主要是与文件操作有关的一些常量\r\n * ------------------------------------------------------\r\n */\r\n	if (defined(\'ENVIRONMENT\') AND file_exists(APPPATH.\'config/\'.ENVIRONMENT.\'/constants.php\'))\r\n	{\r\n		require(APPPATH.\'config/\'.ENVIRONMENT.\'/constants.php\');\r\n	}\r\n	else\r\n	{\r\n		require(APPPATH.\'config/constants.php\');\r\n	}\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Define a custom error handler so we can log PHP errors \r\n *  定义自定义的错误处理，从而可以通过日志记录PHP错误（_exception_handler函数见Common.php）\r\n * ------------------------------------------------------\r\n */\r\n	set_error_handler(\'_exception_handler\');\r\n\r\n	//如果当前PHP的版本低于5.3，执行set_magic_quotes_runtime， 关闭magic_quotes_runtime（对引号进行转义）\r\n	//在PHP5.3中已经废弃了此函数，因此不要使用了\r\n	if ( ! is_php(\'5.3\'))\r\n	{\r\n		@set_magic_quotes_runtime(0); // Kill magic quotes\r\n	}\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Set the subclass_prefix 设置subclass_prefix\r\n *  该段程序在当index.php中设置了$assign_to_config[\'subclass_prefix\']覆写配置时执行\r\n * ------------------------------------------------------\r\n *\r\n * Normally the \"subclass_prefix\" is set in the config file. 通常subclass_prefix在配置文件中设置\r\n * The subclass prefix allows CI to know if a core class is 子类前缀允许CI获知是否是一个核心类被位于\r\n * being extended via a library in the local application 应用的libraries目录下的类扩展了。\r\n * \"libraries\" folder. Since CI allows config items to be  因为CI允许在index.php文件中覆写配置项的值\r\n * overriden via data set in the main index. php file, \r\n * before proceeding we need to know if a subclass_prefix 在处理之前我们需要知道是否一个子类前缀的类已经存在了。\r\n * override exists.  If so, we will set this value now, 如果存在了，我们将会在这里， 在任何类被载入之前设置这个值\r\n * before any classes are loaded\r\n * Note: Since the config file data is cached it doesn\'t \r\n * hurt to load it here.\r\n */\r\n	if (isset($assign_to_config[\'subclass_prefix\']) AND $assign_to_config[\'subclass_prefix\'] != \'\')\r\n	{\r\n		get_config(array(\'subclass_prefix\' =&gt; $assign_to_config[\'subclass_prefix\']));//如果该段得以执行，则缓存覆写后的配置项，一旦配置项被加载了，以后就不能再更改了\r\n	}\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Set a liberal script execution time limit 设置脚本执行时间限制\r\n *  \r\n *  set_time_limit(sec)设置脚本最大执行时间，默认是30s，如果设置为0，则没有时间限制\r\n *  当在安全模式下运行时，该功能无效，除了关闭安全模式或者改变php.ini的时间限制，没有别的办法\r\n * ------------------------------------------------------\r\n */\r\n	if (function_exists(\"set_time_limit\") == TRUE AND @ini_get(\"safe_mode\") == 0)\r\n	{\r\n		@set_time_limit(300);//这里设置脚本能够执行300s\r\n	}\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Start the timer... tick tock tick tock... 开始计时器（基准测试）\r\n * ------------------------------------------------------\r\n */\r\n	$BM =&amp; load_class(\'Benchmark\', \'core\');\r\n	$BM-&gt;mark(\'total_execution_time_start\');\r\n	$BM-&gt;mark(\'loading_time:_base_classes_start\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Instantiate the hooks class 实例化钩子\r\n * ------------------------------------------------------\r\n */\r\n	$EXT =&amp; load_class(\'Hooks\', \'core\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Is there a \"pre_system\" hook? 调用系统运行前的钩子\r\n * ------------------------------------------------------\r\n */\r\n	$EXT-&gt;_call_hook(\'pre_system\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Instantiate the config class 实例化配置类\r\n * ------------------------------------------------------\r\n */\r\n	$CFG =&amp; load_class(\'Config\', \'core\');\r\n\r\n	// Do we have any manually set config items in the index.php file? 是否在index.php中手动设置了配置项\r\n	if (isset($assign_to_config))\r\n	{\r\n		$CFG-&gt;_assign_to_config($assign_to_config);\r\n	}\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Instantiate the UTF-8 class 实例化UTF-8类\r\n * ------------------------------------------------------\r\n *\r\n * Note: Order here is rather important as the UTF-8\r\n * class needs to be used very early on, but it cannot\r\n * properly determine if UTf-8 can be supported until\r\n * after the Config class is instantiated.\r\n *\r\n */\r\n\r\n	$UNI =&amp; load_class(\'Utf8\', \'core\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Instantiate the URI class 实例化URI类\r\n * ------------------------------------------------------\r\n */\r\n	$URI =&amp; load_class(\'URI\', \'core\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Instantiate the routing class and set the routing 实例化路由类和设置路由\r\n * ------------------------------------------------------\r\n */\r\n	$RTR =&amp; load_class(\'Router\', \'core\');\r\n	$RTR-&gt;_set_routing();//设置路由映射\r\n\r\n	// Set any routing overrides that may exist in the main index file 设置路由重写（当在index文件中存在的话）\r\n	if (isset($routing))\r\n	{\r\n		$RTR-&gt;_set_overrides($routing);\r\n	}\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Instantiate the output class 实例化输出类\r\n * ------------------------------------------------------\r\n */\r\n	$OUT =&amp; load_class(\'Output\', \'core\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *	Is there a valid cache file?  If so, we\'re done... 是否有一个可用的缓存文件\r\n *	首先判断并调用通过钩子实现的缓存方法，如果没有的话，使用缓存输出\r\n * ------------------------------------------------------\r\n */\r\n	if ($EXT-&gt;_call_hook(\'cache_override\') === FALSE)\r\n	{\r\n		if ($OUT-&gt;_display_cache($CFG, $URI) == TRUE)\r\n		{\r\n			exit;\r\n		}\r\n	}\r\n\r\n/*\r\n * -----------------------------------------------------\r\n * Load the security class for xss and csrf support\r\n *  载入安全类（防止跨站请求攻击和跨站请求伪造的支持）\r\n * -----------------------------------------------------\r\n */\r\n	$SEC =&amp; load_class(\'Security\', \'core\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Load the Input class and sanitize globals 载入输入处理类，全局有害信息清理\r\n * ------------------------------------------------------\r\n */\r\n	$IN	=&amp; load_class(\'Input\', \'core\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Load the Language class 载入语言类\r\n * ------------------------------------------------------\r\n */\r\n	$LANG =&amp; load_class(\'Lang\', \'core\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Load the app controller and local controller\r\n *  载入应用控制器和本地控制器\r\n * ------------------------------------------------------\r\n *\r\n */\r\n	// Load the base controller class 载入基础控制器\r\n	require BASEPATH.\'core/Controller.php\';\r\n\r\n	/**\r\n	 * 该函数用于获取CI控制器的实例\r\n	 * @return CI_Controller\r\n	 */\r\n	function &amp;get_instance()\r\n	{\r\n		return CI_Controller::get_instance();\r\n	}\r\n\r\n	//如果存在扩展的核心控制器的话，在页面中引入\r\n	if (file_exists(APPPATH.\'core/\'.$CFG-&gt;config[\'subclass_prefix\'].\'Controller.php\'))\r\n	{\r\n		require APPPATH.\'core/\'.$CFG-&gt;config[\'subclass_prefix\'].\'Controller.php\';\r\n	}\r\n\r\n	// Load the local application controller 载入本地应用控制器\r\n	// Note: The Router class automatically validates the controller path using the router-&gt;_validate_request().\r\n	// 注意： 路由类自动的通过router-&gt;_validate_request()方法验证控制器路径\r\n	// If this include fails it means that the default controller in the Routes.php file is not resolving to something valid.\r\n	// 如果包含失败的话就意味着在Routes.php文件中解析的默认控制器是不可用的。\r\n	if ( ! file_exists(APPPATH.\'controllers/\'.$RTR-&gt;fetch_directory().$RTR-&gt;fetch_class().\'.php\'))\r\n	{\r\n		show_error(\'不能载入默认控制器. 请确定在Router.php中指定的默认控制器可用.\');\r\n	}\r\n\r\n	include(APPPATH.\'controllers/\'.$RTR-&gt;fetch_directory().$RTR-&gt;fetch_class().\'.php\');\r\n\r\n	// Set a mark point for benchmarking 用于记录操作执行时间\r\n	$BM-&gt;mark(\'loading_time:_base_classes_end\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Security check 安全检查\r\n * ------------------------------------------------------\r\n *\r\n *  None of the functions in the app controller or the\r\n *  loader class can be called via the URI, nor can\r\n *  controller functions that begin with an underscore\r\n *  \r\n *  对请求的限制：\r\n *  	1. 控制器类必须存在\r\n *  	2. 请求的方法不允许以_开头（_开头的作为私有方法）\r\n *  	3. 请求的方法不能再核心控制器中\r\n *  \r\n */\r\n	$class  = $RTR-&gt;fetch_class();//请求的控制器名\r\n	$method = $RTR-&gt;fetch_method();//请求的方法名\r\n\r\n	if ( ! class_exists($class)//判断控制器类是否存在\r\n		OR strncmp($method, \'_\', 1) == 0//判断请求方法是否是以_开头\r\n		OR in_array(strtolower($method), array_map(\'strtolower\', get_class_methods(\'CI_Controller\')))//判断请求的方法是否在CI_Controller核心控制器中\r\n		)\r\n	{\r\n		if ( ! empty($RTR-&gt;routes[\'404_override\']))//用户在routs.php配置文件中设置的404页面\r\n		{\r\n			$x = explode(\'/\', $RTR-&gt;routes[\'404_override\']);\r\n			$class = $x[0];\r\n			$method = (isset($x[1]) ? $x[1] : \'index\');\r\n			if ( ! class_exists($class))\r\n			{\r\n				if ( ! file_exists(APPPATH.\'controllers/\'.$class.\'.php\'))\r\n				{\r\n					show_404(\"{$class}/{$method}\");\r\n				}\r\n\r\n				include_once(APPPATH.\'controllers/\'.$class.\'.php\');\r\n			}\r\n		}\r\n		else\r\n		{\r\n			show_404(\"{$class}/{$method}\");\r\n		}\r\n	}\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Is there a \"pre_controller\" hook? 执行控制器前置钩子\r\n * ------------------------------------------------------\r\n */\r\n	$EXT-&gt;_call_hook(\'pre_controller\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Instantiate the requested controller 实例化请求的控制器\r\n * ------------------------------------------------------\r\n */\r\n	// Mark a start point so we can benchmark the controller\r\n	$BM-&gt;mark(\'controller_execution_time_( \'.$class.\' / \'.$method.\' )_start\');\r\n\r\n	$CI = new $class();//在此实例化\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Is there a \"post_controller_constructor\" hook? 在控制器构造方法执行之后调用的函数\r\n * ------------------------------------------------------\r\n */\r\n	$EXT-&gt;_call_hook(\'post_controller_constructor\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Call the requested method 调用请求的方法\r\n * ------------------------------------------------------\r\n */\r\n	// Is there a \"remap\" function? If so, we call it instead 是否在控制器中有一个remap函数，如果有的话，调用它\r\n	//这里实现了CI的重定义方法调用规则\r\n	if (method_exists($CI, \'_remap\'))\r\n	{\r\n		$CI-&gt;_remap($method, array_slice($URI-&gt;rsegments, 2));\r\n	}\r\n	else\r\n	{\r\n		// is_callable() returns TRUE on some versions of PHP 5 for private and protected\r\n		// is_callable()函数在一些PHP5的版本中对于private和protected方法返回True，所以在这里使他表现始终如一\r\n		// methods, so we\'ll use this workaround for consistent behavior\r\n		if ( ! in_array(strtolower($method), array_map(\'strtolower\', get_class_methods($CI))))\r\n		{//如果调用的方法不存在（public方法）\r\n			// Check and see if we are using a 404 override and use it. \r\n			if ( ! empty($RTR-&gt;routes[\'404_override\']))\r\n			{\r\n				$x = explode(\'/\', $RTR-&gt;routes[\'404_override\']);\r\n				$class = $x[0];\r\n				$method = (isset($x[1]) ? $x[1] : \'index\');\r\n				if ( ! class_exists($class))\r\n				{\r\n					if ( ! file_exists(APPPATH.\'controllers/\'.$class.\'.php\'))\r\n					{\r\n						show_404(\"{$class}/{$method}\");\r\n					}\r\n\r\n					include_once(APPPATH.\'controllers/\'.$class.\'.php\');\r\n					unset($CI);\r\n					$CI = new $class();\r\n				}\r\n			}\r\n			else\r\n			{\r\n				show_404(\"{$class}/{$method}\");\r\n			}\r\n		}\r\n\r\n		// Call the requested method. 调用请求的方法\r\n		// Any URI segments present (besides the class/function) will be passed to the method for convenience\r\n		// array_slice($array , $offset) 从$array中返回从$offset开始的某一段\r\n		call_user_func_array(array(&amp;$CI, $method), array_slice($URI-&gt;rsegments, 2));\r\n	}\r\n\r\n\r\n	// Mark a benchmark end point\r\n	$BM-&gt;mark(\'controller_execution_time_( \'.$class.\' / \'.$method.\' )_end\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Is there a \"post_controller\" hook?  调用方法执行完成后的钩子\r\n * ------------------------------------------------------\r\n */\r\n	$EXT-&gt;_call_hook(\'post_controller\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Send the final rendered output to the browser 发送最终数据到用户浏览器\r\n *  \r\n *  如果存在display_override钩子的话，调用钩子函数输出，否则调用Output类的_display()方法输出\r\n * ------------------------------------------------------\r\n */\r\n	if ($EXT-&gt;_call_hook(\'display_override\') === FALSE)\r\n	{\r\n		//如果控制器中存在_output方法的话，将会调用控制器的_output($ouput)方法渲染输出\r\n		$OUT-&gt;_display();\r\n	}\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Is there a \"post_system\" hook? 执行系统执行完成后的钩子\r\n * ------------------------------------------------------\r\n */\r\n	$EXT-&gt;_call_hook(\'post_system\');\r\n\r\n/*\r\n * ------------------------------------------------------\r\n *  Close the DB connection if one exists 如果使用了数据库的话，关闭数据库连接\r\n * ------------------------------------------------------\r\n */\r\n	if (class_exists(\'CI_DB\') AND isset($CI-&gt;db))\r\n	{\r\n		$CI-&gt;db-&gt;close();\r\n	}</pre></p>\r\n<p>从文件中可以看到，CI在处理一次请求的过程中程序的执行流程：</p>\r\n<p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/51481d83355f9efad5af74d304004c7320121122104350.jpg\" id=\"ematt:11\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/51481d83355f9efad5af74d304004c7320121122104350.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p>','<pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * 系统初始化文件\r\n *\r\n * 载入基础类库和执行请求\r\n *\r\n * @package		CodeIgniter\r\n * @subpackage	codeigniter\r\n * @category	Front-controller\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/\r\n */\r\n\r\n/**\r\n * CodeIgniter 版本\r\n *\r\n * @var string\r\n *\r\n */\r\n	define(\'CI_VERSION\', \'2.1.3\');\r\n\r\n/**\r\n * CodeIgniter 分支 (Core = TRUE, Reactor = FALSE)\r\n *\r\n * @var boolean\r\n *\r\n */\r\n	define(\'CI_CORE\', FALSE);\r\n\r\n/*\r\n * ---------------','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(163,'$_SERVER 服务器和执行环境信息','<p><span style=\"font-size:18px;\">请求地址为:</span><span style=\"color:#e53333;font-size:18px;\">http://localhost/test/test.php?a=43</span></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">    [HTTP_HOST] =&gt; localhost\r\n    [HTTP_CONNECTION] =&gt; keep-alive\r\n    [HTTP_USER_AGENT] =&gt; Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.0 Safari/537.1\r\n    [HTTP_ACCEPT] =&gt; text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n    [HTTP_ACCEPT_ENCODING] =&gt; gzip,deflate,sdch\r\n    [HTTP_ACCEPT_LANGUAGE] =&gt; zh-CN,zh;q=0.8\r\n    [HTTP_ACCEPT_CHARSET] =&gt; GBK,utf-8;q=0.7,*;q=0.3\r\n    [HTTP_COOKIE] =&gt; AJSTAT_ok_times=2; save_name=false\r\n    [PATH] =&gt; C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows7Master;C:\\Program Files\\Java\\jdk1.7.0\\bin;D:\\Go\\bin;D:\\vim;C:\\Program Files (x86)\\Git\\bin;D:\\wamp\\bin\\php\\php5.3.13;\r\n    [SystemRoot] =&gt; C:\\Windows\r\n    [COMSPEC] =&gt; C:\\Windows\\system32\\cmd.exe\r\n    [PATHEXT] =&gt; .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\r\n    [WINDIR] =&gt; C:\\Windows\r\n    [SERVER_SIGNATURE] =&gt; \r\n    [SERVER_SOFTWARE] =&gt; Apache/2.2.22 (Win64) PHP/5.3.13\r\n    [SERVER_NAME] =&gt; localhost\r\n    [SERVER_ADDR] =&gt; 127.0.0.1\r\n    [SERVER_PORT] =&gt; 80\r\n    [REMOTE_ADDR] =&gt; 127.0.0.1\r\n    [DOCUMENT_ROOT] =&gt; D:/wamp/www/\r\n    [SERVER_ADMIN] =&gt; admin@localhost\r\n    [SCRIPT_FILENAME] =&gt; D:/wamp/www/test/test.php\r\n    [REMOTE_PORT] =&gt; 12641\r\n    [GATEWAY_INTERFACE] =&gt; CGI/1.1\r\n    [SERVER_PROTOCOL] =&gt; HTTP/1.1\r\n    [REQUEST_METHOD] =&gt; GET\r\n    [QUERY_STRING] =&gt; a=43\r\n    [REQUEST_URI] =&gt; /test/test.php?a=43\r\n    [SCRIPT_NAME] =&gt; /test/test.php\r\n    [PHP_SELF] =&gt; /test/test.php\r\n    [REQUEST_TIME] =&gt; 1351263648</pre><br />','<p><span style=\"font-size:18px;\">请求地址为:</span><span style=\"color:#e53333;font-size:18px;\">http://localhost/test/test.php</span></p>\r\n<pre style=\"line-height:normal;\">&nbsp;&nbsp;&nbsp;&nbsp;[HTTP_HOST] =&gt; localhost\r\n    [HTTP_CONNECTION] =&gt; keep-alive\r\n    [HTTP_CACHE_CONTROL] =&gt; max-age=0\r\n    [HTTP_USER_AGENT] =&gt; Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.0 Safari/537.1\r\n    [HTTP_ACCEPT] =&gt; text/html,application/xhtml+xml,applicat','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(164,'CodeIgniter框架 学习笔记 （6） 钩子Hook','<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">启用钩子</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">钩子功能可以在全局范围内打开或关闭，您可以在&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">application/config/config.php</kbd>&nbsp;文件中设定:</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;\">$config[\'enable_hooks\'] = TRUE;</code></p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">定义钩子</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">钩子是在&nbsp;<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">application/config/hooks.php</dfn>&nbsp;文件中定义的。 每个钩子可以用以下格式的数组来定义:</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;\">$hook[\'pre_controller\'] = array(<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'class\'&nbsp;&nbsp;&nbsp;&nbsp;=&gt; \'MyClass\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'function\' =&gt; \'Myfunction\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'filename\' =&gt; \'Myclass.php\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'filepath\' =&gt; \'hooks\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'params\'&nbsp;&nbsp;&nbsp;=&gt; array(\'beer\', \'wine\', \'snacks\')<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</code></p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><strong>说明：</strong><br />\r\n数组的索引与你使用的指定挂钩点名字相关.上面的例子中挂钩点是<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">pre_controller</kbd>. 挂钩点参数列表如下所示. 以下各项将定义在你的相关钩子数组里：</p>\r\n<ul style=\"list-style-image:url(http://codeigniter.org.cn/images/user_guide/arrow.gif);margin:10px 0px 12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><li style=\"margin-bottom:9px;\"><strong>class</strong>&nbsp; 你希望调用的类名.如果你更喜欢使用过程函数代替类的话,此项保留为空.</li>\r\n<li style=\"margin-bottom:9px;\"><strong>function</strong>&nbsp; 你希望调用的函数名.</li>\r\n<li style=\"margin-bottom:9px;\"><strong>filename</strong>&nbsp; 包含有你的类/函数的文件名.</li>\r\n<li style=\"margin-bottom:9px;\"><strong>filepath</strong>&nbsp; 包含你的脚本的目录名. 注意: 你的脚本放在&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">application</kbd>&nbsp;文件夹下的目录里, 这样 filepath就以那个文件夹(application)为基准. 例如, 如果你的脚本放在<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">application/hooks</dfn>下, 你可以把<samp style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#480091;font-weight:bold;\">hooks</samp>&nbsp;作为你的filepath. 如果你的脚本放在<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">application/hooks/utilities</dfn>下你可以把&nbsp;<samp style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#480091;font-weight:bold;\">hooks/utilities</samp>作为filepath. 注意后面没有\"/\".如果不放在根目录下可以根据相对路径的配置，来完成调用。这样就可以完成，多个应用共享一个钩子。</li>\r\n<li style=\"margin-bottom:9px;\"><strong>params</strong>&nbsp; 你希望传递给脚本的任何参数. 此项是可选的.</li>\r\n</ul>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">同一挂钩点的多次引用</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">如果你想在同一个挂钩点引用多个脚本,最简单的方式就是把你的数组定义成二维的,像这样:</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;\">$hook[\'pre_controller\']<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">[]</kbd>&nbsp;= array(<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'class\'&nbsp;&nbsp;&nbsp;&nbsp;=&gt; \'MyClass\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'function\' =&gt; \'Myfunction\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'filename\' =&gt; \'Myclass.php\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'filepath\' =&gt; \'hooks\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'params\'&nbsp;&nbsp;&nbsp;=&gt; array(\'beer\', \'wine\', \'snacks\')<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br />\r\n<br />\r\n$hook[\'pre_controller\']<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">[]</kbd>&nbsp;= array(<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'class\'&nbsp;&nbsp;&nbsp;&nbsp;=&gt; \'MyOtherClass\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'function\' =&gt; \'MyOtherfunction\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'filename\' =&gt; \'Myotherclass.php\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'filepath\' =&gt; \'hooks\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'params\'&nbsp;&nbsp;&nbsp;=&gt; array(\'red\', \'yellow\', \'blue\')<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</code></p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">注意在每个数组索引后面的中括号:</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;\">$hook[\'pre_controller\']<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">[]</kbd></code></p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">这允许你的多个脚本拥有相同的挂钩点。你定义数组的顺序将是程序执行的顺序.</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">挂勾点</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">以下是一组可用的挂钩点.</p>\r\n<ul style=\"list-style-image:url(http://codeigniter.org.cn/images/user_guide/arrow.gif);margin:10px 0px 12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><li style=\"margin-bottom:9px;\"><strong>pre_system</strong><br />\r\n系统执行的早期调用.仅仅在benchmark 和 hooks&nbsp;类&nbsp;加载完毕的时候. 没有执行路由或者其它的过程.</li>\r\n<li style=\"margin-bottom:9px;\"><strong>pre_controller</strong><br />\r\n在调用你的任何控制器之前调用.此时所用的基础类,路由选择和安全性检查都已完成.</li>\r\n<li style=\"margin-bottom:9px;\"><strong>post_controller_constructor</strong><br />\r\n在你的控制器实例化之后,任何方法调用之前调用.</li>\r\n<li style=\"margin-bottom:9px;\"><strong>post_controller</strong><br />\r\n在你的控制器完全运行之后调用.</li>\r\n<li style=\"margin-bottom:9px;\"><strong>display_override</strong><br />\r\n覆盖<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">_display()</dfn>函数, 用来在系统执行末尾向web浏览器发送最终页面.这允许你用自己的方法来显示.注意，你需要通过&nbsp;<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">$this-&gt;CI =&amp; get_instance()</dfn>&nbsp;引用 CI 超级对象，然后这样的最终数据可以通过调用&nbsp;<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">$this-&gt;CI-&gt;output-&gt;get_output()</dfn>&nbsp;来获得。</li>\r\n<li style=\"margin-bottom:9px;\"><strong>cache_override</strong><br />\r\n可以让你调用自己的函数来取代output类中的<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">_display_cache()</dfn>&nbsp;函数.这可以让你使用自己的缓存显示方法</li>\r\n<li style=\"margin-bottom:9px;\"><strong>post_system</strong><br />\r\n在最终着色页面发送到浏览器之后,浏览器接收完最终数据的系统执行末尾调用</li>\r\n</ul>\r\n<div><span style=\"color:#333333;font-family:\'Lucida Grande, Verdana, Geneva, sans-serif, 宋体\';\"><span style=\"font-size:14px;line-height:normal;\"><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * CodeIgniter Hooks Class  钩子类\r\n *\r\n * Provides a mechanism to extend the base system without hacking.\r\n * 提供一个扩展基本系统的机制\r\n * \r\n * 首先从配置文件中读取配置的钩子列表，然后在系统中需要运行钩子函数的额地方调用_call_hook(whick)\r\n * \r\n * \r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Libraries\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/encryption.html\r\n */\r\nclass CI_Hooks {\r\n\r\n	/**\r\n	 * Determines wether hooks are enabled\r\n	 * 是否启用钩子\r\n	 * @var bool\r\n	 */\r\n	var $enabled		= FALSE;\r\n	/**\r\n	 * List of all hooks set in config/hooks.php\r\n	 * 列出在config/hooks.php中所有的钩子\r\n	 * @var array\r\n	 */\r\n	var $hooks			= array();\r\n	/**\r\n	 * Determines wether hook is in progress, used to prevent infinte loops\r\n	 *  标识一个钩子函数在运行中，类似于锁机制，如果有一个钩子正在运行中则是在运行in_progress为true，运行完设置为false（类似于锁定/解锁）\r\n	 * @var bool\r\n	 */\r\n	var $in_progress	= FALSE;\r\n\r\n	/**\r\n	 * Constructor\r\n	 *\r\n	 */\r\n	function __construct()\r\n	{\r\n		$this-&gt;_initialize();\r\n		log_message(\'debug\', \"Hooks Class Initialized\");\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Initialize the Hooks Preferences\r\n	 * 初始化钩子属性\r\n	 * @access	private\r\n	 * @return	void\r\n	 */\r\n	function _initialize()\r\n	{\r\n		$CFG =&amp; load_class(\'Config\', \'core\');\r\n\r\n		// If hooks are not enabled in the config file 如果在配置文件中不允许使用钩子\r\n		// there is nothing else to do 直接返回（没有能做的事了）\r\n\r\n		if ($CFG-&gt;item(\'enable_hooks\') == FALSE)\r\n		{\r\n			return;\r\n		}\r\n\r\n		// Grab the \"hooks\" definition file. 获取hooks定义文件（读取hooks.php配置文件）\r\n		// If there are no hooks, we\'re done. 如果没有钩子，完成\r\n\r\n		if (defined(\'ENVIRONMENT\') AND is_file(APPPATH.\'config/\'.ENVIRONMENT.\'/hooks.php\'))\r\n		{\r\n		    include(APPPATH.\'config/\'.ENVIRONMENT.\'/hooks.php\');\r\n		}\r\n		elseif (is_file(APPPATH.\'config/hooks.php\'))\r\n		{\r\n			include(APPPATH.\'config/hooks.php\');\r\n		}\r\n\r\n\r\n		if ( ! isset($hook) OR ! is_array($hook))//如果在配置中没有定义hook，返回\r\n		{\r\n			return;\r\n		}\r\n\r\n		$this-&gt;hooks =&amp; $hook;//获取配置中的钩子\r\n		$this-&gt;enabled = TRUE;//设置允许使用钩子\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Call Hook\r\n	 *\r\n	 * Calls a particular hook 调用一个指定的钩子\r\n	 *\r\n	 * @access	private\r\n	 * @param	string	the hook name\r\n	 * @return	mixed\r\n	 */\r\n	function _call_hook($which = \'\')\r\n	{\r\n		if ( ! $this-&gt;enabled OR ! isset($this-&gt;hooks[$which]))//如果禁用钩子，或者是钩子没有定义返回false\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		if (isset($this-&gt;hooks[$which][0]) AND is_array($this-&gt;hooks[$which][0]))//判断调用的钩子是否是个钩子数组\r\n		{\r\n			foreach ($this-&gt;hooks[$which] as $val)//调用的是个钩子列表，遍历，依次调用\r\n			{\r\n				$this-&gt;_run_hook($val);\r\n			}\r\n		}\r\n		else//调用的是单个钩子\r\n		{\r\n			$this-&gt;_run_hook($this-&gt;hooks[$which]);\r\n		}\r\n\r\n		return TRUE;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Run Hook 运行钩子\r\n	 *\r\n	 * Runs a particular hook 运行指定的钩子\r\n	 *\r\n	 * @access	private\r\n	 * @param	array	the hook details\r\n	 * @return	bool\r\n	 */\r\n	function _run_hook($data)\r\n	{\r\n		\r\n		/*\r\n		 * 每个钩子函数的数组应该是这样的：\r\n		 * \'class\'    =&gt; \'MyClass\',你希望调用的类名.如果你更喜欢使用过程函数代替类的话,此项保留为空.\r\n           \'function\' =&gt; \'Myfunction\',你希望调用的函数名.\r\n           \'filename\' =&gt; \'Myclass.php\', 包含有你的类/函数的文件名.\r\n           \'filepath\' =&gt; \'hooks\',包含你的脚本的目录名. 注意: 你的脚本放在 application 文件夹下的目录里, 这样 filepath就以那个文件夹(application)为基准. 例如, 如果你的脚本放在application/hooks下, 你可以把hooks 作为你的filepath. 如果你的脚本放在application/hooks/utilities下你可以把 hooks/utilities作为filepath. 注意后面没有\"/\".如果不放在根目录下可以根据相对路径的配置，来完成调用。这样就可以完成，多个应用共享一个钩子。\r\n           \'params\'   =&gt; array(\'beer\', \'wine\', \'snacks\')你希望传递给脚本的任何参数. 此项是可选的.\r\n		 */\r\n		if ( ! is_array($data))//钩子数据不正确\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		// -----------------------------------\r\n		// Safety - Prevents run-away loops 安全-防止产生调用循环\r\n		// -----------------------------------\r\n\r\n		// If the script being called happens to have the same 如果被调用的脚本调用了同一个钩子，可能产生一个循环\r\n		// hook call within it a loop can happen\r\n\r\n		if ($this-&gt;in_progress == TRUE)//如果已经在运行了，返回， 没有运行，继续\r\n		{\r\n			return;\r\n		}\r\n\r\n		// -----------------------------------\r\n		// Set file path 设置文件路径\r\n		// -----------------------------------\r\n\r\n		if ( ! isset($data[\'filepath\']) OR ! isset($data[\'filename\']))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		$filepath = APPPATH.$data[\'filepath\'].\'/\'.$data[\'filename\'];\r\n\r\n		if ( ! file_exists($filepath))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		// -----------------------------------\r\n		// Set class/function name 设置类/函数名\r\n		// -----------------------------------\r\n\r\n		$class		= FALSE;\r\n		$function	= FALSE;\r\n		$params		= \'\';\r\n\r\n		if (isset($data[\'class\']) AND $data[\'class\'] != \'\')\r\n		{\r\n			$class = $data[\'class\'];\r\n		}\r\n\r\n		if (isset($data[\'function\']))\r\n		{\r\n			$function = $data[\'function\'];\r\n		}\r\n\r\n		if (isset($data[\'params\']))\r\n		{\r\n			$params = $data[\'params\'];\r\n		}\r\n\r\n		if ($class === FALSE AND $function === FALSE)\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		// -----------------------------------\r\n		// Set the in_progress flag 设置运行中标识为true，标识了钩子已经运行中，不能再运行其他钩子函数了\r\n		// -----------------------------------\r\n\r\n		$this-&gt;in_progress = TRUE;\r\n\r\n		// -----------------------------------\r\n		// Call the requested class and/or function 调用请求的类或者是方法，函数\r\n		// -----------------------------------\r\n\r\n		if ($class !== FALSE)\r\n		{\r\n			if ( ! class_exists($class))//不存在的情况下才导入文件\r\n			{\r\n				require($filepath);\r\n			}\r\n\r\n			$HOOK = new $class;//实例化\r\n			$HOOK-&gt;$function($params);//运行指定函数\r\n		}\r\n		else\r\n		{\r\n			if ( ! function_exists($function))//判断函数是否存在，不存在则引入文件\r\n			{\r\n				require($filepath);\r\n			}\r\n\r\n			$function($params);//调用函数\r\n		}\r\n\r\n		$this-&gt;in_progress = FALSE;//已经运行完钩子\r\n		return TRUE;\r\n	}\r\n\r\n}</pre><br />\r\n</span></span></div>','<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">启用钩子</h2><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">钩子功能可以在全局范围内打开或关闭，您可以在&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(165,'CodeIgniter框架 学习笔记 （7） 基准测试BenchMark','<pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * CodeIgniter Benchmark Class 基准测试类\r\n *\r\n * This class enables you to mark points and calculate the time difference 这个类允许你标记点和计算它们之间的不同时间\r\n * between them.  Memory consumption can also be displayed.内存消耗也可以被现实\r\n * 标记点\r\n * $this-&gt;benchmark-&gt;mark(\"mark_start\");\r\n *        ...程序代码...\r\n * $this-&gt;benchmark-&gt;mark(\"mark_end\");\r\n * echo $this-&gt;benchmark-&gt;elapsed_time(\"mark_start\",\"mark_end\");//显示两个标记点之间的耗时\r\n * \r\n * echo $this-&gt;benchmark-&gt;elapsed_time();显示整个系统运行的耗时(同{elapsed_time})\r\n * echo $this-&gt;benchmark-&gt;elapsed_time(\"mark_start\");显示标记点到当前时间的耗时\r\n * echo $this-&gt;benchmark-&gt;memory_usage();显示内存占用(同{memory_usage})\r\n * \r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Libraries\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/benchmark.html\r\n */\r\nclass CI_Benchmark {\r\n\r\n	/**\r\n	 * List of all benchmark markers and when they were added\r\n	 * 所有基准标记和他们什么时候被添加的列表\r\n	 * @var array\r\n	 */\r\n	var $marker = array();\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set a benchmark marker\r\n	 * 设置一个基准测试标记\r\n	 * Multiple calls to this function can be made so that several 多次调用这个函数可以使多个执行点被计时\r\n	 * execution points can be timed\r\n	 *\r\n	 * @access	public\r\n	 * @param	string	$name	name of the marker\r\n	 * @return	void\r\n	 */\r\n	function mark($name)\r\n	{\r\n		$this-&gt;marker[$name] = microtime();\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Calculates the time difference between two marked points. 计算出两个标记点之间的时间差\r\n	 * \r\n	 * If the first parameter is empty this function instead returns the 如果第一个参数是空的，返回{elapsed_time}\r\n	 * {elapsed_time} pseudo-variable. This permits the full system 这使得完整的系统执行时间在模板中显示，输出类将会替换这个变量的真实值\r\n	 * execution time to be shown in a template. The output class will\r\n	 * swap the real value for this variable.\r\n	 *\r\n	 * @access	public\r\n	 * @param	string	a particular marked point\r\n	 * @param	string	a particular marked point\r\n	 * @param	integer	the number of decimal places\r\n	 * @return	mixed\r\n	 */\r\n	function elapsed_time($point1 = \'\', $point2 = \'\', $decimals = 4)\r\n	{\r\n		if ($point1 == \'\')\r\n		{\r\n			return \'{elapsed_time}\';\r\n		}\r\n\r\n		if ( ! isset($this-&gt;marker[$point1]))//如果第一个标记点不存在，返回空字符\r\n		{\r\n			return \'\';\r\n		}\r\n\r\n		if ( ! isset($this-&gt;marker[$point2]))//第二个标记点不存在则以当前时间设置第二个标记点\r\n		{\r\n			$this-&gt;marker[$point2] = microtime();\r\n		}\r\n\r\n		list($sm, $ss) = explode(\' \', $this-&gt;marker[$point1]);//microtime()返回的是：“微秒 秒”\r\n		list($em, $es) = explode(\' \', $this-&gt;marker[$point2]);\r\n\r\n		return number_format(($em + $es) - ($sm + $ss), $decimals);//格式化时间返回\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Memory Usage 内存使用\r\n	 *\r\n	 * This function returns the {memory_usage} pseudo-variable.这个函数返回{memory_usage}字符串\r\n	 * This permits it to be put it anywhere in a template 在模板中最后会替换成系统执行完成的内存占用\r\n	 * without the memory being calculated until the end.\r\n	 * The output class will swap the real value for this variable. 输出类将会替换它\r\n	 *\r\n	 * @access	public\r\n	 * @return	string\r\n	 */\r\n	function memory_usage()\r\n	{\r\n		return \'{memory_usage}\';\r\n	}\r\n\r\n}</pre><br />','<pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * CodeIgniter Benchmark Class 基准测试类\r\n *\r\n * This class enables you to mark points and calculate the time difference 这个类允许你标记点和计算它们之间的不同时间\r\n * between them.  Memory consumption can also be displayed.内存消耗也可以被现实\r\n * 标记点\r\n * $this-&gt;benchmark-&gt;mark(\"mark_start\");\r\n *        ...程序代码...\r\n * $this-&gt;benchmark-&gt;mark(\"mark_end\");\r\n * echo $this-&gt;benchmark-&gt;elapsed_time(\"mark_start\",\"mark_end\");//显示两个标记点之间的耗时\r\n * \r\n * echo $thi','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(166,'Red Hat Linux 6 配置Cent OS yum源','<p><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><b><span style=\"color:#e53333;\"><br />\r\n</span></b></span></p>\r\n<p><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><b><span style=\"color:#e53333;\">经测试，只需要采用4,5两步即可（添加新的源，更新）。</span></b></span></p>\r\n<p><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><b><span style=\"color:#e53333;\"><br />\r\n</span></b></span></p>\r\n<p><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><b><img src=\"/saeadmin/editor/plugins/emoticons/0.gif\" border=\"0\" alt=\"\" /><br />\r\n</b></span></p>\r\n<p><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><b><br />\r\n</b></span></p>\r\n<p><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><b>1. 首先下载以下软件包</b></span></p>\r\n<div>[root@localhost httpd-2.4.3]# <span style=\"color:#e53333;\">wget http://mirror.centos.org/centos/6.3/os/i386/Packages/python-iniparse-0.3.1-2.1.el6.noarch.rpm</span></div>\r\n<div>--2012-10-31 12:29:13-- &nbsp;http://mirror.centos.org/centos/6.3/os/i386/Packages/python-iniparse-0.3.1-2.1.el6.noarch.rpm</div>\r\n<div>Connecting to 202.194.64.200:8000... connected.</div>\r\n<div>Proxy request sent, awaiting response... 200 OK</div>\r\n<div>Length: 37052 (36K) [application/x-rpm]</div>\r\n<div>Saving to: “python-iniparse-0.3.1-2.1.el6.noarch.rpm”</div>\r\n<div><br />\r\n</div>\r\n<div>100%[======================================&gt;] 37,052 &nbsp; &nbsp; &nbsp;80.6K/s &nbsp; in 0.4s &nbsp; &nbsp;</div>\r\n<div><br />\r\n</div>\r\n<div>2012-10-31 12:29:14 (80.6 KB/s) - “python-iniparse-0.3.1-2.1.el6.noarch.rpm” saved [37052/37052]</div>\r\n<div><br />\r\n</div>\r\n<div>[root@localhost httpd-2.4.3]# <span style=\"color:#e53333;\">wget http://mirror.centos.org/centos/6.3/os/i386/Packages/yum-metadata-parser-1.1.2-16.el6.i686.rpm</span></div>\r\n<div>--2012-10-31 12:30:33-- &nbsp;http://mirror.centos.org/centos/6.3/os/i386/Packages/yum-metadata-parser-1.1.2-16.el6.i686.rpm</div>\r\n<div>Connecting to 202.194.64.200:8000... connected.</div>\r\n<div>Proxy request sent, awaiting response... 200 OK</div>\r\n<div>Length: 27140 (27K) [application/x-rpm]</div>\r\n<div>Saving to: “yum-metadata-parser-1.1.2-16.el6.i686.rpm”</div>\r\n<div><br />\r\n</div>\r\n<div>100%[======================================&gt;] 27,140 &nbsp; &nbsp; &nbsp;55.4K/s &nbsp; in 0.5s &nbsp; &nbsp;</div>\r\n<div><br />\r\n</div>\r\n<div>2012-10-31 12:30:34 (55.4 KB/s) - “yum-metadata-parser-1.1.2-16.el6.i686.rpm” saved [27140/27140]</div>\r\n<div><br />\r\n</div>\r\n<div>[root@localhost httpd-2.4.3]# &nbsp;<span style=\"color:#e53333;\">wget http://mirror.centos.org/centos/6.3/os/i386/Packages/yum-3.2.29-30.el6.centos.noarch.rpm</span></div>\r\n<div>--2012-10-31 12:31:24-- &nbsp;http://mirror.centos.org/centos/6.3/os/i386/Packages/yum-3.2.29-30.el6.centos.noarch.rpm</div>\r\n<div>Connecting to 202.194.64.200:8000... connected.</div>\r\n<div>Proxy request sent, awaiting response... 200 OK</div>\r\n<div>Length: 1013804 (990K) [application/x-rpm]</div>\r\n<div>Saving to: “yum-3.2.29-30.el6.centos.noarch.rpm”</div>\r\n<div><br />\r\n</div>\r\n<div>100%[======================================&gt;] 1,013,804 &nbsp; &nbsp;211K/s &nbsp; in 4.9s &nbsp; &nbsp;</div>\r\n<div><br />\r\n</div>\r\n<div>2012-10-31 12:31:30 (202 KB/s) - “yum-3.2.29-30.el6.centos.noarch.rpm” saved [1013804/1013804]</div>\r\n<div><br />\r\n</div>\r\n<div>[root@localhost httpd-2.4.3]# <span style=\"color:#e53333;\">wget http://mirror.centos.org/centos/6.3/os/i386/Packages/yum-plugin-fastestmirror-1.1.30-14.el6.noarch.rpm</span></div>\r\n<div>--2012-10-31 12:32:05-- &nbsp;http://mirror.centos.org/centos/6.3/os/i386/Packages/yum-plugin-fastestmirror-1.1.30-14.el6.noarch.rpm</div>\r\n<div>Connecting to 202.194.64.200:8000... connected.</div>\r\n<div>Proxy request sent, awaiting response... 200 OK</div>\r\n<div>Length: 28220 (28K) [application/x-rpm]</div>\r\n<div>Saving to: “yum-plugin-fastestmirror-1.1.30-14.el6.noarch.rpm”</div>\r\n<div><br />\r\n</div>\r\n<div>100%[======================================&gt;] 28,220 &nbsp; &nbsp; &nbsp;59.3K/s &nbsp; in 0.5s &nbsp; &nbsp;</div>\r\n<div><br />\r\n</div>\r\n<div>2012-10-31 12:32:06 (59.3 KB/s) - “yum-plugin-fastestmirror-1.1.30-14.el6.noarch.rpm” saved [28220/28220]</div>\r\n<div><br />\r\n</div>\r\n<p><span style=\"font-size:18px;font-family:\'Microsoft YaHei\';\">&nbsp;<b>2. 删除Redhat原来的yum源&nbsp;</b></span></p>\r\n<p><span style=\"font-size:18px;font-family:\'Microsoft YaHei\';\"><b><br />\r\n</b></span></p>\r\n<p>&nbsp;[root@localhost httpd-2.4.3]# rpm -qa |grep yum |xargs rpm -e --nodeps</p>\r\n<p><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><br />\r\n</span></p>\r\n<p><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><b>3.安装下载的软件包</b></span></p>\r\n<div><div>[root@localhost httpd-2.4.3]# <span style=\"color:#e53333;\">rpm -ivh python-iniparse-0.3.1-2.1.el6.noarch.rpm&nbsp;</span></div>\r\n<div>warning: python-iniparse-0.3.1-2.1.el6.noarch.rpm: Header V3 RSA/SHA256 Signature, key ID c105b9de: NOKEY</div>\r\n<div>Preparing... &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;########################################### [100%]</div>\r\n<div><span class=\"Apple-tab-span\" style=\"white-space:pre;\">	</span>package python-iniparse-0.3.1-2.1.el6.noarch is already installed</div>\r\n<div>[root@localhost httpd-2.4.3]# <span style=\"color:#e53333;\">rpm -ivh yum-metadata-parser-1.1.2-16.el6.i686.rpm&nbsp;</span></div>\r\n<div>warning: yum-metadata-parser-1.1.2-16.el6.i686.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY</div>\r\n<div>Preparing... &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;########################################### [100%]</div>\r\n<div>&nbsp; &nbsp;1:yum-metadata-parser &nbsp; &nbsp;########################################### [100%]</div>\r\n<div>[root@localhost httpd-2.4.3]# <span style=\"color:#e53333;\">rpm -ivh yum-3.2.29-30.el6.centos.noarch.rpm yum-plugin-fastestmirror-1.1.30-14.el6.noarch.rpm&nbsp;</span></div>\r\n<div>warning: yum-3.2.29-30.el6.centos.noarch.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY</div>\r\n<div>Preparing... &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;########################################### [100%]</div>\r\n<div>&nbsp; &nbsp;1:yum-plugin-fastestmirro########################################### [ 50%]</div>\r\n<div>&nbsp; &nbsp;2:yum &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;########################################### [100%]</div>\r\n</div>\r\n<div><br />\r\n</div>\r\n<div><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><b>4.添加yum源</b></span> </div>\r\n<div><div>[root@localhost httpd-2.4.3]# <span style=\"color:#e53333;\">cd /etc/yum.repos.d/</span></div>\r\n<div>[root@localhost yum.repos.d]# ls</div>\r\n<div>[root@localhost yum.repos.d]# <span style=\"color:#e53333;\">wget &nbsp;http://mirrors.163.com/.help/CentOS6-Base-163.repo</span></div>\r\n<div>--2012-10-31 12:51:54-- &nbsp;http://mirrors.163.com/.help/CentOS6-Base-163.repo</div>\r\n<div>Connecting to 202.194.64.200:8000... connected.</div>\r\n<div>Proxy request sent, awaiting response... 200 OK</div>\r\n<div>Length: 2006 (2.0K) [application/octet-stream]</div>\r\n<div>Saving to: “CentOS6-Base-163.repo”</div>\r\n<div><br />\r\n</div>\r\n<div>100%[======================================&gt;] 2,006 &nbsp; &nbsp; &nbsp; --.-K/s &nbsp; in 0.03s &nbsp;&nbsp;</div>\r\n<div><br />\r\n</div>\r\n<div>2012-10-31 12:51:54 (58.1 KB/s) - “CentOS6-Base-163.repo” saved [2006/2006]</div>\r\n</div>\r\n<p><span style=\"font-size:10pt;line-height:1.5;\"><br />\r\n</span></p>\r\n<p><span style=\"font-size:10pt;line-height:1.5;\">编辑CentOS6-Base-163.repo,替换</span><span style=\"background-color:#f5faff;font-family:arial, sans-serif;font-size:14px;line-height:25px;text-indent:28px;\">$releasever为版本号6</span></p>\r\n<div><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\"><b>5. 清理yum缓存</b></span> </div>\r\n<div><div>[root@localhost yum.repos.d]# <span style=\"color:#e53333;\">yum clean all</span></div>\r\n<div>Loaded plugins: fastestmirror</div>\r\n<div>Cleaning repos: base extras updates</div>\r\n<div>Cleaning up Everything</div>\r\n<div>[root@localhost yum.repos.d]# <span style=\"color:#e53333;\">yum makecache</span></div>\r\n</div>\r\n<div><br />\r\n</div>\r\n<div>至此，已经可以使用cent os的yum源安装软件了。</div>\r\n<div><br />\r\n</div>\r\n<div><br />\r\n</div>\r\n<div>[原文参考：http://www.linuxde.net/2011/10/1578.htmlmyl]</div>\r\n<div><br />\r\n</div>\r\n<div><br />\r\n</div>\r\n<div><br />\r\n</div>\r\n<div><br />\r\n</div>','<div><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\">1. 首先下载以下软件包</span></div>\r\n<div>[root@localhost httpd-2.4.3]# <span style=\"color:#e53333;\">wget http://mirror.centos.org/centos/6.3/os/i386/Packages/python-iniparse-0.3.1-2.1.el6.noarch.rpm</span></div>\r\n<div>--2012-10-31 12:29:13-- &nbsp;http://mirror.centos.org/centos/6.3/os/i386/Packages/python-iniparse-0.3.1-2.1.el6.noarch.rpm</div>\r\n<div>Connecting to 202.194.64.200:8000... connected.</div>\r\n<div>Proxy request sent, awaiting r','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(167,'iptables学习笔记','<p>一、概念</p>\r\n<p>1.表：</p>\r\n<p>表是iptables的构建块，描述了其功能大类，iptables共有四个表：filter ， nat ， mangle ， raw</p>\r\n<p>filter：过滤规则表</p>\r\n<p>nat：NAT规则</p>\r\n<p>mangle：修改分组数据的规则</p>\r\n<p>raw：独立于Netfilter连接跟踪子系统起作用的规则</p>\r\n<p>2. 链</p>\r\n<p>每个表都有自己的一组内置链，用户也可以对链进行自定义，这样用户可以建立一组规则。</p>\r\n<p>内置链filter表的有INPUT , OUTPUT , FORWARD链。</p>\r\n<p>INPUT:当一个数据包经过内核的路由计算确定为指向本地Linux系统（即该数据包指向一个本地套接字），他将经过INPUT链的检查。</p>\r\n<p>OUTPUT:Linux系统自身生成的数据包。</p>\r\n<p>FORWARD:管理经过Linux系统路由的数据包（当iptables防火墙用于连接两个网络， 并且两个网络之间的数据包必须经过该防火墙）。</p>\r\n<p>内置链nat表的PREROUTING和POSTROUTING链，他们分别用于在内核进行IP路由计算之前和之后修改数据包的头部。</p>\r\n<p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/2ace7e0ddc324f941d9408346ec0013220121031140603.jpg\" id=\"ematt:5\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201210/2ace7e0ddc324f941d9408346ec0013220121031140603.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p>\r\n<p>3. 匹配</p>\r\n<p>--source(-s) 匹配源地址</p>\r\n<p>--destination(-d)匹配目的地址</p>\r\n<p>--protocol(-p)匹配协议</p>\r\n<p>--in-interface (-i) 流入接口</p>\r\n<p>--out-interface(-o)流出接口</p>\r\n<p>--state 匹配一组连接状态</p>\r\n<p>--string 匹配应用层数据字节序列</p>\r\n<p>--commnet 在内核内存中为一个规则关联多大256个字节的注释数据</p>\r\n<p>4. 目标</p>\r\n<p>用户在数据包匹配一条规则是触发一个动作。</p>\r\n<p>ACCEPT &nbsp;允许数据包通过</p>\r\n<p>DROP &nbsp;丢弃数据包，不对数据包进行进一步的处理，对于接收栈而言，就像数据包从来没有被接受过。</p>\r\n<p>LOG &nbsp;将数据包信息记录到syslog</p>\r\n<p>REJECT &nbsp;丢弃数据包，同时发送响应报文（告诉发送方拒绝了）</p>\r\n<p>RETURN &nbsp;在调用链中继续处理数据包。</p>\r\n<p>二、操作</p>\r\n<p>1. 基本命令：</p>\r\n<p>iptables -V 查看iptables的版本</p>\r\n<p>iptables -nL列出当前的INPUT , OUTPUT , FORWARD链中的规则集</p>\r\n<p></p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">[root@localhost ~]# iptables -nL\r\nChain INPUT (policy ACCEPT)\r\ntarget     prot opt source               destination\r\nACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED\r\nACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0\r\nACCEPT     all  --  0.0.0.0/0            0.0.0.0/0\r\nACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:22\r\nREJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited\r\nACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpt:80\r\n\r\nChain FORWARD (policy ACCEPT)\r\ntarget     prot opt source               destination\r\nREJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited\r\n\r\nChain OUTPUT (policy ACCEPT)\r\ntarget     prot opt source               destination</pre><pre class=\"brush:shell; toolbar: true; auto-links: true;\">[root@localhost ~]# iptables -L\r\nChain INPUT (policy ACCEPT)\r\ntarget     prot opt source               destination\r\nACCEPT     all  --  anywhere             anywhere            state RELATED,ESTABLISHED\r\nACCEPT     icmp --  anywhere             anywhere\r\nACCEPT     all  --  anywhere             anywhere\r\nACCEPT     tcp  --  anywhere             anywhere            state NEW tcp dpt:ssh\r\nREJECT     all  --  anywhere             anywhere            reject-with icmp-host-prohibited\r\nACCEPT     tcp  --  anywhere             anywhere            tcp dpt:http\r\n\r\nChain FORWARD (policy ACCEPT)\r\ntarget     prot opt source               destination\r\nREJECT     all  --  anywhere             anywhere            reject-with icmp-host-prohibited\r\n\r\nChain OUTPUT (policy ACCEPT)\r\ntarget     prot opt source               destination</pre><p>2.常用参数(参考自：<a href=\"http://blog.csdn.net/wenbingcai/article/details/4059685\">http://blog.csdn.net/wenbingcai/article/details/4059685)</a></p>\r\n<p><pre class=\"brush:sql; toolbar: true; auto-links: true;\">-A : append 追加一条规则.放到规则表的最后.\r\n	 如;iptablse -t filter -A INPUT -j DROP  # -j意为匹配后的动作 原意为jump, DROP 即丢弃\r\n	 意为:在filter表里的input链里追加一条规则,(作为本表本链的最后规则)\r\n		  匹配所有进入本机的数据包,匹配到的数据包都丢弃.\r\n\r\n-I : insert 插入一条规则\r\n	 如: iptables -I INPUT -j DROP   （注意:使用SSH连接到Linux操作的，结果执行后就断网。。。需要删除该记录后方可继续）\r\n	意为: 在filter表里的input链中插入一条规则,插入成第一条\r\n	  \r\n		 iptables -I INPUT 3 -j DROP\r\n	 意为: 在filter表里的input链里插入一条规则,插入成第三条\r\n\r\n	## -t filter 不写则自动默认成filter表\r\n	   -I INPUT 3 如果不写号码,则自动插入成第一条\r\n	   确保插入的号码数 &lt;= 已经存在的规则数,否则报错\r\n\r\n-D : delete 删除一条规则\r\n	  安装规则号码删除:\r\n	如: iptables -D INPUT 2 #删除input链里的第2条规则\r\n	  安装规则内容删除:\r\n		iptables -D INPUT -s 192.168.1.2 -j DROP\r\n			删除input链里的 -s 192.168.1.2 -j DROP的规则\r\n\r\n-R : replace 替换一条规则\r\n		iptables -R INPUT 3 -j ACCEPT   #替换input链里的3号规则为accept\r\n\r\n-P : policy  设置某个链的默认规则\r\n		iptables -P INPUT DROP # 设置filter表的INPUT链默认规则是drop\r\n		   # 这个命令  不加 -j   也是唯一不加-j的情况\r\n\r\n-F : flush   清空规则表\r\n		iptables -F INPUT #清空input链的规则\r\n		iptables -t nat -F PREROUTING #清空net表的prerouting链规则\r\n	# 如果不写链名,则为全部表.\r\n	  只是清空规则表.重启后已经保存的规则还在\r\n\r\n-L : list   列出规则\r\n		iptables -nL # 列出规则 n表示ip地址和端口号</pre></p>\r\n<p></p>\r\n<p>3. 保存iptables策略到文件和从文件恢复</p>\r\n<p></p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">[root@localhost ~]# iptables-save &gt; iptables_bak.sav\r\n[root@localhost ~]# cat iptables_bak.sav |iptables-restore</pre>4.保存配置，防止重启失效<p></p>\r\n<p>service iptables save</p>\r\n<p>&nbsp;</p>\r\n<p>注意：</p>\r\n<p>1. iptables只能用于过滤IP以及其以上的协议的数据包，不能过滤ARP协议报文（工作在数据链路层，使用arptables过滤）。</p>','<p>一、概念</p><p>1.表：</p><p>表是iptables的构建块，描述了其功能大类，iptables共有四个表：filter ， nat ， mangle ， raw</p><p>filter：过滤规则表</p><p>nat：NAT规则</p><p>mangle：修改分组数据的规则</p><p>raw：独立于Netfilter连接跟踪子系统起作用的规则</p><p>2. 链</p><p>每个表都有自己的一组内置链，用户也可以对链进行自定义，这样用户可以建立一组规则。</p><p>内置链filter表的有INPUT , OUTPUT , FORWARD链。</p><p>INPUT:当一个数据包经过内核的路由计算确定为指向本地Linux系统（即该数据包指向一个本地套接字），他将经过INPUT链的检查。</p><p>OUTPUT:Linux系统自身生成的数据包。</p><p>FORWARD:管理经过Linux系统路由的数据包（当iptables防火墙用于连接两个网络， 并且两个网络之间的数据包必须经过该防火墙）。</p><p>内置链nat表的PREROUTING和POSTROU','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(168,'Redhat Linux 6 源码编译安装mysql5.5.28','<p>1. 首先，到mysql官网（dev.mysql.com）下载mysql5.5.28.tar.gz源码包</p>\r\n<p>2. 解压出来</p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">tar -zxvf mysql-5.5.28.tar.gz</pre><p></p>\r\n<p>3.mysql5.5需要使用cmake构建，因此，需要先安装cmake</p>\r\n<p></p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">#yum install cmake</pre><p></p>\r\n<p>4.添加mysql用户和组</p>\r\n<p></p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">#groupadd mysql\r\n#useradd -r -g mysql mysql</pre>5.编译，安装mysql<p></p>\r\n<p></p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">#cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql/\r\n#make\r\n#make install</pre>6. 修改权限，创建数据库<p></p>\r\n<p></p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">#cd /usr/local/mysql\r\n#chown -R mysql .\r\n#chgrp -R mysql .\r\n#scripts/mysql_install_db --user=mysql\r\n#chown -R root .\r\n#chown -R mysql data\r\n\r\n#cp support-files/my-medium.cnf /etc/my.cnf\r\n#bin/mysqld_safe --user=mysql &amp;\r\n\r\n#cp support-files/mysql.server /etc/init.d/mysql.server</pre>7. 启动mysql数据库<p></p>\r\n<p></p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">#/etc/init.d/mysql.server start</pre>注意：<p></p>\r\n<p>&nbsp; &nbsp; 1. 如果启动失败，首先查看一下是否存在权限问题</p>\r\n<p>&nbsp; &nbsp; 2. 确定一下是否已经存在了mysqld的僵尸进程(ps -aux | grep mysqld , kill -9 进程id)</p>\r\n<p>&nbsp; &nbsp; 3. 我碰到的错误是：</p>\r\n<p>&nbsp; &nbsp;&nbsp;<span style=\"font-size:10pt;line-height:1.5;\">ERROR 2002 (HY000): Can\'t connect to local MySQL server through socket \'/tmp/mysql.sock\' (2)</span></p>\r\n<p><span style=\"font-size:10pt;line-height:1.5;\">&nbsp; &nbsp; 解决方法：（参考自：</span>http://bbs.51cto.com/thread-542980-1.html<span style=\"font-size:10pt;line-height:1.5;\">）</span></p>\r\n<p><span style=\"font-size:10pt;line-height:1.5;\"><pre class=\"brush:shell; toolbar: true; auto-links: true;\">[root@localhost bin]# ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock</pre></span></p>\r\n<br />','<p>1. 首先，到mysql官网（dev.mysql.com）下载mysql5.5.28.tar.gz源码包</p><p>2. 解压出来</p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">tar -zxvf mysql-5.5.28.tar.gz</pre><p>3.mysql5.5需要使用cmake构建，因此，需要先安装cmake</p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">#yum install cmake</pre><p>4.添加mysql用户和组</p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">#groupadd mysql\r\n#useradd -r -g mysql mysql</pre>5.编译，安装mysql<pre class=\"brush:shell; toolbar: true; auto-links: true;\">#cmake -D','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(169,'Redhat Linux 6 源码编译安装apache2.4.3','<p>1. 到apache官网下载最新的apache（httpd-2.4.3.tar.gz）</p>\r\n<p>2. 安装apache之前，需要安装以下软件包</p>\r\n<p>apr , apr-util , pcre( apr-1.4.6.tar.gz , apr-util-1.4.1.tar.gz , pcre-8.30.tar.gz)</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">#tar -zxvf apr-1.4.6.tar.gz\r\n#cd apr-1.4.6.tar.gz\r\n#./configure --prefix=/usr/local/apr\r\n#make &amp;&amp; make install\r\n\r\n\r\n#tar -zxvf apr-util-1.4.1.tar.gz\r\n#cd apr-util-1.4.1\r\n#./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr\r\n#make &amp;&amp; make install\r\n\r\n\r\n#tar -zxvf pcre-8.30.tar.gz\r\n#cd pcre-8.30\r\n#./configure --prefix=/usr/local/pcre\r\n#make &amp;&amp; make install</pre>3. 安装apache2&nbsp;</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">#tar -zxvf httpd-2.4.3.tar.gz \r\n#cd httpd-2.4.3\r\n#./configure --prefix=/usr/local/apache2 --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --with-pcre=/usr/local/pcre\r\n#make &amp;&amp; make install</pre>4. 不出意外的话，安装完成了，开启看看能不能访问</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">#cd /usr/local/apache2/bin\r\n#./apachectl start\r\n\r\n#netstat -an |grep 80</pre></p>\r\n<p>&nbsp;</p>','<p>1. 到apache官网下载最新的apache（httpd-2.4.3.tar.gz）</p><p>2. 安装apache之前，需要安装以下软件包</p><p>apr , apr-util , pcre( apr-1.4.6.tar.gz , apr-util-1.4.1.tar.gz , pcre-8.30.tar.gz)</p><p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">#tar -zxvf apr-1.4.6.tar.gz\r\n#cd apr-1.4.6.tar.gz\r\n#./configure --prefix=/usr/local/apr\r\n#make &amp;&amp; make install\r\n\r\n\r\n#tar -zxvf apr-util-1.4.1.tar.gz\r\n#cd apr-util-1.4.1\r\n#./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr\r\n#make &amp;&amp; make','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(170,'MySQL学习笔记（1）','<p>1. 常用命令</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">use 数据库名; #选择数据库\n\nshow tables ; #显示数据库中有哪些数据表\n\nshow columns from 表名; #列出表中哪些字段（desc 表名）是其快捷操作方式\n\nshow status; # 显示广泛的服务器状态信息\n\nshow create database/table 数据库/表名 ; #显示创建数据库/数据表的语句\n\nshow grants; #显示授予用户的安全权限\n\nshow errors /warnings; #显示服务器的错误和警告消息</pre><p><pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; select database();          #查询当前正在使用的数据库，如果没有选定，返回NULL\n+------------+\n| database() |\n+------------+\n| NULL       |\n+------------+\n1 row in set (0.00 sec)\n\n\n\nmysql&gt; SELECT USER();             #查询的当前的用户\n+----------------+\n| USER()         |\n+----------------+\n| root@localhost |\n+----------------+\n1 row in set (0.00 sec)</pre></p>\n<p>2. 查看所有的show命令，可以使用help show;</p>\n<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; help show;\nName: \'SHOW\'\nDescription:描述\nSHOW has many forms that provide information about databases, tables,\ncolumns, or status information about the server. This section describes\nthose following:\n\nSHOW AUTHORS\nSHOW {BINARY | MASTER} LOGS\nSHOW BINLOG EVENTS [IN \'log_name\'] [FROM pos] [LIMIT [offset,] row_count]\nSHOW CHARACTER SET [like_or_where]\nSHOW COLLATION [like_or_where]\nSHOW [FULL] COLUMNS FROM tbl_name [FROM db_name] [like_or_where]\nSHOW CONTRIBUTORS\nSHOW CREATE DATABASE db_name\nSHOW CREATE EVENT event_name\nSHOW CREATE FUNCTION func_name\nSHOW CREATE PROCEDURE proc_name\nSHOW CREATE TABLE tbl_name\nSHOW CREATE TRIGGER trigger_name\nSHOW CREATE VIEW view_name\nSHOW DATABASES [like_or_where]\nSHOW ENGINE engine_name {STATUS | MUTEX}\nSHOW [STORAGE] ENGINES\nSHOW ERRORS [LIMIT [offset,] row_count]\nSHOW EVENTS\nSHOW FUNCTION CODE func_name\nSHOW FUNCTION STATUS [like_or_where]\nSHOW GRANTS FOR user\nSHOW INDEX FROM tbl_name [FROM db_name]\nSHOW MASTER STATUS\nSHOW OPEN TABLES [FROM db_name] [like_or_where]\nSHOW PLUGINS\nSHOW PROCEDURE CODE proc_name\nSHOW PROCEDURE STATUS [like_or_where]\nSHOW PRIVILEGES\nSHOW [FULL] PROCESSLIST\nSHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n]\nSHOW PROFILES\nSHOW SLAVE HOSTS\nSHOW SLAVE STATUS\nSHOW [GLOBAL | SESSION] STATUS [like_or_where]\nSHOW TABLE STATUS [FROM db_name] [like_or_where]\nSHOW [FULL] TABLES [FROM db_name] [like_or_where]\nSHOW TRIGGERS [FROM db_name] [like_or_where]\nSHOW [GLOBAL | SESSION] VARIABLES [like_or_where]\nSHOW WARNINGS [LIMIT [offset,] row_count]\n\nlike_or_where:\n    LIKE \'pattern\'\n  | WHERE expr\n\nIf the syntax for a given SHOW statement includes a LIKE \'pattern\'\npart, \'pattern\' is a string that can contain the SQL \"%\" and \"_\"\nwildcard characters. The pattern is useful for restricting statement\noutput to matching values.\n\nSeveral SHOW statements also accept a WHERE clause that provides more\nflexibility in specifying which rows to display. See\nhttp://dev.mysql.com/doc/refman/5.5/en/extended-show.html.\n\nURL: http://dev.mysql.com/doc/refman/5.5/en/show.html</pre><p></p>\n<p>3. 两个字段的连接使用Concat()实现，多数的DBMS使用+或者-实现拼接， MySQL则使用Concat（）函数实现，当把SQL语句转换为MySQL语句时一定要这个区别铭记在心。</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">SELECT Concat(vend_name , \'(\' , vend_country, \')\')\nFROM vendors \nORDER BY vend_name;</pre>4. 如果数据检索是最重要的，则你可以通过在INSERT 和 INTO 之间添加关键字LOW_PRIORITY , 指示MySQL降低INSERT 语句的优先级（对UPDATE 和DELETE同样） 。<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; insert low_priority into productnotes (prod_id , note_date , note_text) values(44, \'2012-12-12 12:12:12\', \'what your name ? tom? jack?\');\nQuery OK, 1 row affected (0.01 sec)</pre>5. 删除一个表中所有的数据使用TRUNCATE而不是使用DELETE ， 因为TRUNCATE是删除整个表然后重建，因此完成相同的工作，速度比DELETE更快。<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; TRUNCATE productnotes;\nQuery OK, 0 rows affected (0.00 sec)</pre>6. 获取最后一个insert插入自增字段的值（auto_increment） &nbsp;<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; select last_insert_id();\n+------------------+\n| last_insert_id() |\n+------------------+\n|                2 |\n+------------------+\n1 row in set (0.01 sec)</pre>7. 更新表<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">ALTER TABLE venders ADD vend_phone CHAR(20);\n\nALTER TABLE vender DROP vend_phone;\n\nALTER TABLE orderitems \nADD CONSTRAINT fk_orderitem_orders \nFOREIGN KEY (order_num) REFERENCES orders(order_num);</pre>8.重命名表<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">RENAME TABLE customer2 TO customer;</pre>9.修改SQL语句的分隔符<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">DELIMITER 新的分隔符（除了\\之外，所有的字符都可以）</pre>10. 存储过程<p></p>\n<p>创建存储过程</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; DELIMITER //\nmysql&gt; CREATE PROCEDURE getOrders()\n    -&gt; BEGIN\n    -&gt; SELECT * FROM orders;\n    -&gt; END//\nQuery OK, 0 rows affected (0.03 sec)\n\nmysql&gt; DELIMITER ;</pre>执行存储过程<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; CALL getOrders();\n+-----------+------------+---------+------------+------------+\n| order_num | order_item | prod_id | item_price | vend_phone |\n+-----------+------------+---------+------------+------------+\n|         1 |          2 | 3       |       4.00 | 5          |\n|         3 |          1 | 5       |       2.00 | 7          |\n+-----------+------------+---------+------------+------------+\n2 rows in set (0.00 sec)</pre>删除存储过程<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; DROP PROCEDURE getOrders;\nQuery OK, 0 rows affected (0.01 sec)</pre>带参数的存储过程<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; DELIMITER //\nmysql&gt; CREATE PROCEDURE getOrders(\n    -&gt; OUT pl DECIMAL(8,2),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#IN传递给存储过程 ，\n    -&gt; OUT ph DECIMAL(8,2),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<span style=\"font-size:9pt;line-height:1.5;\">OUT 从存储过程传出，</span>     -&gt; OUT pa DECIMAL(8,2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #<span style=\"font-size:9pt;line-height:1.5;\"> INOUT 对存储过程传入传出</span>     -&gt; )\n    -&gt; BEGIN\n    -&gt; SELECT Min(item_price) INTO pl\n    -&gt; FROM orders;\n    -&gt; SELECT Max(item_price) INTO ph\n    -&gt; FROM orders;\n    -&gt; SELECT Avg(item_price) INTO pa\n    -&gt; FROM orders;\n    -&gt; END//\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; DELIMITER ;\nmysql&gt; CALL getOrders(@pricelow,\n    -&gt; @pricehigh,\n    -&gt; @priceaverage);\nQuery OK, 1 row affected (0.03 sec)\n\nmysql&gt; SELECT @pricelow;\n+-----------+\n| @pricelow |\n+-----------+\n|      2.00 |\n+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT @pricehigh;\n+------------+\n| @pricehigh |\n+------------+\n|       4.00 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT @priceaverage;\n+---------------+\n| @priceaverage |\n+---------------+\n|          3.00 |\n+---------------+\n1 row in set (0.00 sec)</pre>使用传入参数的存储过程<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; DELIMITER //\nmysql&gt; CREATE PROCEDURE ordertotal (\n    -&gt; IN onumber INT ,\n    -&gt; OUT ototal DECIMAL(8,2)\n    -&gt; )\n    -&gt; BEGIN\n    -&gt; SELECT SUM(item_price) FROM orders\n    -&gt; WHERE order_num = onumber\n    -&gt; INTO ototal;\n    -&gt; END//\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; DELIMITER ;\n\nmysql&gt; CALL ordertotal(3, @total);\nQuery OK, 1 row affected (0.00 sec)\n\nmysql&gt; SELECT @total;\n+--------+\n| @total |\n+--------+\n|   2.00 |\n+--------+\n1 row in set (0.00 sec)</pre><p></p>\n<p>&nbsp;查看有哪些存储过程</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; SHOW PROCEDURE STATUS;</pre>11. 游标<p></p>\n<p>MySQL不同于其它RDBMS ， 游标只能用于存储过程和函数。</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; CREATE PROCEDURE getCursorData(\n    -&gt; OUT o INT)\n    -&gt; BEGIN\n    -&gt; DECLARE ordernums CURSOR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#声明一个游标\n    -&gt; FOR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#注意，这地方有一个FOR\n    -&gt; SELECT order_num FROM orders;&nbsp;&nbsp;&nbsp;&nbsp;#查询条件\n    -&gt; OPEN ordernums;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#游标使用之前需要先打开，使用完后关闭\n    -&gt; FETCH ordernums INTO o;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#从游标中读取数据，存放变量o中\n    -&gt; CLOSE ordernums;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#关闭游标\n    -&gt; END //</pre>&nbsp;从游标循环取数据<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; CREATE PROCEDURE processorders2()\n    -&gt; BEGIN\n    -&gt; DECLARE done BOOLEAN DEFAULT 0;\n    -&gt; DECLARE o INT;\n    -&gt; DECLARE ordernumbers CURSOR\n    -&gt; FOR\n    -&gt; SELECT order_num FROM orders;\n    -&gt; DECLARE CONTINUE HANDLER FOR SQLSTATE \'02000\' SET done = 1;\n    -&gt;\n    -&gt; OPEN ordernumbers;\n    -&gt; REPEAT\n    -&gt; FETCH ordernumbers INTO o;\n    -&gt; UNTIL done END REPEAT;\n    -&gt; CLOSE ordernumbers;\n    -&gt; END //</pre>此处DECLARE CONTINUE HANDLER FOR SQLSTATE \'<span style=\"color:#e53333;\"><b>02000</b></span>\' SET done = 1;中的02000是MySQL错误代码：<p></p>\n<p><span style=\"color:#454545;font-family:tahoma, Helvetica, arial;font-size:14px;line-height:21px;\">错误：1329 SQLSTATE: 02000 (ER_SP_FETCH_NO_DATA)&nbsp;</span><br style=\"color:#454545;font-family:tahoma, Helvetica, arial;font-size:14px;line-height:21px;\" />\n<span style=\"color:#454545;font-family:tahoma, Helvetica, arial;font-size:14px;line-height:21px;\">消息：FETCH无数据。</span></p>\n<p>&nbsp;12. 触发器</p>\n<p>触发器支持的语句：DELETE , UPDAE , INSERT</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">创建触发器\n\nmysql&gt; CREATE TRIGGER newproduct \nAFTER INSERT ON productnotes \nFOR EACH ROW \nINSERT INTO orders (order_num ) \nSELECT last_insert_id();\n\n删除触发器\n\nmysql&gt; DROP TRIGGER newproduct;</pre>13. 事务处理<p></p>\n<p>事务处理用来管理INSERT , UPDATE , DELETE 语句，你不能回退SELECT 语句。你不能回退CREATE语句或者DROP操作。事务处理中，使用了这两个语句， 如果你执行了回退，它们不会被撤销。</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; SELECT * FROM orders;\n+-----------+------------+---------+------------+------------+\n| order_num | order_item | prod_id | item_price | vend_phone |\n+-----------+------------+---------+------------+------------+\n|         0 |          0 |         |       0.00 | NULL       |\n|         1 |          0 |         |       0.00 | NULL       |\n|         1 |          2 | 3       |       4.00 | 5          |\n|         2 |          0 |         |       0.00 | NULL       |\n|         3 |          0 |         |       0.00 | NULL       |\n|         3 |          1 | 5       |       2.00 | 7          |\n|         4 |          0 |         |       0.00 | NULL       |\n|         5 |          0 |         |       0.00 | NULL       |\n|         6 |          0 |         |       0.00 | NULL       |\n+-----------+------------+---------+------------+------------+\n9 rows in set (0.00 sec)\n\nmysql&gt; START TRANSACTION;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; DELETE FROM orders;\nQuery OK, 9 rows affected (0.00 sec)\n\nmysql&gt; SELECT * FROM orders;\nEmpty set (0.00 sec)\n\nmysql&gt; ROLLBACK;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; SELECT * FROM orders;\n+-----------+------------+---------+------------+------------+\n| order_num | order_item | prod_id | item_price | vend_phone |\n+-----------+------------+---------+------------+------------+\n|         0 |          0 |         |       0.00 | NULL       |\n|         1 |          0 |         |       0.00 | NULL       |\n|         1 |          2 | 3       |       4.00 | 5          |\n|         2 |          0 |         |       0.00 | NULL       |\n|         3 |          0 |         |       0.00 | NULL       |\n|         3 |          1 | 5       |       2.00 | 7          |\n|         4 |          0 |         |       0.00 | NULL       |\n|         5 |          0 |         |       0.00 | NULL       |\n|         6 |          0 |         |       0.00 | NULL       |\n+-----------+------------+---------+------------+------------+\n9 rows in set (0.00 sec)</pre><pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; START TRANSACTION ;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; DELETE FROM orders WHERE order_num = 3;\nQuery OK, 2 rows affected (0.00 sec)\n\nmysql&gt; SELECT * FROM orders;\n+-----------+------------+---------+------------+------------+\n| order_num | order_item | prod_id | item_price | vend_phone |\n+-----------+------------+---------+------------+------------+\n|         0 |          0 |         |       0.00 | NULL       |\n|         1 |          0 |         |       0.00 | NULL       |\n|         1 |          2 | 3       |       4.00 | 5          |\n|         2 |          0 |         |       0.00 | NULL       |\n|         4 |          0 |         |       0.00 | NULL       |\n|         5 |          0 |         |       0.00 | NULL       |\n|         6 |          0 |         |       0.00 | NULL       |\n+-----------+------------+---------+------------+------------+\n7 rows in set (0.00 sec)\n\nmysql&gt; COMMIT;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; SELECT * FROM orders;\n+-----------+------------+---------+------------+------------+\n| order_num | order_item | prod_id | item_price | vend_phone |\n+-----------+------------+---------+------------+------------+\n|         0 |          0 |         |       0.00 | NULL       |\n|         1 |          0 |         |       0.00 | NULL       |\n|         1 |          2 | 3       |       4.00 | 5          |\n|         2 |          0 |         |       0.00 | NULL       |\n|         4 |          0 |         |       0.00 | NULL       |\n|         5 |          0 |         |       0.00 | NULL       |\n|         6 |          0 |         |       0.00 | NULL       |\n+-----------+------------+---------+------------+------------+\n7 rows in set (0.00 sec)</pre>保留点：<pre class=\"brush:sql; toolbar: true; auto-links: true;\">SAVEPOINT delete1;\n\nROLLBACK TO delete1;</pre><p></p>\n<p>&nbsp;释放保留点：保留点在事务提交或者是回滚的时候会自动释放，也可以使用RELEASE SAVEPOINT明确的释放。</p>\n<p>更改默认提交行为：SET autocommit= 0;不自动提交。</p>\n<p>&nbsp;14. 字符集和校对顺序</p>\n<p><span style=\"color:#00d5ff;\">字符集： 字母和符号的集合</span></p>\n<p><span style=\"color:#00d5ff;\">编码： 某个字符集成员的内部表示</span></p>\n<p><span style=\"color:#00d5ff;\">校对： 规定字符如何比较的指令</span></p>\n<p>查看支持的字符集：</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; SHOW CHARACTER SET;\n+----------+-----------------------------+---------------------+--------+\n| Charset  | Description                 | Default collation   | Maxlen |\n+----------+-----------------------------+---------------------+--------+\n| big5     | Big5 Traditional Chinese    | big5_chinese_ci     |      2 |\n| dec8     | DEC West European           | dec8_swedish_ci     |      1 |\n| cp850    | DOS West European           | cp850_general_ci    |      1 |\n| hp8      | HP West European            | hp8_english_ci      |      1 |\n| koi8r    | KOI8-R Relcom Russian       | koi8r_general_ci    |      1 |\n| latin1   | cp1252 West European        | latin1_swedish_ci   |      1 |\n| latin2   | ISO 8859-2 Central European | latin2_general_ci   |      1 |\n| swe7     | 7bit Swedish                | swe7_swedish_ci     |      1 |\n| ascii    | US ASCII                    | ascii_general_ci    |      1 |\n| ujis     | EUC-JP Japanese             | ujis_japanese_ci    |      3 |\n| sjis     | Shift-JIS Japanese          | sjis_japanese_ci    |      2 |\n| hebrew   | ISO 8859-8 Hebrew           | hebrew_general_ci   |      1 |\n| tis620   | TIS620 Thai                 | tis620_thai_ci      |      1 |\n| euckr    | EUC-KR Korean               | euckr_korean_ci     |      2 |\n| koi8u    | KOI8-U Ukrainian            | koi8u_general_ci    |      1 |\n| gb2312   | GB2312 Simplified Chinese   | gb2312_chinese_ci   |      2 |\n| greek    | ISO 8859-7 Greek            | greek_general_ci    |      1 |\n| cp1250   | Windows Central European    | cp1250_general_ci   |      1 |\n| gbk      | GBK Simplified Chinese      | gbk_chinese_ci      |      2 |\n| latin5   | ISO 8859-9 Turkish          | latin5_turkish_ci   |      1 |\n| armscii8 | ARMSCII-8 Armenian          | armscii8_general_ci |      1 |\n| utf8     | UTF-8 Unicode               | utf8_general_ci     |      3 |\n| ucs2     | UCS-2 Unicode               | ucs2_general_ci     |      2 |\n| cp866    | DOS Russian                 | cp866_general_ci    |      1 |\n| keybcs2  | DOS Kamenicky Czech-Slovak  | keybcs2_general_ci  |      1 |\n| macce    | Mac Central European        | macce_general_ci    |      1 |\n| macroman | Mac West European           | macroman_general_ci |      1 |\n| cp852    | DOS Central European        | cp852_general_ci    |      1 |\n| latin7   | ISO 8859-13 Baltic          | latin7_general_ci   |      1 |\n| utf8mb4  | UTF-8 Unicode               | utf8mb4_general_ci  |      4 |\n| cp1251   | Windows Cyrillic            | cp1251_general_ci   |      1 |\n| utf16    | UTF-16 Unicode              | utf16_general_ci    |      4 |\n| cp1256   | Windows Arabic              | cp1256_general_ci   |      1 |\n| cp1257   | Windows Baltic              | cp1257_general_ci   |      1 |\n| utf32    | UTF-32 Unicode              | utf32_general_ci    |      4 |\n| binary   | Binary pseudo charset       | binary              |      1 |\n| geostd8  | GEOSTD8 Georgian            | geostd8_general_ci  |      1 |\n| cp932    | SJIS for Windows Japanese   | cp932_japanese_ci   |      2 |\n| eucjpms  | UJIS for Windows Japanese   | eucjpms_japanese_ci |      3 |\n+----------+-----------------------------+---------------------+--------+\n39 rows in set (0.00 sec)</pre>查看所有支持的校对完整列表：<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; SHOW COLLATION;\n+--------------------------+----------+-----+---------+----------+---------+\n| Collation                | Charset  | Id  | Default | Compiled | Sortlen |\n+--------------------------+----------+-----+---------+----------+---------+\n| big5_chinese_ci          | big5     |   1 | Yes     | Yes      |       1 |\n| big5_bin                 | big5     |  84 |         | Yes      |       1 |\n| dec8_swedish_ci          | dec8     |   3 | Yes     | Yes      |       1 |\n| dec8_bin                 | dec8     |  69 |         | Yes      |       1 |\n...此处省略一万字\n| cp932_japanese_ci        | cp932    |  95 | Yes     | Yes      |       1 |\n| cp932_bin                | cp932    |  96 |         | Yes      |       1 |\n| eucjpms_japanese_ci      | eucjpms  |  97 | Yes     | Yes      |       1 |\n| eucjpms_bin              | eucjpms  |  98 |         | Yes      |       1 |\n+--------------------------+----------+-----+---------+----------+---------+\n197 rows in set (0.01 sec)</pre>一般，_cs表示区分大小写 ， _ci表示不区分大小写。<p></p>\n<p>&nbsp;确定使用的字符集和校对：</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; SHOW VARIABLES LIKE \'character%\';\n+--------------------------+----------------------------------+\n| Variable_name            | Value                            |\n+--------------------------+----------------------------------+\n| character_set_client     | utf8                             |\n| character_set_connection | utf8                             |\n| character_set_database   | latin1                           |\n| character_set_filesystem | binary                           |\n| character_set_results    | utf8                             |\n| character_set_server     | latin1                           |\n| character_set_system     | utf8                             |\n| character_sets_dir       | /usr/local/mysql/share/charsets/ |\n+--------------------------+----------------------------------+\n8 rows in set (0.00 sec)\n\nmysql&gt; SHOW VARIABLES LIKE \'collation%\';\n+----------------------+-------------------+\n| Variable_name        | Value             |\n+----------------------+-------------------+\n| collation_connection | utf8_general_ci   |\n| collation_database   | latin1_swedish_ci |\n| collation_server     | latin1_swedish_ci |\n+----------------------+-------------------+\n3 rows in set (0.00 sec)</pre>创建表时指定字符集和校对：<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; CREATE TABLE mytable (\n    -&gt; colmn1 INT  AUTO_INCEMENT,\n    -&gt; colmn2 VARCHAR(19),\n    -&gt; PRIMARY KEY(colmn1)\n    -&gt; )DEFAULT CHARACTER SET hebrew \n    -&gt; COLLATE hebrew_general_ci;</pre>如果在查询时临时改变校对，可以这样：<p></p>\n<p>SELECT * FROM customers ORDER BY last_name , first_name COLLATE latin1_general_cs;#临时区分大小写</p>\n<p>&nbsp;15. 账号和权限控制</p>\n<p>创建一个新的用户</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; CREATE USER jack IDENTIFIED BY \'12345\';\nQuery OK, 0 rows affected (0.00 sec)</pre>删除用户<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; DROP USER jack;\nQuery OK, 0 rows affected (0.00 sec)</pre>修改用户名<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; RENAME USER ben TO tom;\nQuery OK, 0 rows affected (0.00 sec)</pre>查看赋予用户的权限<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; SHOW GRANTS FOR tom;\n+----------------------------------------------------------------------------------------------------+\n| Grants for tom@%                                                                                   |\n+----------------------------------------------------------------------------------------------------+\n| GRANT USAGE ON *.* TO \'tom\'@\'%\' IDENTIFIED BY PASSWORD \'*00A51F3F48415C7D4E8908980D443C29C69B60C9\' |\n+----------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)</pre>为用户赋予权限<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">#赋予权限\n\nmysql&gt; GRANT SELECT ON test_1.* TO tom;    #为用户tom赋予对test_1数据库的SELECT 权限\nQuery OK, 0 rows affected (0.01 sec)\n\n#回收权限\n\nmysql&gt; REVOKE SELECT ON test_1.* FROM tom;\nQuery OK, 0 rows affected (0.00 sec)</pre>为用户赋予所有的权限的话使用GRANT ALL， 回收所有权限REVOKE ALL。<p></p>\n<p>为用户修改密码：</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">#未指定用户修改口令，注意，口令必须使用Password进行加密。\n\nmysql&gt; SET PASSWORD FOR tom = Password(\'sorry\');\nQuery OK, 0 rows affected (0.00 sec)\n\n#修改自己的口令\n\nmysql&gt; SET PASSWORD = Password(\'root\');\nQuery OK, 0 rows affected (0.00 sec)</pre><p></p>\n<p>&nbsp;</p>','<p>1. 常用命令</p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">use 数据库名; #选择数据库\n\nshow tables ; #显示数据库中有哪些数据表\n\nshow columns from 表名; #列出表中哪些字段（desc 表名）是其快捷操作方式\n\nshow status; # 显示广泛的服务器状态信息\n\nshow create database/table 数据库/表名 ; #显示创建数据库/数据表的语句\n\nshow grants; #显示授予用户的安全权限\n\nshow errors /warnings; #显示服务器的错误和警告消息</pre>2. 查看所有的show命令，可以使用help show;<p></p>\n<p></p>\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; help show;\nName: \'SHOW\'\nDescription:描述\nSHOW has many forms ','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(171,'MySQL学习笔记 （2）','<p><span style=\"font-size:10pt;line-height:1.5;\">16. 数据库维护</span></p>\r\n<p>1. ANALYZE TABLE &nbsp;<span style=\"font-size:10pt;line-height:1.5;\">用来检查表键是否正确。</span></p>\r\n<p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; ANALYZE TABLE orders;\r\n+---------------+---------+----------+----------+\r\n| Table         | Op      | Msg_type | Msg_text |\r\n+---------------+---------+----------+----------+\r\n| test_1.orders | analyze | status   | OK       |\r\n+---------------+---------+----------+----------+\r\n1 row in set (0.02 sec)</pre>2. CHECK TABLE 针对许多问题对表进行检查。在MyISAM表中还对索引进行检查。<p></p>\r\n<p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; CHECK TABLE orders;\r\n+---------------+-------+----------+----------+\r\n| Table         | Op    | Msg_type | Msg_text |\r\n+---------------+-------+----------+----------+\r\n| test_1.orders | check | status   | OK       |\r\n+---------------+-------+----------+----------+\r\n1 row in set (0.00 sec)</pre>3. 对MyISAM表访问产生不一致的或者是不正确的结果，可以用REPAIR TABLE 修复表。这条语句不应该经常使用，如果需要经常使用，可能会有更大的问题要解决。（不支持InnoDB）<p></p>\r\n<p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; REPAIR TABLE orders;\r\n+---------------+--------+----------+---------------------------------------------------------+\r\n| Table         | Op     | Msg_type | Msg_text                                                |\r\n+---------------+--------+----------+---------------------------------------------------------+\r\n| test_1.orders | repair | note     | The storage engine for the table doesn\'t support repair |\r\n+---------------+--------+----------+---------------------------------------------------------+\r\n1 row in set (0.00 sec)\r\n\r\nmysql&gt; REPAIR TABLE productnotes;\r\n+---------------------+--------+----------+----------+\r\n| Table               | Op     | Msg_type | Msg_text |\r\n+---------------------+--------+----------+----------+\r\n| test_1.productnotes | repair | status   | OK       |\r\n+---------------------+--------+----------+----------+\r\n1 row in set (0.00 sec)</pre>4. OPTIMIZE TABLE 如果一个表中删除大量数据，应该使用O P T I M I Z E T A B L E 来收回所用的空间，从而优化表的性能【OPTIMIZE单词的中间没有空格】<p></p>\r\n<p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; OPTIM IZE TABLE orders;\r\n+---------------+----------+----------+-------------------------------------------------------------------+\r\n| Table         | Op       | Msg_type | Msg_text                                                          |\r\n+---------------+----------+----------+-------------------------------------------------------------------+\r\n| test_1.orders | optimize | note     | Table does not support optimize, doing recreate + analyze instead |\r\n| test_1.orders | optimize | status   | OK                                                                |\r\n+---------------+----------+----------+-------------------------------------------------------------------+\r\n2 rows in set (0.03 sec)\r\n\r\nmysql&gt; OPTIM IZE TABLE productnotes;\r\n+---------------------+----------+----------+----------+\r\n| Table               | Op       | Msg_type | Msg_text |\r\n+---------------------+----------+----------+----------+\r\n| test_1.productnotes | optimize | status   | OK       |\r\n+---------------------+----------+----------+----------+\r\n1 row in set (0.00 sec)</pre><p>17. 数据类型</p>\r\n<p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/ea6cd80c0de14fa06f93f997cf7a2f7f20121103025815.jpg\" id=\"ematt:6\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/ea6cd80c0de14fa06f93f997cf7a2f7f20121103025815.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p>\r\n<p>&nbsp;</p>\r\n<p>对于电话号码和邮政编码等，应该存储在串中，如果存为数值型的话，前缀的0会丢失。</p>\r\n<p>如果数值是计算（求和，平均值等） 中使用的数值，则应该存储在数值数据类型中。如果作为字符串使用的话，应该保存在串数据类型中。</p>\r\n<p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/6ff03091d3580565e2b3f6a421bd851c20121103030310.jpg\" id=\"ematt:7\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/6ff03091d3580565e2b3f6a421bd851c20121103030310.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p>\r\n<p>存储货币的类型:MySQL中没有专门存储货币的类型，一般情况下使用DECIMAL(8,2)。</p>\r\n<p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/5c10bc4f98d2847fa11b508e54acd70920121103030613.jpg\" id=\"ematt:8\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/5c10bc4f98d2847fa11b508e54acd70920121103030613.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p>\r\n<p></p>\r\n<p>&nbsp;<a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/b29935ebf5a79b630f9f849af76d784f20121103030624.jpg\" id=\"ematt:9\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/b29935ebf5a79b630f9f849af76d784f20121103030624.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p>\r\n<p>&nbsp;</p>\r\n<p>18. Binlog日志</p>\r\n<p>&nbsp;检查是否开启了binlog日志：</p>\r\n<p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; SHOW VARIABLES LIKE \'%bin%\';\r\n+-----------------------------------------+----------------------+\r\n| Variable_name                           | Value                |\r\n+-----------------------------------------+----------------------+\r\n| binlog_cache_size                       | 32768                |\r\n| binlog_direct_non_transactional_updates | OFF                  |\r\n| binlog_format                           | MIXED                |\r\n| binlog_stmt_cache_size                  | 32768                |\r\n| innodb_locks_unsafe_for_binlog          | OFF                  |\r\n| log_bin                                 | ON      !!!!开启了    &lt;--\r\n| log_bin_trust_function_creators         | OFF                  |\r\n| max_binlog_cache_size                   | 18446744073709547520 |\r\n| max_binlog_size                         | 1073741824           |\r\n| max_binlog_stmt_cache_size              | 18446744073709547520 |\r\n| sql_log_bin                             | ON                   |\r\n| sync_binlog                             | 0                    |\r\n+-----------------------------------------+----------------------+\r\n12 rows in set (0.00 sec)</pre>显示当前的bin-log日志：<p></p>\r\n<p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; SHOW MASTER STATUS;\r\n+------------------+----------+--------------+------------------+\r\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |\r\n+------------------+----------+--------------+------------------+\r\n| mysql-bin.000005 |      107 |              |                  |\r\n+------------------+----------+--------------+------------------+\r\n1 row in set (0.00 sec)</pre>使用新的Bin-log日志文件<p></p>\r\n<p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; FLUSH logs;\r\nQuery OK, 0 rows affected (0.02 sec)</pre>查看Bin-log日志内容：<p></p>\r\n<p></p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">[root@localhost 111]# /usr/local/mysql/bin/mysqlbinlog --no-defaults /usr/local/mysql/data/mysql-bin.000004\r\n/*!40019 SET @@session.max_insert_delayed_threads=0*/;\r\n/*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/;\r\nDELIMITER /*!*/;\r\n# at 4\r\n#121103 16:01:40 server id 1  end_log_pos 107   Start: binlog v 4, server v 5.5.28-log created 121103 16:01:40\r\nBINLOG \'\r\nZM+UUA8BAAAAZwAAAGsAAAAAAAQANS41LjI4LWxvZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\r\nAAAAAAAAAAAAAAAAAAAAAAAAEzgNAAgAEgAEBAQEEgAAVAAEGggAAAAICAgCAA==\r\n\'/*!*/;\r\n# at 107\r\n...此处省略1万字\r\nBEGIN\r\n/*!*/;\r\n# at 177\r\n#121103 16:02:08 server id 1  end_log_pos 205   Intvar\r\nSET INSERT_ID=1/*!*/;\r\n# at 205\r\n#121103 16:02:08 server id 1  end_log_pos 340   Query   thread_id=8     exec_time=0     error_code=0\r\nuse test_1/*!*/;\r\nSET TIMESTAMP=1351929728/*!*/;\r\ninsert into user (username , password) VALUES( \'mylxsw\'  ,MD5(\'guan\'))\r\n/*!*/;\r\n# at 340\r\n#121103 16:02:08 server id 1  end_log_pos 367   Xid = 71\r\nCOMMIT/*!*/;\r\n# at 367\r\n#121103 16:02:13 server id 1  end_log_pos 410   Rotate to mysql-bin.000005  pos: 4\r\nDELIMITER ;\r\n# End of log file\r\nROLLBACK /* added by mysqlbinlog */;\r\n/*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/;</pre><p></p>\r\n<p>使用binlog日志恢复数据：</p>\r\n<p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">#从数据库中把数据删除\r\n\r\nmysql&gt; use test_1;\r\nDatabase changed\r\nmysql&gt; select * from user;\r\n+----+----------+----------------------------------+--------+\r\n| id | username | password                         | status |\r\n+----+----------+----------------------------------+--------+\r\n|  1 | mylxsw   | a73325e0456e9286920359b330cc2a62 | -      |\r\n+----+----------+----------------------------------+--------+\r\n1 row in set (0.00 sec)\r\n\r\nmysql&gt; truncate user;\r\nQuery OK, 0 rows affected (0.01 sec)\r\n\r\nmysql&gt; select * from user;\r\nEmpty set (0.00 sec)</pre><pre class=\"brush:shell; toolbar: true; auto-links: true;\">#使用mysqlbinlog命令恢复数据\r\n\r\n[root@localhost 111]# /usr/local/mysql/bin/mysqlbinlog --no-defaults \r\n/usr/local/mysql/data/mysql-bin.000004 | /usr/local/mysql/bin/mysql -u root test_1</pre><p></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">#恢复后再次查询\r\n\r\nmysql&gt; use test_1;\r\nDatabase changed\r\nmysql&gt; select * from user;\r\n+----+----------+----------------------------------+--------+\r\n| id | username | password                         | status |\r\n+----+----------+----------------------------------+--------+\r\n|  1 | mylxsw   | a73325e0456e9286920359b330cc2a62 | -      |\r\n+----+----------+----------------------------------+--------+\r\n1 row in set (0.00 sec)</pre><p></p>\r\n<p>&nbsp;18. MySQL备份恢复</p>\r\n<p>备份数据库</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">[root@localhost 111]# mysqldump -uroot test_1 -l -F &gt; test_1.sql</pre>-l 锁定数据表</p>\r\n<p>-F 刷新bin-log日志，新建一个日志文件（FLUSH logs)</p>\r\n<p>恢复数据库：</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">[root@localhost 111]# mysql -uroot -p test_1 -v -f &lt;test_1.sql</pre>-v 显示导入的详细信息</p>\r\n<p>-f 当导入过程中遇到错误时 ，skip过去，继续执行下面的语句。</p>\r\n<p>恢复bin-log日志</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">[root@localhost 111]# mysqlbinlog --no-defaults bin日志文件 | mysql -uroot -p </pre>--start-position=\"开始位置\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 从开始位置开始恢复</p>\r\n<p>--stop-position=\"结束位置\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;恢复到指定位置</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>','<p><span style=\"font-size:10pt;line-height:1.5;\">16. 数据库维护</span></p>\r\n<p>1. ANALYZE TABLE &nbsp;<span style=\"font-size:10pt;line-height:1.5;\">用来检查表键是否正确。</span></p>\r\n<pre class=\"brush:sql; toolbar: true; auto-links: true;\">mysql&gt; ANALYZE TABLE orders;\r\n+---------------+---------+----------+----------+\r\n| Table         | Op      | Msg_type | Msg_text |\r\n+---------------+---------+----------+----------+\r\n| test_1.orders | analyze | status   | OK       |\r\n+---------------+---------+----------+-','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(172,'【转】Linux环境变量的设置和查看方法','<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">1. 显示环境变量HOME</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ echo $HOME</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　/home/redbooks</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　2. 设置一个新的环境变量hello</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ export HELLO=\"Hello!\"</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ echo $HELLO</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　Hello!</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　3. 使用env命令显示所有的环境变量</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ env</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　HOSTNAME=redbooks.safe.org</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　PVM_RSH=/usr/bin/rsh</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　Shell=/bin/bash</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　TERM=xterm</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　HISTSIZE=1000</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　...</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　4. 使用set命令显示所有本地定义的Shell变量</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ set</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　BASH=/bin/bash</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　BASH_VERSINFO=([0]=\"2\"[1]=\"05b\"[2]=\"0\"[3]=\"1\"[4]=\"release\"[5]=\"i386-redhat-<a class=\"keyword_link\" href=\"http://www.chinabyte.com/keyword/Linux/\" target=\"_blank\" style=\"text-decoration:initial;color:#555555;border-bottom-width:1px;border-bottom-style:dotted;border-bottom-color:#d30010;\">linux</a>-gnu\")</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　BASH_VERSION=\'2.05b.0(1)-release\'</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　COLORS=/etc/DIR_COLORS.xterm</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　COLUMNS=80</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　DIRSTACK=()</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　DISPLAY=:0.0</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　...</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　5. 使用unset命令来清除环境变量</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　set可以设置某个环境变量的值。清除环境变量的值用unset命令。如果未指定值，则该变量值将被设为NULL。示例如下：</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ export TEST=\"Test...\" #增加一个环境变量TEST</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ env|grep TEST #此命令有输入，证明环境变量TEST已经存在了</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　TEST=Test...</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ unset $TEST #删除环境变量TEST</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ env|grep TEST #此命令没有输出，证明环境变量TEST已经存在了</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　6. 使用readonly命令设置只读变量</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　如果使用了readonly命令的话，变量就不可以被修改或清除了。示例如下：</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ export TEST=\"Test...\" #增加一个环境变量TEST</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ readonly TEST #将环境变量TEST设为只读</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ unset TEST #会发现此变量不能被删除</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　-bash: unset: TEST: cannot unset: readonly variable</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ TEST=\"New\" #会发现此也变量不能被修改</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　-bash: TEST: readonly variable</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　环境变量的设置位于/etc/profile文件</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　如果需要增加新的环境变量可以添加下属行</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　export path=$path:/path1:/path2:/pahtN</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　-----------------------------------------------------------------------------------------------------------------------</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　1.Linux的变量种类</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　按变量的生存周期来划分，Linux变量可分为两类：</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　1.1 永久的：需要修改配置文件，变量永久生效。</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　1.2 临时的：使用export命令声明即可，变量在关闭shell时失效。</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　2.设置变量的三种方法</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　2.1 在/etc/profile文件中添加变量【对所有用户生效(永久的)】</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　用VI在文件/etc/profile文件中增加变量，该变量将会对Linux下所有用户有效，并且是“永久的”。</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　例如：编辑/etc/profile文件，添加CLASSPATH变量</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　# vi /etc/profile</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　注：修改文件后要想马上生效还要运行<span style=\"color:#e53333;\"><b># source /etc/profile</b></span>不然只能在下次重进此用户时生效。</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　2.2 在用户目录下的.bash_profile文件中增加变量【对单一用户生效(永久的)】</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　用VI在用户目录下的.bash_profile文件中增加变量，改变量仅会对当前用户有效，并且是“永久的”。</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　例如：编辑guok用户目录(/home/guok)下的.bash_profile</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ vi /home/guok/.bash.profile</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　添加如下内容：</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　注：修改文件后要想马上生效还要运行$ source /home/guok/.bash_profile不然只能在下次重进此用户时生效。</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　2.3 直接运行export命令定义变量【只对当前shell(BASH)有效(临时的)】</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　在shell的命令行下直接使用[export 变量名=变量值] 定义变量，该变量只在当前的shell(BASH)或其子shell(BASH)下是有效的，shell关闭了，变量也就失效了，再打开新shell时就没有这个变量，需要使用的话还需要重新定义。</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　3.环境变量的查看</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　3.1 使用echo命令查看单个环境变量。例如：</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　echo $PATH</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　3.2 使用env查看所有环境变量。例如：</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　env</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　3.3 使用set查看所有本地定义的环境变量。</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　unset可以删除指定的环境变量。</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　4.常用的环境变量</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　PATH 决定了shell将到哪些目录中寻找命令或程序</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　HOME 当前用户主目录</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　HISTSIZE　历史记录数</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　LOGNAME 当前用户的登录名</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　HOSTNAME　指主机的名称</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　SHELL 　　当前用户Shell类型</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　LANGUGE 　语言相关的环境变量，多语言可以修改此环境变量</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　MAIL　　　当前用户的邮件存放目录</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　PS1　　　基本提示符，对于root用户是#，对于普通用户是$</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\"></p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\"></p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\"><span style=\"color:#e53333;\">【原文地址：<a href=\"http://soft.chinabyte.com/os/169/11412169.shtml\" target=\"_blank\">http://soft.chinabyte.com/os/169/11412169.shtml</a>】</span></p>','<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">1. 显示环境变量HOME</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetica, sans-serif, \'microsoft yahei\';color:#555555;\">　　$ echo $HOME</p>\r\n<p style=\"margin:0pt 0pt 12px;padding:0pt;border:0px;font-size:14px;line-height:25px;font-family:Verdana, Arial, Helvetic','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(173,'【转载】大话PHP性能','<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1缘起</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">关于PHP，很多人的直观感觉是PHP是一种灵活的脚本语言，库类丰富，使用简单，安全，非常适合WEB开发，但性能低下。PHP的性能是否真的就如同大家的感觉一样的差呢？本文就是围绕这么一个话题来进行探讨的。从源码、应用场景、基准性能、对比分析等几个方面深入分析PHP之性能问题，通过真实的性能数据来说话，最终找出影响PHP模块性能的关键因素。</p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2从原理分析PHP性能</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从原理分析PHP的性能，主要从以下几个方面：内存管理、变量、函数、运行机制、网络模型来进行分析。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2.1内存管理</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">类似Nginx的内存管理方式，PHP在内部也是基于内存池，并且引入内存池的生命周期概念。在内存池方面，PHP对PHP脚本和扩展的所有内存相关操作都进行了托管。对大内存和小内存的管理采用了不同的实现方式和优化，具体可以参考以下文档：http://www.laruence.com/2011/11/09/2277.html。在内存分配和回收的生命周期内，PHP采用一次初始化申请+动态扩容+内存标识回收机制，并且在每次请求结束后直接对内存池进行重新mask。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"></p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2.2变量</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">总所周知，PHP是一种弱变量类型的语言，所以在PHP内部，所有的PHP变量都对应成一种类型Zval，其中具体定义如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322468114.jpg&amp;type=image%2Fjpeg&amp;width=428&amp;height=234\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"alignleft size-full wp-image-1344\" title=\"1\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322468114.jpg&amp;type=image%2Fjpeg&amp;width=428&amp;height=234\" alt=\"\" width=\"428\" height=\"234\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\">图一、PHP变量</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在变量方面，PHP做了大量的优化工作，比如说Reference counting和copy on writer机制。这样能够保证内存使用上的优化，并且减少内存拷贝次数（请参考http://blog.xiuwz.com/2011/11/09/php-using-internal-zval/）。在数组方面，PHP内部采用高效的hashtable来实现。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2.3函数</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在PHP内部，所有的PHP函数都回转化成内部的一个函数指针。比如说扩展中函数</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">ZEND_FUNCTION ( my_function );//类似function my_function(){}</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在内部展开后就会是一个函数</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">void zif_my_function ( INTERNAL_FUNCTION_PARAMETERS );</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">void zif_my_function(</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">int ht,</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">zval * return_value,</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">zval * this_ptr,</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">int return_value_used,</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">zend_executor_globals * executor_globals</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">);</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从这个角度来看，PHP函数在内部也是对应一个函数指针。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2.4运行机制</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在话说PHP性能的时候，很多人都会说“C/C++是编译型，JAVA是半编译型，PHP是解释型”。也就是说PHP是先动态解析再代码运行的，所以从这个角度来看，PHP性能必然很差。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">的确，从PHP脚本运行来输出，的确是一个动态解析再代码运行的过程。具体来说，PHP脚本的运行机制如下图所示：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322468213.jpg&amp;type=image%2Fjpeg&amp;width=192&amp;height=236\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1345\" title=\"1\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322468213.jpg&amp;type=image%2Fjpeg&amp;width=192&amp;height=236\" alt=\"\" width=\"192\" height=\"236\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\">图二、PHP运行机制</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">PHP的运行阶段也分成三个阶段：<br />\r\n●Parse。语法分析阶段。<br />\r\n●	Compile。编译产出opcode中间码。<br />\r\n●	Execute。运行，动态运行进行输出。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">通过上图也可以看出，其实在PHP内部本身也是存在编译的过程。事实上，在标准的生产环境中，也都基本上利用了这个特点，比如说opcode cache工具apc、eacc、xcache等等。基于opcode cache，能到做到“<strong>PHP</strong><strong>脚本编译一次，多次运行</strong>”的效果。从这点上，PHP就和JAVA的半编译机制非常类似。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">所以，从运行机制上来看，PHP的运行模式和JAVA是非常类似的，都是先产生中间码，然后运行在不同虚拟机上。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2.5动态运行</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从上面的几个分析来看，PHP在内存管理、变量、函数、运行机制等几个方面都做了大量的工作，所以从原理来看，<strong>PHP</strong><strong>不应该存在性能问题，性能至少也应该和JAVA</strong><strong>比较接近</strong>。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">但为什么还有很多人感觉PHP慢呢？尤其是一些计算量的性能对比上，总发现PHP处理的性能相对比较低效（http://shootout.alioth.debian.org/u32/php.php）。这个时候就不得不谈PHP动态语言的特性所带来的性能问题了，由于PHP是动态运行时，所以所有的变量、函数、对象调用、作用域实现等等都是在执行阶段中才确定的。这个从根本上决定了PHP性能中很难改变的一些东西：<strong>在</strong><strong>C/C++</strong><strong>等能够在静态编译阶段确定的变量、函数，在PHP</strong><strong>中需要在动态运行中确定，也就决定了PHP</strong><strong>中间码不能直接运行而需要运行在Zend Engine</strong><strong>上</strong>。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">说到PHP变量的具体实现，又不得不说一个东西了：hashtable。Hashtable可以说在PHP灵魂之一，在PHP内部广泛用到，包含变量符号栈、函数符号栈等等都是基于hashtable的。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">以PHP变量为例来说明下PHP的动态运行特点，比如说代码：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&lt;?php</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">$var = “hello, blog.xiuwz.com”;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">?&gt;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">该代码的执行结果就是在变量符号栈（是一个hashtable）中新增一个项</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-29-15-27-531322551765.jpg&amp;type=image%2Fjpeg&amp;width=451&amp;height=25\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"alignleft size-full wp-image-1355\" title=\"2011-11-29 15-27-53\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-29-15-27-531322551765.jpg&amp;type=image%2Fjpeg&amp;width=451&amp;height=25\" alt=\"\" width=\"451\" height=\"25\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">当要使用到该变量时候，就去变量符合栈中去查找（也就是变量调用对出了一个hash查找的过程）。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">同样对于函数调用也基本上类似有一个函数符号栈（hashtable）。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">其实关于动态运行的变量查找特点，在PHP的运行机制中也能看出一些。PHP代码通过解释、编译后的流程下图：<br />\r\n<a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322551808.jpg&amp;type=image%2Fjpeg&amp;width=558&amp;height=422\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"alignleft size-full wp-image-1356\" title=\"1\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322551808.jpg&amp;type=image%2Fjpeg&amp;width=558&amp;height=422\" alt=\"\" width=\"558\" height=\"422\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\">图3、PHP运行实例</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从上图可以看出，PHP代码在compile之后，产出的了类符号表、函数符号表、和OPCODE。在真正执行的时候，zend Engine会根据op code去对应的符号表中进行查找，处理。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从某种程度上，在这种问题的上，很难找到解决方案。因为这是由于PHP语言的动态特性所决定的。但是在国内外也有不少的人在寻找解决方案。因为通过这样，能够从根本上完全的优化PHP。典型的列子有facebook的hiphop(<a href=\"https://github.com/facebook/hiphop-php\" style=\"color:#1f749c;text-decoration:none;\">https://github.com/facebook/hiphop-php</a>)。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">但所有的这种编译优化方案，都基本上是牺牲了PHP动态运行的特性。当然可以在具体的编译优化中去对动态特性做一些折中，但很难做到完完全全的兼容。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2.6网络模型</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">目前采用PHP的方式，比较理想和通用的模式是采用fastcgi（PHP-FPM）。Php-fpm在网络模型上比较类似nginx，采用了多进程Master+多worker的模式。Php-fpm本身是基于libevent中的epoll模型。从网络模型来看，该方式也不会和其他网络模型存在性能差异。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2.7结论</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从上面分析来看，在基础的内存管理、变量、函数、运行机制、网络模型方面，PHP本身并不会存在明显的性能差异，但由于PHP的动态运行特性，决定了PHP和其他的编译型语言相比，所有的变量查找、函数运行等等都会多一些hash查找的CPU开销和额外的内存开销，至于这种开销具体有多大，可以通过后续的基准性能和对比分析得出。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">因此，也可以大体看出PHP不太适合的一些场景：大量计算性任务、大数据量的运算、内存要求很严格的应用场景。如果要实现这些功能，也建议通过扩展的方式实现，然后再提供钩子函数给PHP调用。这样可以减低内部计算的变量、函数等系列开销。</p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3基准性能</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">对于PHP基准性能，目前缺少标准的数据。大多数同学都存在感性的认识，有人认为800QPS就是PHP的极限了。此外，对于框架的性能和框架对性能的影响很没有响应的权威数字。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">本章节的目的是给出一个基准的参考性能指标，通过数据给大家一个直观的了解。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">具体的基准性能有以下几个方面：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、&nbsp; 裸PHP性能。完成基本的功能。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、&nbsp; 裸框架的性能。只做最简单的路由分发，只走通核心功能。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3、&nbsp; 标准模块的基准性能。所谓标准模块的基准性能，是指一个具有完整服务模块功能的基准性能。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3.1环境说明</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">测试环境：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Uname -a</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Linux db-forum-test17.db01.baidu.com 2.6.9_5-7-0-0 #1 SMP Wed Aug 12 17:35:51 CST 2009 x86_64 x86_64 x86_64 GNU/Linux</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Red Hat Enterprise Linux AS release 4 (Nahant Update 3)</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">8&nbsp; Intel(R) Xeon(R) CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; E5520&nbsp; @ 2.27GHz</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">软件相关：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Nginx：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">nginx version: nginx/0.8.54&nbsp; built by gcc 3.4.5 20051201 (Red Hat 3.4.5-2)</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Php5：（采用php-fpm）</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">PHP 5.2.8 (cli) (built: Mar&nbsp; 6 2011 17:16:18)</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Copyright (c) 1997-2008 The PHP Group</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zend Engine v2.2.0, Copyright (c) 1998-2008 Zend Technologies</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">with eAccelerator v0.9.5.3, Copyright (c) 2004-2006 eAccelerator, by eAccelerator</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">bingo2：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">PHP框架。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">其他说明：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">目标机器的部署方式：<a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-29-15-33-221322552013.jpg&amp;type=image%2Fjpeg&amp;width=184&amp;height=32\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"alignleft size-full wp-image-1357\" title=\"2011-11-29 15-33-22\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-29-15-33-221322552013.jpg&amp;type=image%2Fjpeg&amp;width=184&amp;height=32\" alt=\"\" width=\"184\" height=\"32\" style=\"border:0px;margin:0px;padding:0px;\" /></a>脚本。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">测试压力机器和目标机器独立部署。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3.2裸PHP性能</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">最简单的PHP脚本。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&lt;?php</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">require_once ‘./actions/indexAction.php’;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">$objAction = new indexAction();</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">$objAction-&gt;init();</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">$objAction-&gt;execute();</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">?&gt;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Acitons/indexAction.php里面的代码如下</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&lt;?php</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">class indexAction</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">{</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">public function execute()</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">{</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">echo ‘hello, world!’;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">}</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">}</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">?&gt;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">通过压力工具测试结果如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-45-091322628332.jpg&amp;type=image%2Fjpeg&amp;width=472&amp;height=162\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1426\" title=\"2011-11-30 12-45-09\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-45-091322628332.jpg&amp;type=image%2Fjpeg&amp;width=472&amp;height=162\" alt=\"\" width=\"472\" height=\"162\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3.3裸PHP框架性能</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">为了和3.2的对比，基于bingo2框架实现了类似的功能。代码如下</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&lt;?php</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">require_once ‘Bingo/Controller/Front.php’;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">$objFrontController = Bingo_Controller_Front::getInstance(array(</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">‘actionDir’ =&gt; ‘./actions’,</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">));</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">$objFrontController-&gt;dispatch();</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">?&gt;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">压力测试结果如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-29-15-48-431322552942.jpg&amp;type=image%2Fjpeg&amp;width=375&amp;height=107\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1363\" title=\"2011-11-29 15-48-43\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-29-15-48-431322552942.jpg&amp;type=image%2Fjpeg&amp;width=375&amp;height=107\" alt=\"\" width=\"375\" height=\"107\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从该测试结果可以看出：<strong>框架虽然有一定的消耗，但对整体的性能来说影响是非常小的</strong>。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3.4标准PHP模块的基准性能</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">所谓标准PHP模块，是指一个PHP模块所必须要具体的基本功能：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px 30px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●路由分发。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px 30px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●自动加载。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px 30px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●LOG初始化&amp;Notice日志打印。所以的UI请求都一条标准的日志。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px 30px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●错误处理。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px 30px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●时间校正。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px 30px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●自动计算每个阶段耗时开销。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px 30px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●编码识别&amp;编码转化。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px 30px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●标准配置文件的解析和调用</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px 30px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">采用bingo2的代码自动生成工具产生标准的测试PHP模块：test。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">测试结果如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-29-15-51-401322553111.jpg&amp;type=image%2Fjpeg&amp;width=372&amp;height=182\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1366\" title=\"2011-11-29 15-51-40\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-29-15-51-401322553111.jpg&amp;type=image%2Fjpeg&amp;width=372&amp;height=182\" alt=\"\" width=\"372\" height=\"182\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3.5结论</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从测试数据的结论来看，PHP本身的性能还是可以的。基准性能完全能够达到几千甚至上W的QPS。至于为什么在大多数的PHP模块中表现不佳，其实这个时候更应该去找出系统的瓶颈点，而不是简单的说OK，PHP不行，那我们换C来搞吧。（下一个章节，会通过一些例子来对比，采用C来处理不见得有特别的优势）</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">通过基准数据，可以得出以下几个具体的结论：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、&nbsp;&nbsp;&nbsp; PHP本身性能也很不错。简单功能下能够达到5000QPS（50CPU IDLE），极限也能过W。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、&nbsp;&nbsp;&nbsp; PHP框架本身对性能影响非常有限。尤其是在有一定业务逻辑和数据交互的情况下，几乎可以忽略。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3、&nbsp;&nbsp;&nbsp; 一个标准的PHP模块，基准性能能够达到2000QPS（80 cpu idle）。</p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4PHP与C性能对比分析</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">很多时候，大家发现PHP模块性能不行的时候，就来一句“ok，我们采用C重写吧”。在公司内，采用C/C++来写业务逻辑模块的现象到处都有，在前几年甚至几乎全部都是采用C来写。那时候大家写的真是一个痛苦：调试难、敏捷不要谈。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">那么，本章节要谈论的一个话题就是：C写的业务逻辑和PHP写的业务逻辑模块进行性能对比，采用真实的数据来说话。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4.1前提</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">为什么要特别说出这个前提呢？因为在理想情况下，一个功能采用PHP实现，该性能铁定不可能比理想的C写出来好。这个前提需要特别注意。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">但为什么还要对比呢？因为在现实情况下，能写出非常优秀的C程序，并且在频繁修改的情况下还能做到完全高性能的又有几个呢？并且在现实的应用中C实现的性能是否真的全都都比PHP要好好几倍呢？这些目前都没有确切的数据来论证。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">所以，本章节的对比是基于现实中的情况来进行的，并采用真实数据来说话。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4.2 真实业务模块PHP模块 VS C模块</h3>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4.2.1业务模块介绍</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">一个真实的案列，该业务模块的流量高达数十亿。该模块的架构图如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322627516.jpg&amp;type=image%2Fjpeg&amp;width=558&amp;height=148\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1419\" title=\"1\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322627516.jpg&amp;type=image%2Fjpeg&amp;width=558&amp;height=148\" alt=\"\" width=\"558\" height=\"148\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\">图4、业务模块架构图</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">该业务模块功能非常简单，上层是web server，下游是各个数据模块。都是基于socket进行数据交互。该业务模块的主要工作模型是：<strong>响应</strong><strong>web server</strong><strong>的请求，根据请求从各个后端数据模块读取相应数据，并根据数据产出最终的HTML</strong><strong>页面返回给web</strong><strong>服务器</strong>。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">为了方便后续介绍，定义CUI表示用C实现的模块，PHPUI表示用PHP实现的模块。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4.2.2C/C++模块的性能数据结果</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">09年，该模块重构选择了一个新的C/C++框架。当时重构的时候，该模块连接的后端数据模块规模<strong>在</strong><strong>5-7</strong><strong>个</strong>。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">基于C/C++的模块，最终测试数据数据分成两个部分：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">一、性能对比测试。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">基于当时线上压力，进行真实数据的性能测试。所以当时只测试一个压力数据如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><span style=\"color:#ff0000;\">压力：210QPS</span></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><span style=\"color:#ff0000;\">CPU（IDLE）：84.18</span></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">二、极限性能测试1。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">该测试模型是：CUI只连接一个核心数据模块，其他数据模块完全关闭。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-33-151322627607.jpg&amp;type=image%2Fjpeg&amp;width=245&amp;height=508\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1420\" title=\"2011-11-30 12-33-15\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-33-151322627607.jpg&amp;type=image%2Fjpeg&amp;width=245&amp;height=508\" alt=\"\" width=\"245\" height=\"508\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">三、极限性能测试2。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">该测试模型是：CUI连接后端一个核心数据模块，3个数据模块，其他数据模块不连接。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">测试后性能数据如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-34-041322627660.jpg&amp;type=image%2Fjpeg&amp;width=243&amp;height=162\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1421\" title=\"2011-11-30 12-34-04\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-34-041322627660.jpg&amp;type=image%2Fjpeg&amp;width=243&amp;height=162\" alt=\"\" width=\"243\" height=\"162\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4.2.3 PHP实现模块的性能测试数据</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">到11年，基于09年的CUI基本上达到了代码不看维护的地步。而且这个时候，CUI的极限性能已经不到<strong>600QPS</strong>（主要原因是随着项目的发展，后端数据模块的数目增加到<span style=\"color:#ff0000;\">14个</span>）。据此，决定采用PHP方案来重写整个模块，并产出最终的pbui模块。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">性能测试结果分成两种：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、PHPUI连接一个核心模块。测试数据如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322627698.jpg&amp;type=image%2Fjpeg&amp;width=498&amp;height=172\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1422\" title=\"1\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322627698.jpg&amp;type=image%2Fjpeg&amp;width=498&amp;height=172\" alt=\"\" width=\"498\" height=\"172\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\">图5、PHPUI性能测试结果1</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、PHPUI连接后端所有模块（14个）。测试性能数据如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322627734.jpg&amp;type=image%2Fjpeg&amp;width=469&amp;height=192\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1423\" title=\"1\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11322627734.jpg&amp;type=image%2Fjpeg&amp;width=469&amp;height=192\" alt=\"\" width=\"469\" height=\"192\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\">图6、PHPUI性能测试结果2</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4.2.4数据对比结论</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">由于PHPUI和CUI的业务逻辑和测试方法都不完全相同，所以抽取了部分大体能对比的点进行整理。具体对比数据如下：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-36-081322627777.jpg&amp;type=image%2Fjpeg&amp;width=684&amp;height=156\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1424\" title=\"2011-11-30 12-36-08\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-36-081322627777.jpg&amp;type=image%2Fjpeg&amp;width=684&amp;height=156\" alt=\"\" width=\"640\" height=\"146\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从上面的对比数据来看，<strong>在真实的业务项目中，</strong><strong>PHPUI</strong><strong>的性能并不会比CUI</strong><strong>差</strong>。这个不是简简单单一个模块来验证的，在部门里面，我们有不少模块都是从C/C++迁移到PHP，从迁移的结果来看，并没有存在质的性能下降，大部分模块迁移后性能指标都是非常接近的。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这个时候就需要思考为什么会这样了？细分来说有两个问题：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、 &nbsp; 为什么在真实业务项目中，PHPUI的性能并不会比CUI差太多？</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、&nbsp; 为什么基准的PHP性能这么高，80CPU的情况下2000QPS，但到了真实的PHP模块中只能是200QPS？</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">其实这两个问题，也可以归结成一种原因：<strong>在真实业务项目中，影响性能更多的不是说采用了什么语言，而是其业务相关的部分，比如说</strong><strong>socket</strong><strong>交互次数，比如说字符串处理，也比如说网络交互包大小</strong>。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">OK。那么接下来的关键是找出影响性能的关键因素。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4.2.5影响PHP模块性能的关键因素</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从前面分析，我们得出，影响前端PHP模块性能的关键因素不是语言本身（是否是PHP/JAVA/C都不重要）。那么到底影响PHP业务模块性能的关键因素在哪里呢？CPU耗时是统计一个项目性能的关键点之一，考虑到系统中都打印出了系列日志。通过分析日志中请求的耗时分布可以大体上看出关键点。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在我们系统中，CPU耗时重点打印出以下几个方面：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、&nbsp; 请求总时间。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、&nbsp; 请求关键函数的性能，其中所有的socket交互都有耗时计算。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3、&nbsp; 模版渲染也是好事的一个关键点。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在前面分析中，我们基本上判定socket和字符串处理是一个关键点之一，通过数据我们来验证下。抽取一个模块指定数目的日志，进行综合分析得出以下数据：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-37-041322627835.jpg&amp;type=image%2Fjpeg&amp;width=683&amp;height=105\" style=\"color:#1f749c;text-decoration:none;\"><img class=\"aligncenter size-full wp-image-1425\" title=\"2011-11-30 12-37-04\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=2011-11-30-12-37-041322627835.jpg&amp;type=image%2Fjpeg&amp;width=683&amp;height=105\" alt=\"\" width=\"640\" height=\"98\" style=\"border:0px;margin:0px;padding:0px;\" /></a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">通过这个可以看出，在一个业务模块中，影响最大的是socket数据交互，其次是大量的字符串处理。具体细分来说是以下几个因素：socket交互次数、socket交互包大小、socket交互响应时间、字符串处理。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4.2.6结论</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">通过上述分析，可以得出以下结论：在前端业务模块中，PHP语言本身不会成为性能瓶颈。因为影响性能的几个关键因数是：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">● 网络交互数目。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●&nbsp; 网络交互数据大小，包含数据打包解包开销。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">● 网络交互响应时间。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">●&nbsp; 大量的字符串处理。</p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">5最终结论</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">通过上述三个章节的具体分析，可以得出以下结论：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、从PHP实现原理来看，PHP属于半编译型语言，并且在各个方面都进行了大量的优化工作，本身不会存在明显的性能问题。但由于动态语言的特性，决定了PHP需要运行在Zend Engine虚拟机上，并且在变量查找、函数调用、作用域切换等各个方面需要一些额外开销。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、从PHP的基准性能来看，PHP本身不会存在明显的资源消耗，单机QPS能够轻松过W， PHP框架本身也不会对业务系统的性能带来关键性的影响。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3、从真实的应用场景来看，基于C语言实现的模块不见得比基于PHP实现的模块性能高效很多。因为在真实的应用场景中，更多的性能开销在于网络数据交互和字符串处理。语言方面微小的性能差异不会成为瓶颈。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">据此，可以推出：基于C语言实现的大部分业务系统都可以考虑迁移到PHP上来，一方面能够快速开发，另外一方面性能也不会存在问题。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">最后，关于影响PHP性能的关键因素的具体分析和关于语言函数级别PHP与C的基准性能对比分析，请关注下文《深入探讨PHP性能问题》。</p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">6参考文档</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://yanbin.org/\" style=\"color:#1f749c;text-decoration:none;\">http://yanbin.org/</a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"https://wiki.php.net/internals/zend_mm\" style=\"color:#1f749c;text-decoration:none;\">https://wiki.php.net/internals/zend_mm</a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://blog.xiuwz.com/2011/11/09/php-using-internal-zval/\" style=\"color:#1f749c;text-decoration:none;\">http://blog.xiuwz.com/2011/11/09/php-using-internal-zval/</a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://developers.facebook.com/blog/post/358/\" style=\"color:#1f749c;text-decoration:none;\">http://developers.facebook.com/blog/post/358/</a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"https://github.com/facebook/hiphop-php\" style=\"color:#1f749c;text-decoration:none;\">https://github.com/facebook/hiphop-php</a></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">【转载自：<a href=\"http://stblog.baidu-tech.com/?p=1343\">http://stblog.baidu-tech.com/?p=1343</a>】</p>','<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1缘起</h2><p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">关于PHP，很多人的直观感觉是PHP是一种灵活的脚本语言，库类丰富，使用简单，安全，非常适合WEB开发，但性能低下。PHP的性能是否真的就如同大家的感觉一样的差呢？本文就是围绕这么一个话题来进行探讨的。从源码、应用场景、基准性能、对比分析等几个方面深入分析PHP之性能问题，通过真实的性能数据来说话，最终找出影响PHP模块性能的关键因素。</p><h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Aria','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(174,'【转载】深入PHP使用技巧之变量','<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">众所周知，PHP与其他脚本语言一样，属于弱变量类型的语言。同时PHP本身也是通过C语言来实现。本文主要介绍PHP内部是如何实现弱变量类型的，并且据此分析在PHP开发中需要注意的一些使用技术。其中会重点分析PHP中的copy on write机制和引用相关方面的话题。 本章节属于《<a title=\"深入PHP使用技巧\" href=\"http://www.xlqtech.com/php-using-internal/\" style=\"color:#1f749c;text-decoration:none;\">深入PHP使用技巧</a>》的第一部分。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"></p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><strong>如何实现弱变量</strong></h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在了解PHP实现弱变量类型之前，可以先思考下：<strong>如何通过C/C++来实现弱变量类型的效果呢？</strong></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这个问题我在BIT培训课上基本上有两种答案：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">方法1：<strong>采用C++的继承机制</strong>。首先定义一个基础类型</p>\r\n<div id=\"highlighter_163947\" class=\"syntaxhighlighter \" style=\"border:0px !important;margin:1em 0px !important;padding:1px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:relative !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:653.4000244140625px;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:12px;min-height:inherit !important;color:#5f5f5f;\"><div class=\"lines\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><div class=\"line alt1\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><table style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;text-align:left !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tr style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><td class=\"number\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:3em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;color:#afafaf !important;\"><code style=\"margin:0px !important;padding:0px 0.3em 0px 0px !important;border:0px !important;outline:0px !important;background-image:none !important;text-align:right !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:2.7em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;display:block !important;\">1</code></td>\r\n<td class=\"content\" style=\"border-width:0px 0px 0px 3px !important;border-left-style:solid !important;border-left-color:#6ce26c !important;margin:0px !important;padding:0px 0px 0px 0.5em !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\"><code class=\"plain\" style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\">Class Var</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div class=\"line alt2\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;background-color:#f8f8f8 !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><table style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;text-align:left !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tr style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><td class=\"number\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:3em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;color:#afafaf !important;\"><code style=\"margin:0px !important;padding:0px 0.3em 0px 0px !important;border:0px !important;outline:0px !important;background-image:none !important;text-align:right !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:2.7em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;display:block !important;\">2</code></td>\r\n<td class=\"content\" style=\"border-width:0px 0px 0px 3px !important;border-left-style:solid !important;border-left-color:#6ce26c !important;margin:0px !important;padding:0px 0px 0px 0.5em !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\"><code class=\"plain\" style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\">{</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div class=\"line alt1\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><table style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;text-align:left !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tr style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><td class=\"number\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:3em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;color:#afafaf !important;\"><code style=\"margin:0px !important;padding:0px 0.3em 0px 0px !important;border:0px !important;outline:0px !important;background-image:none !important;text-align:right !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:2.7em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;display:block !important;\">3</code></td>\r\n<td class=\"content\" style=\"border-width:0px 0px 0px 3px !important;border-left-style:solid !important;border-left-color:#6ce26c !important;margin:0px !important;padding:0px 0px 0px 0.5em !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\"><code class=\"plain\" style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\">}</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">然后基于Var，派生出不同的子类型IntVar/FloatVar/StringVar等等。<br />\r\n方法2：<strong>基于C语言的 Struct</strong>。其中一个字段用于标识类型，另外一个字段用于存储数据，由于数据要是各种类型，所以通常需要采用指针</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">比如：</p>\r\n<div id=\"highlighter_238647\" class=\"syntaxhighlighter \" style=\"border:0px !important;margin:1em 0px !important;padding:1px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:relative !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:653.4000244140625px;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:12px;min-height:inherit !important;color:#5f5f5f;\"><div class=\"lines\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><div class=\"line alt1\" style=','<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">众所周知，PHP与其他脚本语言一样，属于弱变量类型的语言。同时PHP本身也是通过C语言来实现。本文主要介绍PHP内部是如何实现弱变量类型的，并且据此分析在PHP开发中需要注意的一些使用技术。其中会重点分析PHP中的copy on write机制和引用相关方面的话题。 本章节属于《<a title=\"深入PHP使用技巧\" href=\"http://www.xlqtech.com/php-using-internal/\" style=\"color:#1f749c;text-decoration:none;\">深入PHP使用技巧</a>》的第一部分。</p><h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;l','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(175,'【转载】PHP内核介绍及扩展开发指南—高级主题','<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用数组</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">曾讲到，PHP数组本质上就是个HashTable，因此访问数组就是对HashTable进行操作，Zend为我们提供的一组数组函数也只是对HashTable操作进行了简单包装而已。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">来看创建数组，由于数组也是存在于zval里的，因此要先用MAKE_STD_ZVAL()宏创建一个zval，之后调用如下宏将其转化为一个空数组：</p>\r\n<pre class=\"bursh:php\" style=\"color:#5f5f5f;font-size:12px;line-height:23px;background-color:#ffffff;\">array_init(zval*)</pre><p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">接下来是朝数组中添加元素，这对关联数组元素和非关联数组元素要采用不同操作。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"></h3>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1.1.1&nbsp;关联数组元素</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">关联数组采用char*作为key，zval*作为value，可以使用如下宏将已有的zval加入数组或者更新已有元素：</p>\r\n<pre class=\"bursh:php\" style=\"color:#5f5f5f;font-size:12px;line-height:23px;background-color:#ffffff;\">int add_assoc_zval(zval *arr, char *key, zval *value)</pre><p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">需要特别注意的是，Zend不会复制zval，只会简单的储存其指针，并且不关心任何引用计数，因此不能将其他变量的zval或者是栈上的zval传给它，只能用MAKE_STD_ZVAL()宏构建。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zend为常用的类型定义了相应的API，以简化我们的操作：</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border:0px;margin:0px;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;text-align:start;\"><tbody><tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"492\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_assoc_long(zval *array, char *key, long n);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"492\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_assoc_bool(zval *array, char *key, int b);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"492\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_assoc_resource(zval *array, char *key, int r);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"492\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_assoc_double(zval *array, char *key, double d);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"492\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_assoc_string(zval *array, char *key, char *str, int duplicate);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"492\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_assoc_stringl(zval *array, char *key, char *str, uint length, int duplicate);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"492\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_assoc_null(zval *array, char *key);</strong></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">当函数发现目标元素已经存在时，会首先递减其原zval的refcount，然后才插入新zval，这就保证了原zval引用信息的正确性。这种行为是通过HashTable.pDestructor（参见<a href=\"http://stblog.baidu-tech.com/wp-admin/post-new.php#_数据结构\" style=\"color:#1f749c;text-decoration:none;\">1.2.1</a>）实现的，每次删除一个元素时，HashTable都将对被删元素调用这个函数指针，而数组为其HashTable设置的函数指针就是用来处理被删除zval的引用信息。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">另外，查看这些函数的源代码可以发现一个有意思的现象，它们没有直接使用HashTable操作，而是使用变量符号表操作，可见关联数组和变量符号表就是一种东西。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zend没有提供删除和获取数组元素的函数，此类操作只能使用HashTable函数或者是<a href=\"http://stblog.baidu-tech.com/wp-admin/post-new.php#_访问PHP变量\" style=\"color:#1f749c;text-decoration:none;\">2.6节</a>的变量符号表操作。</p>\r\n<h4 style=\"color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\">1.1.2非关联数组元素</h4>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">非关联数组没有key，使用index作为hash，相应函数和上面关联数组的十分类似：</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border:0px;margin:0px;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;text-align:start;\"><tbody><tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_index_zval(zval *array, uint idx, zval *value);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_index_long(zval *array, uint idx, long n);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_index_bool(zval *array, uint idx, int b);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_index_resource(zval *array, uint idx, int r);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_index_double(zval *array, uint idx, double d);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_index_string(zval *array, uint idx, char *str, int duplicate);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_index_stringl(zval *array, uint idx, char *str, uint length, int duplicate);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_index_null(zval *array, uint idx);</strong></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">如果只是想插入值，而不指定index的话，可以使用如下函数：</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border:0px;margin:0px;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;text-align:start;\"><tbody><tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_next_index_zval(zval *array, zval *value);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_next_index_long(zval *array, long n);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_next_index_bool(zval *array, int b);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_next_index_resource(zval *array, int r);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_next_index_double(zval *array, double d);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_next_index_string(zval *array, char *str, int duplicate);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_next_index_stringl(zval *array, char *str, uint length, int duplicate);</strong></td>\r\n</tr>\r\n<tr style=\"border:0px;margin:0px;padding:0px;\"><td width=\"432\" style=\"border:0px;margin:0px;padding:0px;\"><strong>add_next_index_null(zval *array);</strong></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用资源</h3>\r\n<h4 style=\"color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\">1.2.1&nbsp; 注册资源类型</h4>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><a href=\"http://stblog.baidu-tech.com/wp-admin/post-new.php#_zval结构\" style=\"color:#1f749c;text-decoration:none;\">1.1.1节</a>曾经提到，所谓资源就是内部数据的handle（但是这句话并不全对），使用资源是比较简单的，首先是注册一个资源类型：</p>\r\n<pre class=\"bursh:php\" style=\"color:#5f5f5f;font-size:12px;line-height:23px;background-color:#ffffff;\">int zend_register_list_destructors_ex(\r\nrsrc_dtor_func_t ld,\r\nrsrc_dtor_func_t pld,\r\nchar *type_name,\r\nint module_number);</pre><p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">第一个参数是函数指针，当资源不再被使用或者模块将被卸载时，Zend使用它来销毁资源，稍候再作介绍；第二个参数和第一个类似，只是它被用来销毁持久性资源(*)；type_name是资源名称，用户可以使用var_dump函数来读取；module_number是模块号，在启动函数中可以获取该值。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">注册过程其实就是将我们传入的参数放到一个内部数据结构，然后把这个数据结构放入一个没有使用key的HashTable里，该函数返回的值，也就是所谓“资源类型id”，其实就是HashTable的index。</p>\r\n<h4 style=\"color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\">1.2.1&nbsp; 注册资源</h4>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">注册完资源类型后，就可以注册一个该类型的资源了：</p>\r\n<div id=\"highlighter_658518\" class=\"syntaxhighlighter \" style=\"border:0px !important;margin:1em 0px !important;padding:1px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:relative !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:653.4000244140625px;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:12px;min-height:inherit !important;color:#5f5f5f;\"><div class=\"lines\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><div class=\"line alt1\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><table style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;text-align:left !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tr style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><td class=\"number\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:3em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;color:#afafaf !important;\"><code style=\"margin:0px !important;padding:0px 0.3em 0px 0px !important;border:0px !important;outline:0px !important;background-image:none !important;text-align:right !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:2.7em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;display:block !important;\">1</code></td>\r\n<td class=\"content\" style=\"border-width:0px 0px 0px 3px !important;border-left-style:solid !important;border-left-color:#6ce26c !important;margin:0px !important;padding:0px 0px 0px 0.5em !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\"><code class=\"plain\" style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\">ZEND_REGISTER_RESOURCE(</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div class=\"line alt2\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;background-color:#f8f8f8 !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><table style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;text-align:left !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tr style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><td class=\"number\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:3em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;color:#afafaf !important;\"><code style=\"margin:0px !important;padding:0px 0.3em 0px 0px !important;border:0px !important;outline:0px !important;background-image:none !important;text-align:right !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:2.7em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;display:block !important;\">2</code></td>\r\n<td class=\"content\" style=\"border-width:0px 0px 0px 3px !important;border-left-style:solid !important;border-left-color:#6ce26c !important;margin:0px !important;padding:0px 0px 0px 0.5em !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\"><code class=\"plain\" style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\">rsrc_result,</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div class=\"line alt1\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><table style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;text-align:left !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tr style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><td class=\"number\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:3em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;color:#afafaf !important;\"><code style=\"margin:0px !important;padding:0px 0.3em 0px 0px !important;border:0px !important;outline:0px !important;background-image:none !important;text-align:right !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:2.7em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;display:block !important;\">3</code></td>\r\n<td class=\"content\" style=\"border-width:0px 0px 0px 3px !important;border-left-style:solid !important;border-left-color:#6ce26c !important;margin:0px !important;padding:0px 0px 0px 0.5em !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\"><code class=\"plain\" style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\">rsrc_pointer,</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div class=\"line alt2\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;background-color:#f8f8f8 !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><table style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;text-align:left !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tr style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><td class=\"number\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:3em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;color:#afafaf !important;\"><code style=\"margin:0px !important;padding:0px 0.3em 0px 0px !important;border:0px !important;outline:0px !important;background-image:none !important;text-align:right !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:2.7em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;display:block !important;\">4</code></td>\r\n<td class=\"content\" style=\"border-width:0px 0px 0px 3px !important;border-left-style:solid !important;border-left-color:#6ce26c !important;margin:0px !important;padding:0px 0px 0px 0.5em !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\"><code class=\"plain\" style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\">rsrc_type)</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">src_pointer是个指针类型，就是你的资源的handle, 通常是指向内部数据的指针，当然也可以是index或者其它标志符；rsrc_type是上面获取的资源类型id；rsrc_result是个已有的zval，注册完成后，资源的id就被放入该zval，同时其type也被设为IS_RESOURCE，通常是传入return_value，以将资源返回给用户。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在内部，Zend使用如下数据结构表示一个资源：</p>\r\n<div id=\"highlighter_553030\" class=\"syntaxhighlighter \" style=\"border:0px !important;margin:1em 0px !important;padding:1px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:relative !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:653.4000244140625px;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:12px;min-height:inherit !important;color:#5f5f5f;\"><div class=\"lines\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><div class=\"line alt1\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><table style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;text-align:left !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tr style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><td class=\"number\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:3em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;color:#afafaf !important;\"><code style=\"margin:0px !important;padding:0px 0.3em 0px 0px !important;border:0px !important;outline:0px !important;background-image:none !important;text-align:right !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:2.7em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;display:block !important;\">1</code></td>\r\n<td class=\"content\" style=\"border-width:0px 0px 0px 3px !important;border-left-style:solid !important;border-left-color:#6ce26c !important;margin:0px !important;padding:0px 0px 0px 0.5em !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\"><code class=\"plain\" style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\">typedef struct _zend_rsrc_list_entry {</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div class=\"line alt2\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;background-color:#f8f8f8 !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><table style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;text-align:left !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><tr style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-size:1em !important;min-height:inherit !important;\"><td class=\"number\" style=\"border:0px !important;margin:0px !important;padding:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:3em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;color:#afafaf !important;\"><code style=\"margin:0px !important;padding:0px 0.3em 0px 0px !important;border:0px !important;outline:0px !important;background-image:none !important;text-align:right !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:2.7em !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;display:block !important;\">2</code></td>\r\n<td class=\"content\" style=\"border-width:0px 0px 0px 3px !important;border-left-style:solid !important;border-left-color:#6ce26c !important;margin:0px !important;padding:0px 0px 0px 0.5em !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:top !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:inherit !important;\"><code class=\"spaces\" style=\"margin:0px !important;padding:0px !important;border:0px !important;outline:0px !important;background-image:none !important;float:none !important;vertical-align:baseline !important;position:static !important;left:auto !important;top:auto !important;right:auto !important;bottom:auto !important;height:auto !important;width:auto !important;line-height:1.1em !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !importan','<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用数组</h3><p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">曾讲到，PHP数组本质上就是个HashTable，因此访问数组就是对HashTable进行操作，Zend为我们提供的一组数组函数也只是对HashTable操作进行了简单包装而已。</p><p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(176,'【转载】深入了解php底层机制','<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">作为一门动态语言，php是如何实现的，其底层机制如何，具有什么样的特点，本文深入浅出介绍了包括php设计理念、整体结构、核心数据结构和变量在内的相关底层知识，对我们更好的开发php程序，优化性能等有一定的指导意义。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><strong>TAG</strong></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Php 底层机制 性能优化</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">目录</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、概述… 1</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">what is php?. 1</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">了解它底层实现的目的?. 1</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、php的设计理念及特点… 1</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3、Php的四层体系… 2</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4、Sapi 3</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">5、Php的执行流程&amp;opcode. 5</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">6、HashTable&nbsp; — 核心数据结构… 6</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">7、Php变量… 8</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">概述… 8</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zval 9</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">整数、浮点数类型变量… 10</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">字符串变量… 10</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">数组变量… 11</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">资源类型变量… 11</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Php变量的作用域… 12</p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、概述</h2>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">what is php?</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">一种适用于web开发的动态语言。具体点说：就是一个用c语言实现包含大量组件的软件框架。更狭义点看，可以把它认为是一个强大的ui框架。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">了解它底层实现的目的?</h3>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">动态语言要像用好首先得了解它</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">内存管理、框架模型值得我们借鉴</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">通过扩展开发实现更多更强大的功能，优化我们程序的性能</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><strong>&nbsp;</strong></p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、php的设计理念及特点</h2>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">多进程模型</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">由于php是多进程模型，不同请求间互不干涉，这样保证了一个请求挂掉不会对全盘服务造成影响，当然，随着时代发展，php也早已支持多线程模型。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">弱类型语言</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">和c/c++、java、c#等语言不同，Php是一门弱类型语言：一个变量的类型并不是一开始就确定不变，运行中才会确定并可能发生隐式或显式的类型转换，这种机制的灵活性在web开发中非常方便、高效，具体会在后面php变量中详述。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">引擎(Zend)+组件(ext)的模式降低内部耦合</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">中间层(sapi)隔绝web server和php</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">语法简单灵活，没有太多规范。（导致风格混杂）</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\"><strong>再差的程序员也不会写出太离谱危害全局的程序。</strong></li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><strong>&nbsp;</strong></p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3、Php的四层体系</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Php的核心架构如下图</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\"><img class=\"aligncenter\" title=\"1\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=11307082197.jpg&amp;type=image%2Fjpeg&amp;width=518&amp;height=529\" alt=\"\" width=\"518\" height=\"529\" style=\"border:0px;margin:0px;padding:0px;\" /></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">图1 php结构</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从图上可以看出，php从下到上是一个4层体系</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Zend引擎</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zend整体用纯c实现，是php的内核部分，它将php代码翻译（词法、语法解析等一系列编译过程）为可执行opcode的处理并实现相应的处理方法、实现了基本的数据结构（如hashtable、oo）、内存分配及管理、提供了相应的api方法供外部调用，是一切的核心，所有的外围功能均围绕zend实现。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Extensions</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">围绕着zend引擎，extensions通过组件式的方式提供各种基础服务，我们常见的各种内置函数（如array系列）、标准库等都是通过extension来实现，用户也可以根据需要实现自己的extension以达到功能扩展、性能优化等目的（如贴吧正在使用的php中间层、富文本解析就是extension的典型应用）。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Sapi</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Sapi全称是Server Application Programming Interface，也就是服务端应用编程接口，sapi通过一系列钩子函数，使得php可以和外围交互数据，这是php非常优雅和成功的一个设计，通过sapi成功的将php本身和上层应用解耦隔离，php可以不再考虑如何针对不同应用进行兼容，而应用本身也可以针对自己的特点实现不同的处理方式。后面将在sapi章节中介绍</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">上层应用</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这就是我们平时编写的php程序，通过不同的sapi方式得到各种各样的应用模式，如通过webserver实现web应用、在命令行下以脚本方式运行等等。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">如果php是一辆车，那么</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">车的框架就是php本身</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">Zend是车的引擎（发动机）</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">Ext下面的各种组件就是车的轮子</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">Sapi可以看做是公路，车可以跑在不同类型的公路上</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">而一次php程序的执行就是汽车跑在公路上。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">因此，我们需要：<strong>性能优异的引擎+合适的车轮+正确的跑道</strong></p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4、Sapi</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">如前所述，sapi通过通过一系列的接口，使得外部应用可以和php交换数据并可以根据不同应用特点实现特定的处理方法，我们常见的一些sapi有：</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">apache2handler</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这是以apache作为webserver，采用mod_php模式运行时候的处理方式，也是现在应用最广泛的一种。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">cgi</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这是webserver和php直接的另一种交互方式，也就是大名鼎鼎的fastcgi协议，在最近今年fastcgi+php得到越来越多的应用，也是异步webserver所唯一支持的方式。关于fastcgi和mod_php，可以参见另外一篇文章《php性能调研-mod_php vs fastcgi》</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">cli</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">命令行调用的应用模式</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sapi的定义及主要接口函数如下图</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\"><img class=\"aligncenter\" title=\"2\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=21307082245.jpg&amp;type=image%2Fjpeg&amp;width=558&amp;height=504\" alt=\"\" width=\"558\" height=\"504\" style=\"border:0px;margin:0px;padding:0px;\" /></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">图2 Sapi协议</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这里介绍一下其中一些主要函数</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">startup：php被调用时初始化操作</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">比如cgi模式，在startup的时候会加载所有的extension并执行模块初始化工作。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">shutdown：php关闭时收尾工作</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">activate：请求初始化</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">dectivate：请求结束时收尾工作</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">ub_write：指定数据输出方式</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">比如apache2handler方式，由于php作为apache的一个so存在，因此其输出也就是调用apache的ap_write函数，而在cgi模式下，会系统调用write。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">sapi_error：错误处理函数</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">read_post：读取post数据</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">register_server_variables：往$_SERVER中注册环境变量</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这个一般根据不同协议标准注册注册的变量。</p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">5、Php的执行流程&amp;opcode</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">我们先来看看php代码的执行所经过的流程。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\"><img class=\"aligncenter\" title=\"3\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=31307082320.jpg&amp;type=image%2Fjpeg&amp;width=231&amp;height=552\" alt=\"\" width=\"231\" height=\"552\" style=\"border:0px;margin:0px;padding:0px;\" /></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">图3 php代码的执行过程</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从图上可以看到，php实现了一个典型的动态语言执行过程：拿到一段代码后，经过词法解析、语法解析等阶段后，源程序会被翻译成一个个指令(opcodes)，然后ZEND虚拟机顺次执行这些指令完成操作。Php本身是用c实现的，因此最终调用的也都是c的函数，实际上，我们可以把php看做是一个c开发的软件。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 通过上面描述不难看出，php的执行的核心是翻译出来的一条一条指令，也即opcode</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">u&nbsp;&nbsp;<strong>opcode</strong></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Opcode是php程序执行的最基本单位。一个opcode由两个参数(op1,op2)、返回值和处理函数组成。Php程序最终被翻译为一组opcode处理函数的顺序执行</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">常见的几个处理函数</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ZEND_ASSIGN_SPEC_CV_CV_HANDLER : 变量分配 （$a=$b）</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER：函数调用</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ZEND_CONCAT_SPEC_CV_CV_HANDLER：字符串拼接 $a.$b</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ZEND_ADD_SPEC_CV_CONST_HANDLER: 加法运算 $a+2</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ZEND_IS_EQUAL_SPEC_CV_CONST：判断相等 $a==1</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ZEND_IS_IDENTICAL_SPEC_CV_CONST：判断相等 $a===1</p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">6、HashTable&nbsp; — 核心数据结构</h2>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">HashTable是zend的核心数据结构，在php里面几乎并用来实现所有常见功能，我们知道的php数组即是其典型应用，此外，在zend内部，如函数符号表、全局变量等也都是基于hash table来实现。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; php的hash table具有如下特点：</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">支持典型的key-&gt;value查询</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">可以当做数组使用</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">添加、删除节点是O（1）复杂度</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">key支持混合类型：同时存在关联数组合索引数组</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">Value支持混合类型：array (“string”,2332)</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">支持线性遍历：如foreach</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zend hash table实现了典型的hash表散列结构，同时通过附加一个双向链表，提供了正向、反向遍历数组的功能。其结构如下图</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\"><img class=\"aligncenter\" title=\"4\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=41307082370.jpg&amp;type=image%2Fjpeg&amp;width=558&amp;height=519\" alt=\"\" width=\"558\" height=\"519\" style=\"border:0px;margin:0px;padding:0px;\" /></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">图4 zend hash table数据结构</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">可以看到，在hash table中既有key-&gt;value形式的散列结构，也有双向链表模式，使得它能够非常方便的支持快速查找和线性遍历。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">散列结构</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zend的散列结构是典型的hash表模型，通过链表的方式来解决冲突。需要注意的是zend的hash table是一个自增长的数据结构，当hash表数目满了之后，其本身会动态以2倍的方式扩容并重新元素位置。初始大小均为8。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">另外，在进行key-&gt;value快速查找时候，zend本身还做了一些优化，通过空间换时间的方式加快速度。比如在每个元素中都会用一个变量nKeyLength标识key的长度以作快速判定。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">双向链表</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zend hash table通过一个链表结构，实现了元素的线性遍历。理论上，做遍历使用单向链表就够了，之所以使用双向链表，主要目的是为了快速删除，避免遍历。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zend hash table是一种复合型的结构，作为数组使用时，即支持常见的关联数组也能够作为顺序索引数字来使用，甚至允许2者的混合。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Php关联数组</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">关联数组是典型的hash_table应用。一次查询过程经过如下几步</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;getKeyHashValue h;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;index = n &amp; nTableMask;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Bucket *p = arBucket[index];</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;while (p) {</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; if ((p-&gt;h == h) &amp;&amp; (p-&gt;nKeyLength == nKeyLength)) {</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RETURN p-&gt;data;&nbsp;&nbsp;&nbsp;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;}</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p=p-&gt;next;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">RETURN FALTURE;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从代码可以看出，这是一个常见的hash查询过程并增加一些快速判定加速查找。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Php索引数组</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">索引数组就是我们常见的数组，通过下标访问。例如 $arr[0]</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zend HashTable内部进行了归一化处理，对于index类型key同样分配了hash值和nKeyLength(为0)。内部成员变量nNextFreeElement就是当前分配到的最大id，每次push后自动加一。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><strong>正是这种归一化处理，php</strong><strong>才能够实现关联和非关联的混合</strong></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">由于push操作的特殊性，索引key在php数组中先后顺序并不是通过下标大小来决定，而是由push的先后决定。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">例如 $arr[1] = 2; $arr[2] = 3;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">对于double类型的key，Zend HashTable会将他当做索引key处理</p>\r\n<h2 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">7、Php变量</h2>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">概述</h3>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Php是一门弱类型语言，本身不严格区分变量的类型。</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Php在变量申明的时候不需要指定类型。</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Php在程序运行期间可能进行变量类型的隐示转换。</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">和其他强类型语言一样，程序中也可以进行显示的类型转换。</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Php变量可以分为简单类型(int、string、bool)、集合类型(array resource object)和常量(const)</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">以上所有的变量在底层都是同一种结构 zval</li>\r\n</ul>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zval</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zval是zend中另一个非常重要的数据结构，用来标识并实现php变量，其数据结构如下</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;text-align:center;\"><img class=\"aligncenter\" title=\"5\" src=\"http://stblog.baidu-tech.com/wp-content/uploads/wp-display-data.php?filename=51307082422.jpg&amp;type=image%2Fjpeg&amp;width=556&amp;height=505\" alt=\"\" width=\"556\" height=\"505\" style=\"border:0px;margin:0px;padding:0px;\" /></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zval主要由三部分组成：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、&nbsp; type：指定了变量所述的类型（整数、字符串、数组等）</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、&nbsp; refcount&amp;is_ref：用来实现引用计数(后面具体介绍)</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3、&nbsp; value：核心部分，存储了变量的实际数据</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">u&nbsp; zvalue</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zvalue是用来保存一个变量的实际数据。因为要存储多种类型，所以zvalue是一个union，也由此实现了弱类型。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Php变量类型和其实际存储对应关系如下</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">IS_LONG&nbsp;&nbsp; -&gt; lvalue</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">IS_DOUBLE -&gt; dvalue</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">IS_ARRAY&nbsp; -&gt; ht</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">IS_STRING -&gt; str</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">IS_RESOURCE -&gt; lvalue</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">u&nbsp; 引用计数</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">引用计数在内存回收、字符串操作等地方使用非常广泛。Php中的变量就是引用计数的典型应用</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Zval的引用计数通过成员变量is_ref和ref_count实现，通过引用计数，多个变量可以共享同一份数据。避免频繁拷贝带来的大量消耗</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在进行赋值操作时，zend将变量指向相同的zval同时ref_count++，在unset操作时，对应的ref_count-1。只有ref_count减为0时才会真正执行销毁操作</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">如果是引用赋值，则zend会修改is_ref为1</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">u&nbsp; 写时拷贝</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Php变量通过引用计数实现变量共享数据，那如果改变其中一个变量值呢？</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">当试图写入一个变量时，Zend若发现该变量指向的zval被多个变量共享，则为其复制一份ref_count为1的zval，并递减原zval的refcount，这个过程称为“zval分离”。可见，只有在有写操作发生时zend才进行拷贝操作，因此也叫copy-on-write(写时拷贝)</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">对于引用型变量，其要求和非引用型相反，引用赋值的变量间必须是捆绑的，修改一个变量就修改了所有捆绑变量。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">整数、浮点数类型变量</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">整数、浮点数是php中的基础类型之一，也是一个简单型变量。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">对于整数和浮点数，在zvalue中直接存储对应的值。其类型分别是long和double。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">从zvalue结构中可以看出，对于整数类型，和c等强类型语言不同，php是不区分int、unsigned int、long、long long等类型的，对它来说，整数只有一种类型也就是long。由此，可以看出，<strong>在</strong><strong>php</strong><strong>里面，整数的取值范围是由编译器位数来决定而不是固定不变的</strong>。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">对于浮点数，类似整数，它也不区分float和double而是统一只有double一种类型。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">在php中，如果整数范围越界了怎么办？</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这种情况下会自动转换为double类型，这个一定要小心，很多trick都是由此产生。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">字符串变量</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">和整数一样，字符变量也是php中的基础类型和简单型变量</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">通过zvalue结构可以看出，在php中，字符串是由由指向实际数据的指针和长度结构体组成，这点和c++中的string比较类似。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">由于通过一个实际变量表示长度，和c不同，它的字符串可以是2进制数据（包含\\0），同时在php中，求字符串长度strlen是O(1)操作。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在新增、修改、追加字符串操作时，php都会重新分配内存生成新的字符串。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">最后，出于安全考虑，php在生成一个字符串时末尾仍然会添加\\0</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">常见的字符串拼接方式及速度比较</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">假设有如下4个变量：</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">$strA=‘123’;&nbsp; $strB = ‘456’; $intA=123; intB=456;</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">现在对如下的几种字符串拼接方式做一个比较和说明</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">1、$res = $strA.$strB和$res = “$strA$strB”</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这种情况下，zend会重新malloc一块内存并进行相应处理，其速度一般</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">2、$strA = $strA.$strB</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这种是速度最快的，zend会在当前strA基础上直接relloc，避免重复拷贝</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">3、$res = $intA.$intB</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这种速度较慢，因为需要做隐式的格式转换，实际编写程序中也应该注意尽量避免</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">4、$strA = sprintf (“%s%s”,$strA.$strB);</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">这会是最慢的一种方式，因为sprintf在php中并不是一个语言结构，本身对于格式识别和处理就需要耗费比较多时间，另外本身机制也是malloc。不过sprintf的方式最具可读性，实际中可以根据具体情况灵活选择。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">数组变量</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">如前所述，Php的数组通过Zend HashTable来天然实现</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">foreach操作如何实现？</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对一个数组的foreach就是通过遍历hashtable中的双向链表完成。对于索引数组，通过foreach遍历效率比for高很多，省去了key-&gt;value的查找</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Count操作直接调用HashTable-&gt;NumOfElements，O(1)操作</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">对于’123’这样的字符串，zend会转换为其整数形式。$arr[‘123’]和$arr[123]是等价的</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">资源类型变量</h3>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这是php中最复杂的一种变量，也是一种复合型结构。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Php的zval可以表示广泛的数据类型，但是对于自定义的数据类型却很难充分描述。由于没有有效的方式描绘这些复合结构，因此也没有办法对它们使用传统的操作符。要解决这个问题，只需要通过一个本质上任意的标识符（label）引用指针，这种方式被称为<strong>资源</strong>。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">在zval中，对于resource，lval作为指针来使用，直接指向资源所在的地址。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Resource可以是任意的复合结构，我们熟悉的mysqli、fsock、memcached等都是资源。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">使用资源</li>\r\n<li style=\"margin:0px;list-style:none;padding:0px;\">• 注册</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">对于一个自定义的数据类型，要想将它作为资源。首先需要进行注册，zend会为它分配全局唯一标示</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">• 获取一个资源变量</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">对于资源，zend维护了一个id-&gt;实际数据的hash_tale。对于一个resource，在zval中只记录了它的id。fetch的时候通过id在hash_table中找到具体的值返回</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">• 资源销毁</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">资源的数据类型是多种多样的。Zend本身没有办法销毁它。因此需要用户在注册资源的时候提供销毁函数。当unset资源时，zend调用相应的函数完成析构。同时从全局资源表中删除它。</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">持久化资源</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">资源可以长期驻留，不只是在所有引用它的变量超出作用域之后，甚至是在一个请求结束了并且新的请求产生之后。这些资源称为<strong>持久资源</strong>，因为它们贯通SAPI的整个生命周期持续存在，除非特意销毁。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">很多情况下，持久化资源可以在一定程度上提高性能。比如我们常见的mysql_pconnect ,持久化资源通过pemalloc分配内存，这样在请求结束的时候不会释放。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">对zend来说，对两者本身并不区分。</p>\r\n<h3 style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">Php变量的作用域</h3>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">Php中的局部变量和全局变量是如何实现的？</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对于一个请求，任意时刻php都可以看到两个符号表(symbol_table和active_symbol_table)，其中前者用来维护全局变量。后者是一个指针，指向当前活动的变量符号表，当程序进入到某个函数中时，zend就会为它分配一个符号表x同时将active_symbol_table指向a。通过这样的方式实现全局、局部变量的区分</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">获取变量值</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;php的符号表是通过hash_table实现的，对于每个变量都分配唯一标识，获取的时候根据标识从表中找到相应zval返回</p>\r\n<ul style=\"margin:0px;list-style:none;padding:0px;color:#5f5f5f;font-family:Arial, 宋体;font-size:12px;line-height:23px;\"><li style=\"margin:0px;list-style:none;padding:0px;\">函数中使用全局变量</li>\r\n</ul>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在函数中，我们可以通过显式申明global来使用全局变量。在active_symbol_table中创建symbol_table中同名变量的引用，如果symbol_table中没有同名变量则会先创建。</p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"></p>\r\n<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">【转载自：<a href=\"http://stblog.baidu-tech.com/?p=763\">http://stblog.baidu-tech.com/?p=763</a>】</p>','<p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\">作为一门动态语言，php是如何实现的，其底层机制如何，具有什么样的特点，本文深入浅出介绍了包括php设计理念、整体结构、核心数据结构和变量在内的相关底层知识，对我们更好的开发php程序，优化性能等有一定的指导意义。</p><p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font-family:Arial, 宋体;line-height:23px;\"><strong>TAG</strong></p><p style=\"margin-bottom:0px;list-style:none;padding:0px 0px 5px;font-size:14px;color:#5f5f5f;font','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(177,'PHP之Traits','<p>&nbsp;&nbsp;&nbsp;&nbsp;在PHP5.4.0之后，实现了一个代码重用的方法--Traits（特性）</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Traits是一种在单继承语言中实现代码重用的机制。Traits通过允许开发人员重用在不同继承树中的多个独立的类中的方法，减少了单继承的限制。它通过定义一种方法去定义了类和Traits的组合的语义，减少了使用的复杂性，也避免了与多继承和代码混入相关的一系列问题。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Traits与类很相似，但是只是实现了在其中定义一组功能，与类不同的是，不能够对Traits进行实例化。Traits是对传统的继承的一种额外的补充，使得我们能够不使用继承而共享方法。</p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">&lt;?php\r\n\r\ntrait SecurityDev{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//安全人员掌握的技能\r\n	function sqlInjection(){\r\n		print(\"I can Sql Injection&lt;br /&gt;\");\r\n	}\r\n	function findBugs(){\r\n		print(\"I can find bugs&lt;br /&gt;\");\r\n	}\r\n	function dDos(){\r\n		print(\"I can attack some websites by DDOS&lt;br /&gt;\");\r\n	}\r\n	\r\n}\r\n\r\ntrait WebDev {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//web开发者掌握的技能\r\n	function phpProgramming(){\r\n		print(\"php Programming&lt;br /&gt;\");\r\n	}\r\n	function javaProgramming(){\r\n		print(\"java Programming&lt;br /&gt;\");\r\n	}\r\n	function usingHtml(){\r\n		print(\"html design&lt;br /&gt;\");\r\n	}\r\n}\r\nclass Human{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//一个人类掌握的技能\r\n\r\n	public function eat(){\r\n		print(\"I can eat!&lt;br /&gt;\");\r\n	}\r\n	public function run(){\r\n		print(\"I can run!&lt;br /&gt;\");\r\n	}\r\n}\r\n\r\nclass Programmer extends Human{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//一个掌握了安全技能以及web开发技能的人类（程序员）\r\n	use SecurityDev , WebDev;	       //使用多个Traits，可以用，隔开。\r\n	\r\n	function writeBlog(){\r\n		print(\"I hava a blog&lt;br /&gt;\");\r\n	}\r\n}\r\n\r\n\r\n\r\n\r\n$programmer = new Programmer();\r\n\r\n$programmer-&gt;eat();\r\n$programmer-&gt;run();\r\n\r\n$programmer-&gt;writeBlog();\r\n\r\n$programmer-&gt;usingHtml();\r\n$programmer-&gt;sqlInjection();</pre><p><span style=\"color:#999999;\">输出：</span></p>\r\n<p><span style=\"font-family:Simsun;font-size:14px;line-height:normal;color:#999999;\">I can eat!</span><br style=\"font-family:Simsun;font-size:medium;line-height:normal;\" />\r\n<span style=\"font-family:Simsun;font-size:14px;line-height:normal;color:#999999;\">I can run!</span><br style=\"font-family:Simsun;font-size:medium;line-height:normal;\" />\r\n<span style=\"font-family:Simsun;font-size:14px;line-height:normal;color:#999999;\">I hava a blog</span><br style=\"font-family:Simsun;font-size:medium;line-height:normal;\" />\r\n<span style=\"font-family:Simsun;font-size:14px;line-height:normal;color:#999999;\">html design</span><br style=\"font-family:Simsun;font-size:medium;line-height:normal;\" />\r\n<span style=\"font-family:Simsun;font-size:14px;line-height:normal;color:#999999;\">I can Sql Injection</span></p>\r\n&nbsp;&nbsp;&nbsp;&nbsp;在优先级上，如果子类使用的Traits中存在于基类中相同的方法，则Traits中的方法将会覆写基类的方法。如果子类中有与Traits中同名方法，子类优先。<p></p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">class Base{\r\n	public function sayHello(){\r\n		echo \'Hello , \';\r\n	}\r\n}\r\n\r\ntrait SayHello {\r\n	public function sayHello(){\r\n		parent::sayHello();\r\n		echo \'world\';\r\n	}\r\n}\r\n\r\nclass MyHelloWorld extends Base{\r\n	use SayHello;\r\n}\r\n\r\n\r\n$o = new MyHelloWorld();\r\n$o-&gt;sayHello();</pre><span style=\"color:#999999;\">输出：</span><p></p>\r\n<span style=\"color:#999999;\"> </span><p><span style=\"color:#999999;\">Hello , world</span></p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">trait HelloWorld{\r\n	public function sayHello(){\r\n		echo \"Hello ,world\";\r\n	}\r\n}\r\n\r\nclass TheWorldIsNotEnough{\r\n	use HelloWorld;\r\n	function sayHello(){\r\n		echo \"Hello ,University of JiNan\";\r\n	}\r\n}\r\n\r\n$o = new TheWorldIsNotEnough();\r\n$o-&gt;sayHello();</pre><span style=\"color:#999999;\">输出：</span><p></p>\r\n<p><span style=\"color:#999999;\">Hello ,University of JiNan</span></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;当一个类引入多个Traits时，如果在多个Traits中存在同名的方法，将会产生一个fatal的错误。</p>\r\n<p><b>Fatal error</b>: Trait method Hello has not been applied, because there are \r\ncollisions with other trait methods on Test in <b>D:\\xampp\\htdocs\\test\\Traits\\traits_3.php</b> on line <b>29</b></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;为了解决这个命名的冲突，可以使用insteadof操作符，如果连个都想用，可以配合as使用</p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">trait Trait_1{\r\n	\r\n	function Hello(){\r\n		echo \"Trait_1 hello\";\r\n	}\r\n}\r\n\r\ntrait Trait_2 {\r\n	function Hello(){\r\n		echo \"Trait_2 hello\";\r\n	}\r\n}\r\n\r\nclass Test{\r\n	use Trait_1 , Trait_2{\r\n		Trait_2::Hello insteadof Trait_1;\r\n	}\r\n}\r\n\r\nclass Test2{\r\n	use Trait_1, Trait_2{\r\n		Trait_2::Hello insteadof Trait_1;    //优先使用第2个Trait的Hello，\r\n		Trait_1::Hello as Hello2;            //使用as给第一个的Hello重命名\r\n	}\r\n}\r\n\r\n$o = new Test();\r\n$o-&gt;Hello();\r\n\r\necho \'&lt;br /&gt;\';\r\n\r\n$o2 = new Test2();\r\n$o2-&gt;Hello();\r\n\r\necho \'&lt;br /&gt;\';\r\n\r\n$o2-&gt;Hello2();</pre><p></p>\r\n<p><span style=\"color:#999999;font-size:10pt;line-height:1.5;\">输出：</span></p>\r\n<p></p>\r\n<p><span style=\"color:#999999;\">Trait_2 hello</span></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以使用as关键字改变方法的可见性。</p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">trait Trait_1 {\r\n	public function Hello (){\r\n		echo \"Hello\";\r\n	}\r\n}\r\n\r\nclass Test{\r\n	use Trait_1{\r\n		Hello as private;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//将Hello作为private方法\r\n	}\r\n	\r\n	function testTrait(){\r\n		$this-&gt;Hello();\r\n	}\r\n	\r\n}\r\n\r\necho \"&lt;pre&gt;\";\r\nReflectionClass::export(\'Test\');\r\necho \"&lt;/pre&gt;\";</pre><p>输出：</p>\r\n<p>&nbsp;<span style=\"font-family:\'Courier New\', Arial;font-size:9pt;line-height:1.5;\">Class [ </span><user style=\"font-family:\'Courier New\', Arial;font-size:9pt;line-height:1.5;\"> class Test ] {</user></p>\r\n<pre><user>  @@ D:\\xampp\\htdocs\\test\\Traits\\traits_4.php 17-26\r\n\r\n  - Constants [0] {\r\n  }\r\n\r\n  - Static properties [0] {\r\n  }\r\n\r\n  - Static methods [0] {\r\n  }\r\n\r\n  - Properties [0] {\r\n  }\r\n\r\n  - Methods [2] {\r\n    Method [ <user> public method testTrait ] {\r\n      @@ D:\\xampp\\htdocs\\test\\Traits\\traits_4.php 22 - 24\r\n    }\r\n\r\n    Method [ <user> private method Hello ] {                              //私有的\r\n      @@ D:\\xampp\\htdocs\\test\\Traits\\traits_4.php 12 - 14\r\n    }\r\n  }\r\n}</user></user></user></pre> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不仅仅是类可以使用traits，Traits也可以使用，使用方法跟类是相同的。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Traits支持使用abstract方法，使用带有abstract方法的类必须实现该抽象方法才能实例化，否则作为抽象类。</p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">trait Trait_1 {\r\n	public function Hello (){\r\n		echo \"Hello\";\r\n	}\r\n	public abstract function abstractHello();\r\n}</pre>&nbsp;&nbsp;&nbsp;&nbsp;静态方法也是支持的，这里不再赘述了，下面是手册上的例子。<p></p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">&lt;?php\r\ntrait Counter {\r\n    public function inc() {\r\n        static $c = 0;\r\n        $c = $c + 1;\r\n        echo \"$c\\n\";\r\n    }\r\n}\r\n\r\nclass C1 {\r\n    use Counter;\r\n}\r\n\r\nclass C2 {\r\n    use Counter;\r\n}\r\n\r\n$o = new C1(); $o-&gt;inc(); // echo 1\r\n$p = new C2(); $p-&gt;inc(); // echo 1\r\n?&gt; </pre><pre class=\"brush:php; toolbar: true; auto-links: true;\">&lt;?php\r\ntrait StaticExample {\r\n    public static function doSomething() {\r\n        return \'Doing something\';\r\n    }\r\n}\r\n\r\nclass Example {\r\n    use StaticExample;\r\n}\r\n\r\nExample::doSomething();\r\n?&gt; </pre>&nbsp;&nbsp;&nbsp;&nbsp;属性也是可以定义的，如果在Traits中定义了一个属性，那么使用它的类中就不能再定义相同的属性了，否则会报错的。<p></p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">&lt;?php\r\ntrait PropertiesTrait {\r\n	public $same = true;\r\n	public $different = false;\r\n}\r\n\r\nclass PropertiesExample {\r\n	use PropertiesTrait;\r\n	public $same = true; // Strict Standards\r\n	public $different = true; // Fatal error\r\n}\r\n?&gt;</pre><p></p>\r\n<p></p>\r\n<p>&nbsp;报错：</p>\r\n<p><b>Strict Standards</b>: PropertiesExample and PropertiesTrait define the same \r\nproperty ($same) in the composition of PropertiesExample. This might be \r\nincompatible, to improve maintainability consider using accessor methods in \r\ntraits instead. Class was composed in <b>D:\\xampp\\htdocs\\test\\Traits\\traits_5.php</b> on line <b>11</b><br />\r\n<br />\r\n<b>Fatal error</b>: PropertiesExample and PropertiesTrait \r\ndefine the same property ($different) in the composition of PropertiesExample. \r\nHowever, the definition differs and is considered incompatible. Class was \r\ncomposed in <b>D:\\xampp\\htdocs\\test\\Traits\\traits_5.php</b> on line <b>11</b></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>','<p>在PHP5.4.0之后，实现了一个代码重用的方法--Traits（特性）</p>\r\n<p>Traits是一种在单继承语言中实现代码重用的机制。Traits通过允许开发人员重用在不同继承树中的多个独立的类中的方法，减少了单继承的限制。它通过定义一种方法去定义了类和Traits的组合的语义，减少了使用的复杂性，也避免了与多继承和代码混入相关的一系列问题。</p>\r\n<p>Traits与类很相似，但是只是实现了在其中定义一组功能，与类不同的是，不能够对Traits进行实例化。Traits是对传统的继承的一种额外的补充，使得我们能够不使用继承而共享方法。</p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">&lt;?php\r\n\r\ntrait SecurityDev{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(178,'PHP之错误处理','<p>使用set_error_handler()函数，设置一个错误处理函数取代默认的错误处理方式。</p>\r\n<p>默认情况下，如果出错</p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">strpos();</pre><p></p>\r\n<p>报错：</p>\r\n<p><b>Warning</b>: strpos() expects at least 2 parameters, 0 given in&nbsp;<b>D:\\xampp\\htdocs\\test\\exception\\error_handler.php</b>on line&nbsp;<b>20</b></p>\r\n<p>设置错误处理函数：</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">function exception_error_handler($errno, $errstr , $errfile ,$errline){\r\n	//throw new ErrorException($errstr , 0 , $errno , $errfile ,$errline);\r\n	\r\n	echo \"出错了\";\r\n}\r\n\r\nset_error_handler(\'exception_error_handler\');\r\n\r\n//try{\r\n	strpos();\r\n//}catch(ErrorException $e){\r\n//	echo $e-&gt;getMessage();\r\n//}</pre>结果：</p>\r\n<p>出错了</p>\r\n<p>&nbsp;</p>\r\n<p>可以在错误处理函数中进行个性化的错误处理，或者是抛出错误异常ErrorException，见代码注释。</p>\r\n<p>&nbsp;</p>','<p>使用set_error_handler()函数，设置一个错误处理函数取代默认的错误处理方式。</p><p>默认情况下，如果出错</p><pre class=\"brush:php; toolbar: true; auto-links: true;\">strpos();</pre><p>报错：</p><p><b>Warning</b>: strpos() expects at least 2 parameters, 0 given in&nbsp;<b>D:\\xampp\\htdocs\\test\\exception\\error_handler.php</b>on line&nbsp;<b>20</b></p><p>设置错误处理函数：</p><p><pre class=\"brush:php; toolbar: true; auto-links: true;\">function exception_error_handler($errno, $errstr , $errfile ,$errline){\r\n	//throw new ErrorException($errstr , 0 , $','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(179,'Vim编辑器常用操作学习','<p>&nbsp;没有vim编辑器先安装，yum install vim*</p>\r\n<p>&nbsp;</p>\r\n<p>学习vim基本使用，不需要参考任何图书，文档，只需要安装vim后，使用vimtutor命令，即可进入学习。</p>\r\n<p></p>\r\n<pre class=\"brush:shell; toolbar: true; auto-links: true;\">[mylxsw@localhost src]$ vimtutor</pre>进入后，就可以开始学习了。<p></p>\r\n<p>学完整个Tutor大约需要20~30分钟左右，</p>\r\n<p>&nbsp;<a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/2ace7e0ddc324f941d9408346ec0013220121108121433.jpg\" id=\"ematt:10\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/2ace7e0ddc324f941d9408346ec0013220121108121433.jpg\" alt=\"点击查看原图\" border=\"0\" /></a></p>\r\n<p>下面这些是每一章后面的总结，具体学习，请直接使用命令操作，不要去看，一定要按照要求操作。</p>\r\n<p>第一课：</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">                               Lesson 1 SUMMARY\r\n\r\n\r\n  1. The cursor is moved using either the arrow keys or the hjkl keys.\r\n         h (left)       j (down)       k (up)       l (right)\r\n\r\n  2. To start Vim from the shell prompt type:  vim FILENAME &lt;ENTER&gt;\r\n\r\n  3. To exit Vim type:     &lt;ESC&gt;   :q!   &lt;ENTER&gt;  to trash all changes.\r\n             OR type:      &lt;ESC&gt;   :wq   &lt;ENTER&gt;  to save the changes.\r\n\r\n  4. To delete the character at the cursor type:  x\r\n\r\n  5. To insert or append text type:\r\n         i   type inserted text   &lt;ESC&gt;         insert before the cursor\r\n         A   type appended text   &lt;ESC&gt;         append after the line\r\n\r\nNOTE: Pressing &lt;ESC&gt; will place you in Normal mode or will cancel\r\n      an unwanted and partially completed command.</pre>第二课：</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">                               Lesson 2 SUMMARY\r\n\r\n\r\n  1. To delete from the cursor up to the next word type:    dw\r\n  2. To delete from the cursor to the end of a line type:    d$\r\n  3. To delete a whole line type:    dd\r\n\r\n  4. To repeat a motion prepend it with a number:   2w\r\n  5. The format for a change command is:\r\n               operator   [number]   motion\r\n     where:\r\n       operator - is what to do, such as  d  for delete\r\n       [number] - is an optional count to repeat the motion\r\n       motion   - moves over the text to operate on, such as  w (word),\r\n                  $ (to the end of line), etc.\r\n\r\n  6. To move to the start of the line use a zero:  0\r\n\r\n  7. To undo previous actions, type:           u  (lowercase u)\r\n     To undo all the changes on a line, type:  U  (capital U)\r\n     To undo the undo\'s, type:                 CTRL-R</pre>第三课：</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">                               Lesson 3 SUMMARY\r\n\r\n\r\n  1. To put back text that has just been deleted, type   p .  This puts the\r\n     deleted text AFTER the cursor (if a line was deleted it will go on the\r\n     line below the cursor).\r\n\r\n  2. To replace the character under the cursor, type   r   and then the\r\n     character you want to have there.\r\n\r\n  3. The change operator allows you to change from the cursor to where the\r\n     motion takes you.  eg. Type  ce  to change from the cursor to the end of\r\n     the word,  c$  to change to the end of a line.\r\n\r\n  4. The format for change is:\r\n\r\n         c   [number]   motion</pre>第四课：</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">                               Lesson 4 SUMMARY\r\n\r\n\r\n  1. CTRL-G  displays your location in the file and the file status.\r\n             G  moves to the end of the file.\r\n     number  G  moves to that line number.\r\n            gg  moves to the first line.\r\n\r\n  2. Typing  /  followed by a phrase searches FORWARD for the phrase.\r\n     Typing  ?  followed by a phrase searches BACKWARD for the phrase.\r\n     After a search type  n  to find the next occurrence in the same direction\r\n     or  N  to search in the opposite direction.\r\n     CTRL-O takes you back to older positions, CTRL-I to newer positions.\r\n\r\n  3. Typing  %  while the cursor is on a (,),[,],{, or } goes to its match.\r\n\r\n  4. To substitute new for the first old in a line type    :s/old/new\r\n     To substitute new for all \'old\'s on a line type       :s/old/new/g\r\n     To substitute phrases between two line #\'s type       :#,#s/old/new/g\r\n     To substitute all occurrences in the file type        :%s/old/new/g\r\n     To ask for confirmation each time add \'c\'             :%s/old/new/gc</pre>第五课：</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">                               Lesson 5 SUMMARY\r\n\r\n\r\n  1.  :!command  executes an external command.\r\n\r\n      Some useful examples are:\r\n         (MS-DOS)         (Unix)\r\n          :!dir            :!ls            -  shows a directory listing.\r\n          :!del FILENAME   :!rm FILENAME   -  removes file FILENAME.\r\n\r\n  2.  :w FILENAME  writes the current Vim file to disk with name FILENAME.\r\n\r\n  3.  v  motion  :w FILENAME  saves the Visually selected lines in file\r\n      FILENAME.\r\n\r\n  4.  :r FILENAME  retrieves disk file FILENAME and puts it below the\r\n      cursor position.\r\n\r\n  5.  :r !dir  reads the output of the dir command and puts it below the\r\n      cursor position.</pre>第六课：</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">                               Lesson 6 SUMMARY\r\n\r\n  1. Type  o  to open a line BELOW the cursor and start Insert mode.\r\n     Type  O  to open a line ABOVE the cursor.\r\n\r\n  2. Type  a  to insert text AFTER the cursor.\r\n     Type  A  to insert text after the end of the line.\r\n\r\n  3. The  e  command moves to the end of a word.\r\n\r\n  4. The  y  operator yanks (copies) text,  p  puts (pastes) it.\r\n\r\n  5. Typing a capital  R  enters Replace mode until  &lt;ESC&gt;  is pressed.\r\n\r\n  6. Typing \":set xxx\" sets the option \"xxx\".  Some options are:\r\n        \'ic\' \'ignorecase\'       ignore upper/lower case when searching\r\n        \'is\' \'incsearch\'        show partial matches for a search phrase\r\n        \'hls\' \'hlsearch\'        highlight all matching phrases\r\n     You can either use the long or the short option name.\r\n\r\n  7. Prepend \"no\" to switch an option off:   :set noic</pre>第七课：</p>\r\n<p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">                               Lesson 7 SUMMARY\r\n\r\n\r\n  1. Type  :help  or press &lt;F1&gt; or &lt;Help&gt;  to open a help window.\r\n\r\n  2. Type  :help cmd  to find help on  cmd .\r\n\r\n  3. Type  CTRL-W CTRL-W  to jump to another window\r\n\r\n  4. Type  :q  to close the help window\r\n\r\n  5. Create a vimrc startup script to keep your preferred settings.\r\n\r\n  6. When typing a  :  command, press CTRL-D to see possible completions.\r\n     Press &lt;TAB&gt; to use one completion.</pre></p>\r\n<p>&nbsp;</p>','<p>&nbsp;没有vim编辑器先安装，yum install vim*</p><p>&nbsp;</p><p>学习vim基本使用，不需要参考任何图书，文档，只需要安装vim后，使用vimtutor命令，即可进入学习。</p><pre class=\"brush:shell; toolbar: true; auto-links: true;\">[mylxsw@localhost src]$ vimtutor</pre>进入后，就可以开始学习了。<p>学完整个Tutor大约需要20~30分钟左右，</p><p>&nbsp;<a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/2ace7e0ddc324f941d9408346ec0013220121108121433.jpg\" id=\"ematt:10\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201211/2ace7e0d','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(180,'【转】 Linux下的makefile教程','<p><span style=\"font-family:\'Verdana, Geneva, Arial, Helvetica, sans-serif\';\"><span style=\"line-height:18px;\">【本文转载自CSDN:&nbsp;<a href=\"http://blog.csdn.net/haoel/article/details/2886\" target=\"_blank\">http://blog.csdn.net/haoel/article/details/2886</a></span></span><span style=\"line-height:18px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;font-size:10pt;\">】</span></p>\r\n<p><span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\"><br />\r\n</span></p>\r\n<p><span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">概述</span></p>\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">——</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">什么是makefile？或许很多Winodws的程序员都不知道这个东西，因为那些Windows的IDE都</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">为你做了这个工作，但我觉得要作一个好的和 professional的程序员，makefile还是要懂</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">。这就好像现在有这么多的HTML的编辑器，但如果你想成为一个专业人士，你还是要了解</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">HTML的标识的含义。特别在Unix下的软件编译，你就不能不自己写makefile了，会不会写</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">makefile，从一个侧面说明了一个人是否具备完成大型工程的能力。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">因为，makefile关系到了整个工程的编译规则。一个工程中的源文件不计数，其按类型、</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">功能、模块分别放在若干个目录中，makefile定义了一系列的规则来指定，哪些文件需要</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">先编译，哪些文件需要后编译，哪些文件需要重新编译，甚至于进行更复杂的功能操作，</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">因为 makefile就像一个Shell脚本一样，其中也可以执行操作系统的命令。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">makefile带来的好处就是——“自动化编译”，一旦写好，只需要一个make命令，整个工</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">程完全自动编译，极大的提高了软件开发的效率。make是一个命令工具，是一个解释make</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">file中指令的命令工具，一般来说，大多数的IDE都有这个命令，比如：Delphi的make，V</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">isual C++的nmake，Linux下GNU的make。可见，makefile都成为了一种在工程方面的编译</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">方法。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">现在讲述如何写 makefile的文章比较少，这是我想写这篇文章的原因。当然，不同厂商的</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">make各不相同，也有不同的语法，但其本质都是在“文件依赖性”上做文章，这里，我仅</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">对GNU的make进行讲述，我的环境是RedHat Linux 8.0，make的版本是3.80。必竟，这个m</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">ake是应用最为广泛的，也是用得最多的。而且其还是最遵循于IEEE 1003.2-1992 标准的</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">（POSIX.2）。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">在这篇文档中，将以C/C++的源码作为我们基础，所以必然涉及一些关于C/C++的编译的知</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">识，相关于这方面的内容，还请各位查看相关的编译器的文档。这里所默认的编译器是UN</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">IX下的GCC和CC。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">关于程序的编译和链接</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">——————————</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">在此，我想多说关于程序编译的一些规范和方法，一般来说，无论是C、C++、还是pas，首</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">先要把源文件编译成中间代码文件，在Windows下也就是 .obj 文件，UNIX下是 .o 文件，</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">即 Object File，这个动作叫做编译（compile）。然后再把大量的Object File合成执行</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">文件，这个动作叫作链接（link）。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">编译时，编译器需要的是语法的正确，函数与变量的声明的正确。对于后者，通常是你需</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">要告诉编译器头文件的所在位置（头文件中应该只是声明，而定义应该放在C/C++文件中）</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">，只要所有的语法正确，编译器就可以编译出中间目标文件。一般来说，每个源文件都应</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">该对应于一个中间目标文件（O文件或是OBJ文件）。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">链接时，主要是链接函数和全局变量，所以，我们可以使用这些中间目标文件（O文件或是</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">OBJ文件）来链接我们的应用程序。链接器并不管函数所在的源文件，只管函数的中间目标</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">文件（Object File），在大多数时候，由于源文件太多，编译生成的中间目标文件太多，</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">而在链接时需要明显地指出中间目标文件名，这对于编译很不方便，所以，我们要给中间</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">目标文件打个包，在Windows下这种包叫“库文件”（Library File)，也就是 .lib 文件</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">，在UNIX下，是Archive File，也就是 .a 文件。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">总结一下，源文件首先会生成中间目标文件，再由中间目标文件生成执行文件。在编译时</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">，编译器只检测程序语法，和函数、变量是否被声明。如果函数未被声明，编译器会给出</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">一个警告，但可以生成Object File。而在链接程序时，链接器会在所有的Object File中</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">找寻函数的实现，如果找不到，那到就会报链接错误码（Linker Error），在VC下，这种</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">错误一般是：Link 2001错误，意思说是说，链接器未能找到函数的实现。你需要指定函数</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">的Object File.</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">好，言归正传，GNU的make有许多的内容，闲言少叙，还是让我们开始吧。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">Makefile 介绍</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">———————</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">make命令执行时，需要一个 Makefile 文件，以告诉make命令需要怎么样的去编译和链接</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">程序。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">首先，我们用一个示例来说明Makefile的书写规则。以便给大家一个感兴认识。这个示例</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">来源于GNU的make使用手册，在这个示例中，我们的工程有8个C文件，和3个头文件，我们</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">要写一个Makefile来告诉make命令如何编译和链接这几个文件。</span><span style=\"line-height:1.5;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:#fa0413;\">我们的规则是：<br />\r\n1）如果这个工程没有编译过，那么我们的所有C文件都要编译并被链接。<br />\r\n2）如果这个工程的某几个C文件被修改，那么我们只编译被修改的C文件，并链接目标程序<br />\r\n。<br />\r\n3）如果这个工程的头文件被改变了，那么我们需要编译引用了这个头文件的所有C文件，并<br />\r\n链接目标程序。<br />\r\n</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">只要我们的Makefile写得够好，所有的这一切，我们只用一个make命令就可以完成，make</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">命令会自动智能地根据当前的文件修改的情况来确定哪些文件需要重编译，从而自己编译</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">所需要的文件和链接目标程序。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">一、Makefile的规则</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">在讲述这个Makefile之前，还是让我们先来粗略地看一看Makefile的规则。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">target ... : prerequisites ...</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">command</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">...</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">...</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">target也就是一个目标文件，可以是Object File，也可以是执行文件。还可以是一个标签</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">（Label），对于标签这种特性，在后续的“伪目标”章节中会有叙述。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">prerequisites就是，要生成那个target所需要的文件或是目标。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">command也就是make需要执行的命令。（任意的Shell命令）</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">这是一个文件的依赖关系，也就是说，</span><span style=\"line-height:1.5;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:#fa0413;\">target这一个或多个的目标文件依赖于prerequisi<br />\r\ntes中的文件，其生成规则定义在command中。说白一点就是说，prerequisites中如果有一<br />\r\n个以上的文件比target文件要新的话，command所定义的命令就会被执行。这就是 Makefi<br />\r\nle的规则。也就是Makefile中最核心的内容。<br />\r\n</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">说到底，Makefile的东西就是这样一点，好像我的这篇文档也该结束了。呵呵。还不尽然</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">，这是Makefile的主线和核心，但要写好一个Makefile还不够，我会以后面一点一点地结</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">合我的工作经验给你慢慢到来。内容还多着呢。：）</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">二、一个示例</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">正如前面所说的，如果一个工程有3个头文件，和8个C文件，我们为了完成前面所述的那三</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">个规则，我们的Makefile应该是下面的这个样子的。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">edit : main.o kbd.o command.o display.o \\</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">insert.o search.o files.o utils.o</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">cc -o edit main.o kbd.o command.o display.o \\</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">insert.o search.o files.o utils.o</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">main.o : main.c defs.h</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">cc -c main.c</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">kbd.o : kbd.c defs.h command.h</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">cc -c kbd.c</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">command.o : command.c defs.h command.h</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">cc -c command.c</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">display.o : display.c defs.h buffer.h</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">cc -c display.c</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">insert.o : insert.c defs.h buffer.h</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">cc -c insert.c</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">search.o : search.c defs.h buffer.h</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">cc -c search.c</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">files.o : files.c defs.h buffer.h command.h</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">cc -c files.c</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">utils.o : utils.c defs.h</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">cc -c utils.c</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">clean :</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">rm edit main.o kbd.o command.o display.o \\</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">insert.o search.o files.o utils.o</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">反斜杠（\\）是换行符的意思。这样比较便于Makefile的易读。我们可以把这个内容保存在</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">文件为“Makefile”或“makefile”的文件中，然后在该目录下直接输入命令“make”就</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">可以生成执行文件edit。如果要删除执行文件和所有的中间目标文件，那么，只要简单地</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">执行一下“make clean”就可以了。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">在这个makefile中，目标文件（target）包含：执行文件edit和中间目标文件（*.o），依</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">赖文件（prerequisites）就是冒号后面的那些 .c 文件和 .h文件。每一个 .o 文件都有</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">一组依赖文件，而这些 .o 文件又是执行文件 edit 的依赖文件。依赖关系的实质上就是</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">说明了目标文件是由哪些文件生成的，换言之，目标文件是哪些文件更新的。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">在定义好依赖关系后，后续的那一行定义了如何生成目标文件的操作系统命令，一定要以</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">一个Tab键作为开头。记住，make并不管命令是怎么工作的，他只管执行所定义的命令。m</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">ake会比较targets文件和prerequisites文件的修改日期，如果prerequisites文件的日期</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">要比targets文件的日期要新，或者target不存在的话，那么，make就会执行后续定义的命</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">令。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">这里要说明一点的是，clean不是一个文件，它只不过是一个动作名字，有点像C语言中的</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">lable一样，其冒号后什么也没有，那么，make就不会自动去找文件的依赖性，也就不会自</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">动执行其后所定义的命令。要执行其后的命令，就要在make命令后明显得指出这个lable的</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">名字。这样的方法非常有用，我们可以在一个makefile中定义不用的编译或是和编译无关</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">的命令，比如程序的打包，程序的备份，等等。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">三、make是如何工作的</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">在默认的方式下，也就是我们只输入make命令。那么，</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">1、make会在当前目录下找名字叫“Makefile”或“makefile”的文件。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">2、如果找到，它会找文件中的第一个目标文件（target），在上面的例子中，他会找到“</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">edit”这个文件，并把这个文件作为最终的目标文件。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">3、如果edit文件不存在，或是edit所依赖的后面的 .o 文件的文件修改时间要比edit这个</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">文件新，那么，他就会执行后面所定义的命令来生成edit这个文件。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">4、如果edit所依赖的.o文件也不存在，那么make会在当前文件中找目标为.o文件的依赖性</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">，如果找到则再根据那一个规则生成.o文件。（这有点像一个堆栈的过程）</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">5、当然，你的C文件和H文件是存在的啦，于是make会生成 .o 文件，然后再用 .o 文件生</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">命make的终极任务，也就是执行文件edit了。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">这就是整个make的依赖性，make会一层又一层地去找文件的依赖关系，直到最终编译出第</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">一个目标文件。在找寻的过程中，如果出现错误，比如最后被依赖的文件找不到，那么ma</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">ke就会直接退出，并报错，而对于所定义的命令的错误，或是编译不成功，make根本不理</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">。make只管文件的依赖性，即，如果在我找了依赖关系之后，冒号后面的文件还是不在，</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">那么对不起，我就不工作啦。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">通过上述分析，我们知道，像clean这种，没有被第一个目标文件直接或间接关联，那么它</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">后面所定义的命令将不会被自动执行，不过，我们可以显示要make执行。即命令——“ma</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">ke clean”，以此来清除所有的目标文件，以便重编译。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">于是在我们编程中，如果这个工程已被编译过了，当我们修改了其中一个源文件，比如fi</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">le.c，那么根据我们的依赖性，我们的目标file.o会被重编译（也就是在这个依性关系后</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">面所定义的命令），于是file.o的文件也是最新的啦，于是file.o的文件修改时间要比ed</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">it要新，所以edit也会被重新链接了（详见edit目标文件后定义的命令）。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">而如果我们改变了“command.h”，那么，kdb.o、command.o和files.o都会被重编译，并</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\">且，edit会被重链接。</span><br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\" />\r\n<br style=\"font-family:Verdana, Geneva','<p><span style=\"font-family:\'Verdana, Geneva, Arial, Helvetica, sans-serif\';\"><span style=\"line-height:18px;\">【本文转载自CSDN:&nbsp;<a href=\"http://blog.csdn.net/haoel/article/details/2886\" target=\"_blank\">http://blog.csdn.net/haoel/article/details/2886</a></span></span><span style=\"line-height:18px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;font-size:10pt;\">】</span></p><p><span style=\"font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;line-height:18px;\"><br /></span></p><p><spa','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(181,'【转载】15分钟的效率法则','<hr style=\"border-style:dashed;border-color:#dddddd;border-right-width:0px;border-bottom-width:0px;border-left-width:0px;clear:both;margin:12px 0px 18px;height:0px;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;line-height:18px;\" />\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\"><a href=\"http://www.36kr.com/p/168944.html/15_min\" rel=\"attachment wp-att-169068\" style=\"margin:0px;padding:0px;border:0px;font:inherit;vertical-align:baseline;color:#2a85e8;text-decoration:initial;outline:0px;line-height:inherit;\"><img class=\"size-full wp-image-169068 aligncenter\" title=\"15_min\" src=\"http://img01.36krcnd.com/wp-content/uploads/2012/11/15_min.png\" alt=\"\" width=\"299\" height=\"300\" style=\"margin:0px auto;padding:0px;border:0px;font:inherit;vertical-align:baseline;max-width:100%;height:auto;text-align:center;display:block;\" /></a></p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">我总是拖延。我会把一件要做的事拖到最后一刻才开始。我还学会了用后期的超高效来弥补之前的拖延，反正我最终我总能在deadline之前完成它！但我知道我的问题就出在：当我坐下开始工作时，我总是先去做一些其他无关紧要的事。我把这种称为轻态拖延，很可能你也是这样，它有以下“症状”：坐下来开始工作前，总是习惯先上微博或者浏览其他好玩的网站；总告诉自己说开工前有10分钟的让自己放松的时间；总会先去做那些很琐碎且不太重要的事，比如查邮箱等等。</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">最后我就有了这个定式行为：坐在桌前，一般半小时或一个小时后才会真正开始工作。而一旦我真的开始了，就会发现没有什么能让我再分心，会顺利地完成工作。我开始意识到无论是写博客还是写代码我都会遵循这种行为模式。一旦我投入十五分钟，就能一直专心完成工作。</p>\r\n<h4 style=\"margin:0px 0px 3px;padding:0px;border:0px;font:inherit;vertical-align:baseline;color:#181818;line-height:1.25;font-size:2.1rem;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">于是15分钟法则就诞生了</h4>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">我决定做点小试验。下一次我开始工作时，强迫自己不像往常一样先去做类似查邮件那样琐碎的事，而是按下面的步骤：</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">1.选出一件自己要做的正事(这会让你很明确地清楚目标)</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">2.把所有干扰项都关掉15分钟，不要让它们在这个时间段打扰你</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">3.没有干扰没有中断地做正事15分钟</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">4.15分钟后，如果我坚持不住，那我就放弃或是做其他事情</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">而结果是，我单线程地工作15分钟以后，我肯定就不想停下来。即便是那些我原先一点动力都没有的事，在沉浸了15分钟以后，我也变得乐意去完成它了。就像读完书的前几章，你就会渐渐入境，很想把后面的章节也读完。</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">我也试过其他摆脱拖延提高效率的方法，它们对我就不是那么管用。对我来说，有以下几个问题：</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">1.它们过于复杂，且要求100%投入(这入门可真高)</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">2.它们一般只强调效率啊，任务优先级啊，而不说具体的流程</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">3.它们总是假设人们都是那种可以一坐下来就开始专心工作的人(而这对我来说则很难)</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">我也是那种热衷和推崇时间管理的人，那些建议确实不错，但它不适合我。我的生活每天日程其实很多项目都是确定的，我差不多都能了解我每天每个小时该做什么事情。这种情况下，我的问题就不是要挑出我要做什么事，而是怎样高效不拖延地做事。</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">我上面的方法就很类似<a href=\"http://baike.baidu.com/view/5259318.htm\" rel=\"external nofollow\" target=\"_blank\" style=\"margin:0px;padding:0px;border:0px;font:inherit;vertical-align:baseline;color:#2a85e8;text-decoration:initial;outline:0px;line-height:inherit;\">番茄工作法</a>。我之前内心有点抵触它，因为觉得自己没有能力专注那么长时间(25分钟)，于是我就缩短了时间段，压成15分钟。</p>\r\n<h4 style=\"margin:0px 0px 3px;padding:0px;border:0px;font:inherit;vertical-align:baseline;color:#181818;line-height:1.25;font-size:2.1rem;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">为什么这个方法会奏效？</h4>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">我想最主要的原因是因为它让我有了一种积极的势头。也就是说当你连着15分钟做一件事后，就很难变向去其他道路。专注也是这15分钟法则的核心。分心好像就是人们的本性，就像你在读这篇文章时很可能中途会切换到其他标签页去看别的东西。于是我只能强迫自己在一定时间段内专注单件事情，将那个分心的小火苗掐灭。</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">总之这个方法让我能够专注，不被其他事情干扰。而且它也不会让我有太多压力，我只知道我就工作15分钟，而不会给自己设定太多的进展要求。</p>\r\n<h4 style=\"margin:0px 0px 3px;padding:0px;border:0px;font:inherit;vertical-align:baseline;color:#181818;line-height:1.25;font-size:2.1rem;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">怎样运用这个方法</h4>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">1.在做事前关掉所有其他的干扰，比如说关掉无关的标签页或是关掉手机。</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">2.关掉干扰还不够，你还得让自己专心</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">3.立即动手，不要多想。我知道想也是“做”的一部分，但在你思考时思绪会随处飘荡。你可以先直接写出一个草稿，而不要想太多，后续再一版一版地迭代。</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">4.如果你觉得你很难开始动手，那你可以用头脑风暴来替代“动手”。但必须是写出想法或是画思维导图的形式，而不是只有脑子在活动。</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">5.如果15分钟以后你坚持不了，那就放弃。休息一会再回来。</p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">via &nbsp;<a href=\"http://simpleprogrammer.com/2012/10/28/my-15-minute-rule-to-productivity/\" rel=\"external nofollow\" target=\"_blank\" style=\"margin:0px;padding:0px;border:0px;font:inherit;vertical-align:baseline;color:#2a85e8;text-decoration:initial;outline:0px;line-height:inherit;\">John Sonmez</a></p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\"></p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\"></p>\r\n<p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;\">【转载自：<a href=\"http://www.36kr.com/p/168944.html\" target=\"_blank\">http://www.36kr.com/p/168944.html</a>】</p>','<hr style=\"border-style:dashed;border-color:#dddddd;border-right-width:0px;border-bottom-width:0px;border-left-width:0px;clear:both;margin:12px 0px 18px;height:0px;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Luxi Sans\', \'DejaVu Sans\', Tahoma, \'Hiragino Sans GB\', STHeiti;line-height:18px;\" /><p style=\"margin-bottom:18px;padding:0px;border:0px;font:inherit;vertical-align:baseline;line-height:26px;color:#444444;font-size:16px;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', \'Lux','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(182,'Python编码应该注意的几点规范','<ol><li><p class=\"first\"><span style=\"font-size:16px;line-height:1.5;\">Use 4-space indentation, and no tabs.</span></p>\n<p><span style=\"font-size:16px;\">4 spaces are a good compromise between small indentation (allows greater nesting depth) and large indentation (easier to read). Tabs introduce confusion, and are best left out.</span></p>\n</li>\n<li><p class=\"first\"><span style=\"font-size:16px;\">Wrap lines so that they don’t exceed 79 characters.</span></p>\n<p><span style=\"font-size:16px;\">This helps users with small displays and makes it possible to have several code files side-by-side on larger displays.</span></p>\n</li>\n<li><p class=\"first\"><span style=\"font-size:16px;\">Use blank lines to separate functions and classes, and larger blocks of code inside functions.</span></p>\n</li>\n<li><p class=\"first\"><span style=\"font-size:16px;\">When possible, put comments on a line of their own.</span></p>\n</li>\n<li><p class=\"first\"><span style=\"font-size:16px;\">Use docstrings.</span></p>\n</li>\n<li><p class=\"first\"><span style=\"font-size:16px;\">Use spaces around operators and after commas, but not directly inside bracketing constructs:</span><span style=\"font-size:16px;\">&nbsp;</span><tt class=\"docutils literal\"><span class=\"pre\" style=\"font-size:16px;\">a</span><span style=\"font-size:16px;\">&nbsp;</span><span class=\"pre\" style=\"font-size:16px;\">=</span><span style=\"font-size:16px;\">&nbsp;</span><span class=\"pre\" style=\"font-size:16px;\">f(1,</span><span style=\"font-size:16px;\">&nbsp;</span><span class=\"pre\" style=\"font-size:16px;\">2)</span><span style=\"font-size:16px;\">&nbsp;</span><span class=\"pre\" style=\"font-size:16px;\">+</span><span class=\"pre\" style=\"font-size:16px;\">g(3,</span><span style=\"font-size:16px;\">&nbsp;</span><span class=\"pre\" style=\"font-size:16px;\">4)</span></tt><span style=\"font-size:16px;\">.</span></p>\n</li>\n<li><p class=\"first\"><span style=\"font-size:16px;\">Name your classes and functions consistently; the convention is to use</span><span style=\"font-size:16px;\">&nbsp;</span><tt class=\"docutils literal\"><span style=\"font-size:16px;\">CamelCase</span></tt><span style=\"font-size:16px;\">&nbsp;</span><span style=\"font-size:16px;\">for classes and</span><tt class=\"docutils literal\"><span style=\"font-size:16px;\">lower_case_with_underscores</span></tt><span style=\"font-size:16px;\">&nbsp;</span><span style=\"font-size:16px;\">for functions and methods. Always use</span><span style=\"font-size:16px;\">&nbsp;</span><tt class=\"docutils literal\"><span style=\"font-size:16px;\">self</span></tt><span style=\"font-size:16px;\">&nbsp;</span><span style=\"font-size:16px;\">as the name for the first method argument .</span></p>\n</li>\n<li><p class=\"first\"><span style=\"font-size:16px;\">Don’t use fancy encodings if your code is meant to be used in international environments. Python’s default, UTF-8, or even plain ASCII work best in any case.</span></p>\n</li>\n<li><p class=\"first\"><span style=\"font-size:16px;\">Likewise, don’t use non-ASCII characters in identifiers if there is only the slightest chance people speaking a different language will read or maintain the code.</span></p>\n</li>\n</ol>','<ul><li><p class=\"first\"><span style=\"font-size:10pt;line-height:1.5;\">Use 4-space indentation, and no tabs.</span></p>\n<p>4 spaces are a good compromise between small indentation (allows greater \nnesting depth) and large indentation (easier to read). Tabs introduce confusion, \nand are best left out.</p>\n</li>\n<li><p class=\"first\">Wrap lines so that they don’t exceed 79 characters.</p>\n<p>This helps users with small displays and makes it possible to have several \ncode files side-by-side on large','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(183,'CodeIgniter框架 学习笔记 （8） 前端控制器','<p>&nbsp; &nbsp;CI的前端控制器也就是项目的入口文件，下面是对代码的注释翻译以及内容解析。</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">&lt;?php\r\n\r\n/*\r\n *---------------------------------------------------------------\r\n * APPLICATION ENVIRONMENT 应用程序环境\r\n *---------------------------------------------------------------\r\n *\r\n * You can load different configurations depending on your 你可以根据的的当前环境载入不同的配置\r\n * current environment. Setting the environment also influences 环境配置将会影响到诸如日志和错误报告等。\r\n * things like logging and error reporting.\r\n * \r\n * This can be set to anything, but default usage is: 可以设置为下面几个用法\r\n *\r\n *     development\r\n *     testing\r\n *     production\r\n *\r\n * NOTE: If you change these, also change the error_reporting() code below 如果你改变了这些，同时也改变了下面的error_reporting()代码\r\n *\r\n */\r\n	define(\'ENVIRONMENT\', \'development\');\r\n/*\r\n *---------------------------------------------------------------\r\n * ERROR REPORTING 错误报告\r\n *---------------------------------------------------------------\r\n *\r\n * Different environments will require different levels of error reporting. 不同的环境将会得到不同级别的错误报告\r\n * By default development will show errors but testing and live will hide them.  默认开发环境将会显示错误，但是testing和live环境将会隐藏他们\r\n */\r\n\r\nif (defined(\'ENVIRONMENT\'))\r\n{\r\n	switch (ENVIRONMENT)\r\n	{\r\n		case \'development\':\r\n			error_reporting(E_ALL);//E_ALL显示所有错误\r\n		break;\r\n	\r\n		case \'testing\':\r\n		case \'production\':\r\n			error_reporting(0);//置为0表示不显示任何错误\r\n		break;\r\n\r\n		default:\r\n			exit(\'您没有设置争取的应用程序环境.\');\r\n	}\r\n}\r\n\r\n/*\r\n *---------------------------------------------------------------\r\n * SYSTEM FOLDER NAME 框架文件目录\r\n *---------------------------------------------------------------\r\n *\r\n * This variable must contain the name of your \"system\" folder. 这个变量必须包含你的system文件夹\r\n * Include the path if the folder is not in the same  directory 如果这个文件夹不在当前目录下的话，include这个路径\r\n * as this file.\r\n *\r\n */\r\n	$system_path = \'system\';\r\n\r\n/*\r\n *---------------------------------------------------------------\r\n * APPLICATION FOLDER NAME 应用路径\r\n *---------------------------------------------------------------\r\n *\r\n * If you want this front controller to use a different \"application\" 如果你想要这个前端控制器使用不同的application文件夹，\r\n * folder then the default one you can set its name here. The folder 你可以在这里设置，这个文件夹可以被重命名或者是放到你服务器上的任意位置。\r\n * can also be renamed or relocated anywhere on your server.  If 如果这样的话，请使用完整的服务器路径。\r\n * you do, use a full server path. For more info please see the user guide:\r\n * http://codeigniter.com/user_guide/general/managing_apps.html\r\n *\r\n * NO TRAILING SLASH! 后面没有/\r\n * 可以相对当前目录，也可以是在框架目录（system）下\r\n */\r\n	$application_folder = \'application\';\r\n\r\n/*\r\n * --------------------------------------------------------------------\r\n * DEFAULT CONTROLLER 默认控制器\r\n * --------------------------------------------------------------------\r\n *\r\n * Normally you will set your default controller in the routes.php file. 通常你将会在routes.php文件中设置你默认的控制器\r\n * You can, however, force a custom routing by hard-coding a 你可以通过硬编码一个指定的控制器类或者是函数，强制使用自定义的路由\r\n * specific controller class/function here.  For most applications, you 对于大多数应用程序，你将不需要在这里设置路由，\r\n * WILL NOT set your routing here, but it\'s an option for those 但是在你想要在指定的前端控制器覆盖标准的路由的时候，这是可选的。\r\n * special instances where you might want to override the standard\r\n * routing in a specific front controller that shares a common CI installation.\r\n *\r\n * IMPORTANT:  If you set the routing here, NO OTHER controller will be 如果你在这里设置了路由，其他的控制器将不会被调用。\r\n * callable. In essence, this preference limits your application to ONE 本质上，这些编号设置限制了你的应用程序到一个指定的控制器。\r\n * specific controller.  Leave the function name blank if you need 如果你需要通过URI动态的调用函数的话，把这个函数名留空\r\n * to call functions dynamically via the URI.\r\n *\r\n * Un-comment the $routing array below to use this feature\r\n *\r\n */\r\n	// The directory name, relative to the \"controllers\" folder.  Leave blank 目录名（相对于controllers文件夹）\r\n	// if your controller is not in a sub-folder within the \"controllers\" folder 如果你的控制器不在你的controllers文件夹下的子目录中的话，请留空\r\n	// $routing[\'directory\'] = \'\';\r\n\r\n	// The controller class file name.  Example:  Mycontroller 控制器类文件名\r\n	// $routing[\'controller\'] = \'\';\r\n\r\n	// The controller function you wish to be called. 你希望调用的控制器函数\r\n	// $routing[\'function\']	= \'\';\r\n\r\n\r\n/*\r\n * -------------------------------------------------------------------\r\n *  CUSTOM CONFIG VALUES 自定义配置值\r\n * -------------------------------------------------------------------\r\n *\r\n * The $assign_to_config array below will be passed dynamically to the 下面的$assign_to_config数组将会在初始化的时候动态的传递给配置类\r\n * config class when initialized. This allows you to set custom config 这允许你设置自定义的配置项或者是覆写在config.php文件中的任何默认的配置值\r\n * items or override any default config values found in the config.php file.\r\n * This can be handy as it permits you to share one application between 这可以方便的允许你在多个前端控制器文件中使用不同的配置值共享一个应用程序\r\n * multiple front controller files, with each file containing different \r\n * config values.\r\n *\r\n * Un-comment the $assign_to_config array below to use this feature\r\n *\r\n */\r\n	// $assign_to_config[\'name_of_config_item\'] = \'value of config item\';\r\n\r\n\r\n\r\n// --------------------------------------------------------------------\r\n// END OF USER CONFIGURABLE SETTINGS.  DO NOT EDIT BELOW THIS LINE 用户可配置选项结束，下面的这些内容请不要擅自编辑\r\n// --------------------------------------------------------------------\r\n\r\n/*\r\n * ---------------------------------------------------------------\r\n *  Resolve the system path for increased reliability 为了增加可靠性，解析system路径\r\n * ---------------------------------------------------------------\r\n */\r\n\r\n	// Set the current directory correctly for CLI requests 为CLI请求设置正确的当前目录\r\n	if (defined(\'STDIN\'))//STDIN标识了当前是否是CLI环境\r\n	{\r\n		//改变当前的工作目录为当前未见所在的目录\r\n		//__FILE__是当前文件的绝对路径\r\n		chdir(dirname(__FILE__));\r\n	}\r\n	//组合框架路径\r\n	//绝对路径 + /\r\n	if (realpath($system_path) !== FALSE)\r\n	{\r\n		$system_path = realpath($system_path).\'/\';\r\n	}\r\n\r\n	// ensure there\'s a trailing slash 确定框架路径是否含有最后的/\r\n	$system_path = rtrim($system_path, \'/\').\'/\';\r\n	\r\n	// Is the system path correct? 判断框架路径是否正确\r\n	if ( ! is_dir($system_path))\r\n	{\r\n		exit(\"你的system文件夹路径设置错误. 请打开以下文件，并改正它: \".pathinfo(__FILE__, PATHINFO_BASENAME));//index.php\r\n	}\r\n\r\n/*\r\n * -------------------------------------------------------------------\r\n *  Now that we know the path, set the main path constants 现在我们知道路径了，设置主路径常量\r\n * -------------------------------------------------------------------\r\n */\r\n	// The name of THIS file 当前文件的名称index.php\r\n	define(\'SELF\', pathinfo(__FILE__, PATHINFO_BASENAME));\r\n\r\n	// The PHP file extension  //PHP文件的扩展名\r\n	// this global constant is deprecated. 这个全局常量已经不赞成使用了\r\n	define(\'EXT\', \'.php\');\r\n	\r\n	// Path to the system folder 系统目录的路径\r\n	//$system_path = D:\\xampp\\htdocs\\CodeIgniter_2.1.3\\system/\r\n	define(\'BASEPATH\', str_replace(\"\\\\\", \"/\", $system_path));\r\n	//BASEPATH : D:/xampp/htdocs/CodeIgniter_2.1.3/system/\r\n	\r\n	// Path to the front controller (this file) 当前文件（前端控制器）的路径\r\n	define(\'FCPATH\', str_replace(SELF, \'\', __FILE__));\r\n\r\n	// Name of the \"system folder\" 系统文件夹的名字\r\n	//strrchr($haystack , $needle)查找指定字符在字符串中的最后一次出现,返回从$needle到最后的部分:system\r\n	define(\'SYSDIR\', trim(strrchr(trim(BASEPATH, \'/\'), \'/\'), \'/\'));\r\n\r\n	// The path to the \"application\" folder 应用程序的文件夹路径\r\n	// 这里注意的是，如果在当前目录下找不到设置的$application_folder文件夹的话,\r\n	// 会到system（框架目录下）寻找$application_folder目录，此时，项目目录位于框架目录下\r\n	if (is_dir($application_folder))\r\n	{\r\n		define(\'APPPATH\', $application_folder.\'/\');\r\n	}\r\n	else\r\n	{\r\n		if ( ! is_dir(BASEPATH.$application_folder.\'/\'))\r\n		{\r\n			exit(\"应用程序路径设置错误. 请打开下列文件并修改它: \".SELF);\r\n		}\r\n\r\n		define(\'APPPATH\', BASEPATH.$application_folder.\'/\');\r\n	}\r\n\r\n/*\r\n * --------------------------------------------------------------------\r\n * LOAD THE BOOTSTRAP FILE 载入自举文件（框架核心文件）\r\n * --------------------------------------------------------------------\r\n *\r\n * And away we go...\r\n *\r\n */\r\nrequire_once BASEPATH.\'core/CodeIgniter.php\';\r\n\r\n/* End of file index.php */\r\n/* Location: ./index.php */</pre>&nbsp;该前端控制器文件主要是配置了项目的路径以及框架的文件路径，以及可以在该文件中设置一些自定义的配置选项，该文件初始化了一些系统运行中需要用到的常量，并载入框架的入口文件。</p>','<p>&nbsp; &nbsp;CI的前端控制器也就是项目的入口文件，下面是对代码的注释翻译以及内容解析。</p><p><pre class=\"brush:php; toolbar: true; auto-links: true;\">&lt;?php\r\n\r\n/*\r\n *---------------------------------------------------------------\r\n * APPLICATION ENVIRONMENT 应用程序环境\r\n *---------------------------------------------------------------\r\n *\r\n * You can load different configurations depending on your 你可以根据的的当前环境载入不同的配置\r\n * current environment. Setting the environment also influences 环境配置将会影响到诸如日志和错误报告等。\r\n * things like logging and er','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(184,'CodeIgniter框架 学习笔记 （9） Common.php常用函数','<p>CI依赖的函数，包含错误处理，类库载入，配置文件加载以及简单的输入过滤等。</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * Common Functions 常见函数\r\n *\r\n * Loads the base classes and executes the request.\r\n *\r\n * @package		CodeIgniter\r\n * @subpackage	codeigniter\r\n * @category	Common Functions\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/\r\n */\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n* Determines if the current version of PHP is greater then the supplied value\r\n* 判断是否当前的PHP版本比推荐的版本值更高\r\n* Since there are a few places where we conditionally test for PHP &gt; 5 这里有一些地方我们有条件的测试PHP的版本&gt;5\r\n* we\'ll set a static variable. 我们将会设置一个静态的变量\r\n*\r\n* @access	public\r\n* @param	string\r\n* @return	bool	TRUE if the current version is $version or higher 如果版本号与$version一样活着更高的话为TRUE\r\n*/\r\nif ( ! function_exists(\'is_php\'))\r\n{\r\n	function is_php($version = \'5.0.0\')\r\n	{\r\n		static $_is_php;\r\n		$version = (string)$version;\r\n\r\n		if ( ! isset($_is_php[$version]))\r\n		{\r\n			$_is_php[$version] = (version_compare(PHP_VERSION, $version) &lt; 0) ? FALSE : TRUE;\r\n		}\r\n\r\n		return $_is_php[$version];\r\n	}\r\n}\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n * Tests for file writability 测试文件可写性\r\n *\r\n * is_writable() returns TRUE on Windows servers when you really can\'t write to 函数is_writable()在windows server上在文件是只读属性的时候仍然返回TURE\r\n * the file, based on the read-only attribute.  is_writable() is also unreliable 函数is_writable()在Unix下如果在safe_mode模式下也是不可靠的\r\n * on Unix servers if safe_mode is on.\r\n *\r\n * @access	private\r\n * @return	void\r\n */\r\nif ( ! function_exists(\'is_really_writable\'))\r\n{\r\n	function is_really_writable($file)\r\n	{\r\n		// If we\'re on a Unix server with safe_mode off we call is_writable 如果是在UNIX服务器上，同时safe_mode是关闭的，直接调用is_writable()函数\r\n		//目录分隔符是/，表名是在类Unix系统，然后判断配置文件中是否开启safe_mode\r\n		if (DIRECTORY_SEPARATOR == \'/\' AND @ini_get(\"safe_mode\") == FALSE)\r\n		{\r\n			return is_writable($file);\r\n		}\r\n\r\n		// For windows servers and safe_mode \"on\" installations we\'ll actually 在windows服务器上，safe_mode开启的情况下，将实际测试\r\n		// write a file then read it.  Bah... 下写入文件然后读取它\r\n		if (is_dir($file))\r\n		{\r\n			//生成要写入的文件名，通过MD5加密的随机数产生\r\n			//mt_rand(min , max)产生更好的随机数\r\n			$file = rtrim($file, \'/\').\'/\'.md5(mt_rand(1,100).mt_rand(1,100));\r\n\r\n			if (($fp = @fopen($file, FOPEN_WRITE_CREATE)) === FALSE)\r\n			{\r\n				return FALSE;\r\n			}\r\n\r\n			fclose($fp);\r\n			@chmod($file, DIR_WRITE_MODE);//改变文件权限为0777\r\n			@unlink($file);//删除文件\r\n			return TRUE;\r\n		}\r\n		elseif ( ! is_file($file) OR ($fp = @fopen($file, FOPEN_WRITE_CREATE)) === FALSE)\r\n		{//如果$file不是文件或者是不能以写创建模式打开文件的话，返回FALSE\r\n			return FALSE;\r\n		}\r\n\r\n		fclose($fp);\r\n		return TRUE;\r\n	}\r\n}\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n* Class registry 类注册\r\n*\r\n* This function acts as a singleton.  If the requested class does not \r\n* 这个函数是单例的。如果请求的类不存在，该函数将会实例化它并加入到静态变量中。\r\n* exist it is instantiated and set to a static variable.  If it has \r\n* 如果已经被实例化过了，直接返回已经实例化的静态变量\r\n* previously been instantiated the variable is returned.\r\n* 实现了在$directory中实例化$class,如果在$directory中\r\n* 存在该$class的扩展的话，则加载\r\n* 扩展类对象（命名为配置项subclass_prefix的值与$class的组合）\r\n* 也就是说要覆写某个类库中的类的话，可以通过新建一个类文件，命名规则为\r\n* 配置项subclass_prefix加上要扩展的类名，避免了直接修改原有类库，提高了可移植性。\r\n* @access	public\r\n* @param	string	the class name being requested 请求的类名\r\n* @param	string	the directory where the class should be found 查找这个类的目录\r\n* @param	string	the class name prefix 类名的前缀\r\n* @return	object\r\n*/\r\nif ( ! function_exists(\'load_class\'))\r\n{\r\n	function &amp;load_class($class, $directory = \'libraries\', $prefix = \'CI_\')\r\n	{\r\n		static $_classes = array();//用于存放已经实例化过的类对象\r\n\r\n		// Does the class exist?  If so, we\'re done... 判断请求的类对象是否存在，如果存在的话，返回它\r\n		if (isset($_classes[$class]))\r\n		{\r\n			return $_classes[$class];\r\n		}\r\n\r\n		$name = FALSE;//初始化类名\r\n\r\n		// Look for the class first in the local application/libraries folder 首先在本地（application）/libraries文件夹中查找类\r\n		// then in the native system/libraries folder 如果找不到，在框架（system）/libraries目录下查找\r\n		foreach (array(APPPATH, BASEPATH) as $path)\r\n		{\r\n			if (file_exists($path.$directory.\'/\'.$class.\'.php\'))//判断类名对应的类库文件是否存在\r\n			{\r\n				$name = $prefix.$class;//加前缀后的类名\r\n\r\n				if (class_exists($name) === FALSE)//如果该类在当前环境中不存在，则载入这个文件，如果有的话，就不再载入，防止冲突。\r\n				{\r\n					require($path.$directory.\'/\'.$class.\'.php\');\r\n				}\r\n\r\n				break;\r\n			}\r\n		}\r\n\r\n		// Is the request a class extension?  If so we load it too 请求的类是否有扩展？如果有的话也载入\r\n		if (file_exists(APPPATH.$directory.\'/\'.config_item(\'subclass_prefix\').$class.\'.php\'))\r\n		{\r\n			$name = config_item(\'subclass_prefix\').$class;\r\n\r\n			if (class_exists($name) === FALSE)\r\n			{\r\n				require(APPPATH.$directory.\'/\'.config_item(\'subclass_prefix\').$class.\'.php\');\r\n			}\r\n		}\r\n\r\n		// Did we find the class? 如果没有找到要的类的话\r\n		if ($name === FALSE)\r\n		{\r\n			// Note: We use exit() rather then show_error() in order to avoid a \r\n			// self-referencing loop with the Excptions class 这里使用exit避免使用show_error()在Exceptions类中可能产生的自引用循环\r\n			exit(\'不能够定位到指定的类: \'.$class.\'.php\');\r\n		}\r\n\r\n		// Keep track of what we just loaded 跟踪我们刚才载入的类\r\n		is_loaded($class);\r\n		//在此实例化要载入的类，并加入到静态字段中存储\r\n		//$name可能是$prefix. $class，或者是config_item(\'subclass_prefix\').$class(要加载类的扩展类)\r\n		$_classes[$class] = new $name();\r\n		return $_classes[$class];\r\n	}\r\n}\r\n\r\n// --------------------------------------------------------------------\r\n\r\n/**\r\n* Keeps track of which libraries have been loaded.  This function is 保持跟踪哪一个类库已经被载入了，这个函数\r\n* called by the load_class() function above 被上面的load_class()函数调用\r\n* 将传入的类名加入到$_is_loaded中\r\n*\r\n* @access	public\r\n* @return	array\r\n*/\r\nif ( ! function_exists(\'is_loaded\'))\r\n{\r\n	function &amp;is_loaded($class = \'\')\r\n	{\r\n		static $_is_loaded = array();\r\n\r\n		if ($class != \'\')\r\n		{\r\n			$_is_loaded[strtolower($class)] = $class;\r\n		}\r\n\r\n		return $_is_loaded;\r\n	}\r\n}\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n* Loads the main config.php file\r\n* 载入主要的config.php文件\r\n* This function lets us grab the config file even if the Config class \r\n* 这个函数让我们获取配置文件，即使是Config 类没有被实例化\r\n* hasn\'t been instantiated yet\r\n*\r\n* @access	private\r\n* @return	array\r\n*/\r\nif ( ! function_exists(\'get_config\'))\r\n{\r\n	/*\r\n	 * 这里使用&amp;引用返回的原因是因为返回的是config.php文件中的所有内容，内容比较多，\r\n	 * 如果使用普通的返回的话，会产生大量的内存复制，浪费资源，使用引用返回可以降低内存的消耗。\r\n	 * 函数返回引用的使用，获取返回值的时候也要加上&amp;\r\n	 * \r\n	 * 例如:$config = &amp;get_config();\r\n	 */\r\n	function &amp;get_config($replace = array())\r\n	{\r\n		static $_config;\r\n\r\n		if (isset($_config))\r\n		{\r\n			return $_config[0];\r\n		}\r\n\r\n		// Is the config file in the environment folder? 如果没有定义ENVIRONMENT，使用config/config.php默认配置文件\r\n		//如果定义了ENVIRONMENT,但是config/ENVIRONMENT/config.php不存在，也调用默认位置的配置文件\r\n		if ( ! defined(\'ENVIRONMENT\') OR ! file_exists($file_path = APPPATH.\'config/\'.ENVIRONMENT.\'/config.php\'))\r\n		{\r\n			$file_path = APPPATH.\'config/config.php\';\r\n		}\r\n\r\n		// Fetch the config file 检查配置文件是否存在\r\n		if ( ! file_exists($file_path))\r\n		{\r\n			exit(\'配置文件不存在.\');\r\n		}\r\n\r\n		require($file_path);\r\n\r\n		// Does the $config array exist in the file? 配置文件中不存在$config变量或者是$config不是数组，报错\r\n		if ( ! isset($config) OR ! is_array($config))\r\n		{\r\n			exit(\'配置文件格式错误.\');\r\n		}\r\n\r\n		// Are any values being dynamically replaced? 是否有值被动态的替换了，传入参数为替换的值\r\n		if (count($replace) &gt; 0)\r\n		{\r\n			foreach ($replace as $key =&gt; $val)\r\n			{\r\n				if (isset($config[$key]))\r\n				{\r\n					$config[$key] = $val;\r\n				}\r\n			}\r\n		}\r\n\r\n		return $_config[0] =&amp; $config;\r\n	}\r\n}\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n* Returns the specified config item\r\n* 返回指定的配置项\r\n* 只会获取一次，并缓存\r\n* @access	public\r\n* @return	mixed\r\n*/\r\nif ( ! function_exists(\'config_item\'))\r\n{\r\n	function config_item($item)\r\n	{\r\n		static $_config_item = array();\r\n\r\n		if ( ! isset($_config_item[$item]))\r\n		{\r\n			$config =&amp; get_config();\r\n\r\n			if ( ! isset($config[$item]))\r\n			{\r\n				return FALSE;\r\n			}\r\n			$_config_item[$item] = $config[$item];\r\n		}\r\n\r\n		return $_config_item[$item];\r\n	}\r\n}\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n* Error Handler 错误处理 \r\n*\r\n* This function lets us invoke the exception class and 这个函数让我们可以调用异常类和\r\n* display errors using the standard error template located 使用位于application/errors/errors.php的标准错误模板显示错误\r\n* in application/errors/errors.php\r\n* This function will send the error page directly to the 这个函数将会直接发送错误到浏览器并退出\r\n* browser and exit.\r\n*\r\n* @access	public\r\n* @return	void\r\n*/\r\nif ( ! function_exists(\'show_error\'))\r\n{\r\n	function show_error($message, $status_code = 500, $heading = \'遇到一个错误\')\r\n	{\r\n		$_error =&amp; load_class(\'Exceptions\', \'core\');\r\n		echo $_error-&gt;show_error($heading, $message, \'error_general\', $status_code);\r\n		exit;\r\n	}\r\n}\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n* 404 Page Handler\r\n* 404页面\r\n* This function is similar to the show_error() function above 这个函数与show_error()类似\r\n* However, instead of the standard error template it displays 然而，带起标准错误输出模板的是404错误显示\r\n* 404 errors.\r\n*\r\n* @access	public\r\n* @return	void\r\n*/\r\nif ( ! function_exists(\'show_404\'))\r\n{\r\n	function show_404($page = \'\', $log_error = TRUE)\r\n	{\r\n		$_error =&amp; load_class(\'Exceptions\', \'core\');\r\n		$_error-&gt;show_404($page, $log_error);\r\n		exit;\r\n	}\r\n}\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n* Error Logging Interface 错误日志接口\r\n*\r\n* We use this as a simple mechanism to access the logging 使用这个函数作为一个简单的机制去访问日志类并发送消息以日志记录\r\n* class and send messages to be logged.\r\n*\r\n* @access	public\r\n* @return	void\r\n*/\r\nif ( ! function_exists(\'log_message\'))\r\n{\r\n	function log_message($level = \'error\', $message, $php_error = FALSE)\r\n	{\r\n		static $_log;\r\n\r\n		if (config_item(\'log_threshold\') == 0)\r\n		{\r\n			return;\r\n		}\r\n\r\n		$_log =&amp; load_class(\'Log\');\r\n		$_log-&gt;write_log($level, $message, $php_error);\r\n	}\r\n}\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n * Set HTTP Status Header 设置HTTP状态头部\r\n *\r\n * @access	public\r\n * @param	int		the status code\r\n * @param	string\r\n * @return	void\r\n */\r\nif ( ! function_exists(\'set_status_header\'))\r\n{\r\n	function set_status_header($code = 200, $text = \'\')\r\n	{\r\n		$stati = array(\r\n							200	=&gt; \'OK\',\r\n							201	=&gt; \'Created\',\r\n							202	=&gt; \'Accepted\',\r\n							203	=&gt; \'Non-Authoritative Information\',\r\n							204	=&gt; \'No Content\',\r\n							205	=&gt; \'Reset Content\',\r\n							206	=&gt; \'Partial Content\',\r\n\r\n							300	=&gt; \'Multiple Choices\',\r\n							301	=&gt; \'Moved Permanently\',\r\n							302	=&gt; \'Found\',\r\n							304	=&gt; \'Not Modified\',\r\n							305	=&gt; \'Use Proxy\',\r\n							307	=&gt; \'Temporary Redirect\',\r\n\r\n							400	=&gt; \'Bad Request\',\r\n							401	=&gt; \'Unauthorized\',\r\n							403	=&gt; \'Forbidden\',\r\n							404	=&gt; \'Not Found\',\r\n							405	=&gt; \'Method Not Allowed\',\r\n							406	=&gt; \'Not Acceptable\',\r\n							407	=&gt; \'Proxy Authentication Required\',\r\n							408	=&gt; \'Request Timeout\',\r\n							409	=&gt; \'Conflict\',\r\n							410	=&gt; \'Gone\',\r\n							411	=&gt; \'Length Required\',\r\n							412	=&gt; \'Precondition Failed\',\r\n							413	=&gt; \'Request Entity Too Large\',\r\n							414	=&gt; \'Request-URI Too Long\',\r\n							415	=&gt; \'Unsupported Media Type\',\r\n							416	=&gt; \'Requested Range Not Satisfiable\',\r\n							417	=&gt; \'Expectation Failed\',\r\n\r\n							500	=&gt; \'Internal Server Error\',\r\n							501	=&gt; \'Not Implemented\',\r\n							502	=&gt; \'Bad Gateway\',\r\n							503	=&gt; \'Service Unavailable\',\r\n							504	=&gt; \'Gateway Timeout\',\r\n							505	=&gt; \'HTTP Version Not Supported\'\r\n						);\r\n\r\n		if ($code == \'\' OR ! is_numeric($code))\r\n		{\r\n			show_error(\'状态码必须是数字\', 500);\r\n		}\r\n\r\n		if (isset($stati[$code]) AND $text == \'\')\r\n		{\r\n			$text = $stati[$code];\r\n		}\r\n\r\n		if ($text == \'\')\r\n		{\r\n			show_error(\'没有可用的状态文本.  请检查你的状态吗并提供自定义的状态文本.\', 500);\r\n		}\r\n\r\n		$server_protocol = (isset($_SERVER[\'SERVER_PROTOCOL\'])) ? $_SERVER[\'SERVER_PROTOCOL\'] : FALSE;\r\n\r\n		//php_sapi_name()返回Web服务器与PHP之间的接口类型\r\n		if (substr(php_sapi_name(), 0, 3) == \'cgi\')\r\n		{\r\n			header(\"Status: {$code} {$text}\", TRUE);\r\n		}\r\n		elseif ($server_protocol == \'HTTP/1.1\' OR $server_protocol == \'HTTP/1.0\')\r\n		{\r\n			header($server_protocol.\" {$code} {$text}\", TRUE, $code);\r\n		}\r\n		else\r\n		{\r\n			header(\"HTTP/1.1 {$code} {$text}\", TRUE, $code);\r\n		}\r\n	}\r\n}\r\n\r\n// --------------------------------------------------------------------\r\n\r\n/**\r\n* Exception Handler 异常处理\r\n*\r\n* This is the custom exception handler that is declaired at the top 这是一个在Codeigniter.php的顶部声明（常量定义完后）的自定义的异常处理器\r\n* of Codeigniter.php.  The main reason we use this is to permit 使用它的主要原因是在用户可能没有访问服务器日志的权限\r\n* PHP errors to be logged in our own log files since the user may 时允许把PHP错误能够被吸入我们的日志文件中\r\n* not have access to server logs. Since this function 这个函数有效的拦截了PHP的错误，然而，我们也需要基于当前的error_reporting级别显示错误\r\n* effectively intercepts PHP errors, however, we also need\r\n* to display errors based on the current error_reporting level.\r\n* We do that with the use of a PHP error template. 我们通过PHP的错误模板使用它。\r\n*\r\n* @access	private\r\n* @return	void\r\n*/\r\nif ( ! function_exists(\'_exception_handler\'))\r\n{\r\n	function _exception_handler($severity, $message, $filepath, $line)\r\n	{\r\n		 // We don\'t bother with \"strict\" notices since they tend to fill up 我们不必担心strict警告的额外的没有什么用的信息被填充到日志文件中。\r\n		 // the log file with excess information that isn\'t normally very helpful. \r\n		 // For example, if you are running PHP 5 and you use version 4 style 例如： 如果你正在运行PHP5，但是你使用了4的类函数样式（没有前缀\"public ,private\"等）\r\n		 // class functions (without prefixes like \"public\", \"private\", etc.)\r\n		 // you\'ll get notices telling you that these have been deprecated. 你将得到告诉你这些已经不赞成使用的警告。\r\n		if ($severity == E_STRICT)\r\n		{\r\n			return;\r\n		}\r\n\r\n		$_error =&amp; load_class(\'Exceptions\', \'core\');\r\n\r\n		// Should we display the error? We\'ll get the current error_reporting\r\n		// level and add its bits with the severity bits to find out.\r\n		if (($severity &amp; error_reporting()) == $severity)\r\n		{\r\n			$_error-&gt;show_php_error($severity, $message, $filepath, $line);\r\n		}\r\n\r\n		// Should we log the error?  No?  We\'re done...\r\n		if (config_item(\'log_threshold\') == 0)\r\n		{\r\n			return;\r\n		}\r\n\r\n		$_error-&gt;log_exception($severity, $message, $filepath, $line);\r\n	}\r\n}\r\n\r\n// --------------------------------------------------------------------\r\n\r\n/**\r\n * Remove Invisible Characters 移除不可见字符\r\n *\r\n * This prevents sandwiching null characters 防止在ascii字符串中夹杂着null字符 ， 比如：Java\\0script\r\n * between ascii characters, like Java\\0script.\r\n *\r\n * @access	public\r\n * @param	string\r\n * @return	string\r\n */\r\nif ( ! function_exists(\'remove_invisible_characters\'))\r\n{\r\n	function remove_invisible_characters($str, $url_encoded = TRUE)\r\n	{\r\n		$non_displayables = array();\r\n		\r\n		// every control character except newline (dec 10)\r\n		// carriage return (dec 13), and horizontal tab (dec 09)\r\n		\r\n		if ($url_encoded)\r\n		{\r\n			$non_displayables[] = \'/%0[0-8bcef]/\';	// url encoded 00-08, 11, 12, 14, 15\r\n			$non_displayables[] = \'/%1[0-9a-f]/\';	// url encoded 16-31\r\n		}\r\n		\r\n		$non_displayables[] = \'/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]+/S\';	// 00-08, 11, 12, 14-31, 127\r\n\r\n		do\r\n		{\r\n			$str = preg_replace($non_displayables, \'\', $str, -1, $count);\r\n		}\r\n		while ($count);\r\n\r\n		return $str;\r\n	}\r\n}\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n* Returns HTML escaped variable\r\n* HTML转义\r\n* @access	public\r\n* @param	mixed\r\n* @return	mixed\r\n*/\r\nif ( ! function_exists(\'html_escape\'))\r\n{\r\n	function html_escape($var)\r\n	{\r\n		if (is_array($var))\r\n		{\r\n			return array_map(\'html_escape\', $var);\r\n		}\r\n		else\r\n		{\r\n			//$new = htmlspecialchars(\"&lt;a href=\'test\'&gt;Test&lt;/a&gt;\", ENT_QUOTES);\r\n			//echo $new; \r\n			// &amp;lt;a href=&amp;#039;test&amp;#039;&amp;gt;Test&amp;lt;/a&amp;gt;\r\n		\r\n			return htmlspecialchars($var, ENT_QUOTES, config_item(\'charset\'));\r\n		}\r\n	}\r\n}</pre></p>','<p>CI依赖的函数，包含错误处理，类库载入，配置文件加载以及简单的输入过滤等。</p><p><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * Common Functions 常见函数\r\n *\r\n * Loads the base classes and executes the request.\r\n *\r\n * @package		CodeIgniter\r\n * @subpackage	codeigniter\r\n * @category	Common Functions\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/\r\n */\r\n\r\n// ------------------------------------------------------------------------\r\n\r\n/**\r\n* Determines if the current version of PHP ','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(185,'CodeIgniter框架 学习笔记 （10） Model模型类','<p>CI的模型类是比较简单的，但是其实现也是很巧妙的。</p>\r\n<p>通过实现的__get()方法，使得模型中可以与控制器使用同样的方式访问CI载入的类对象。</p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * CodeIgniter Model Class\r\n * 模型类\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Libraries\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/config.html\r\n */\r\nclass CI_Model {\r\n\r\n	/**\r\n	 * Constructor\r\n	 *\r\n	 * @access public\r\n	 */\r\n	function __construct()\r\n	{\r\n		log_message(\'debug\', \"模型类初始化\");\r\n	}\r\n\r\n	/**\r\n	 * __get\r\n	 *\r\n	 * Allows models to access CI\'s loaded classes using the same\r\n	 * syntax as controllers.\r\n	 * 允许模型使用与控制器相同的方法去访问CI控制器载入的类\r\n	 *\r\n	 * @param	string\r\n	 * @access private\r\n	 */\r\n	function __get($key)\r\n	{\r\n		$CI =&amp; get_instance();\r\n		return $CI-&gt;$key;\r\n	}\r\n}</pre>在模型中使用控制器中载入的类对象：<p></p>\r\n<p>&nbsp; &nbsp; $this-&gt;load-&gt;view(...)</p>\r\n<p>&nbsp; &nbsp;&nbsp;<span style=\"color:#002166;font-family:Monaco, Verdana, sans-serif;font-size:12px;line-height:normal;background-color:#f9f9f9;\">$this-&gt;load-&gt;library(\'</span><var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;font-size:12px;line-height:normal;\">class name</var><span style=\"color:#002166;font-family:Monaco, Verdana, sans-serif;font-size:12px;line-height:normal;background-color:#f9f9f9;\">\');</span></p>\r\n<p><span style=\"color:#002166;font-family:Monaco, Verdana, sans-serif;font-size:12px;line-height:normal;background-color:#f9f9f9;\">&nbsp; &nbsp;&nbsp;</span><span style=\"background-color:#f9f9f9;color:#002166;font-family:Monaco, Verdana, sans-serif;font-size:12px;line-height:normal;\">$this-&gt;output-&gt;_write_cache($output);</span></p>','<p>CI的模型类是比较简单的，但是其实现也是很巧妙的。</p><p>通过实现的__get()方法，使得模型中可以与控制器使用同样的方式访问CI载入的类对象。</p><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * CodeIgniter Model Class\r\n * 模型类\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Libraries\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/config.html\r\n */\r\nclass CI_Model {\r\n\r\n	/**\r\n	 * Constructor\r\n	 *\r\n	 * @access public\r\n	 */\r\n	function __construct()\r\n	{\r\n		log_message(\'debug\', \"模型类初始','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(186,'CodeIgniter框架 学习笔记 （11） Output输出控制类','<p>Output.php文件负责了CI视图渲染后的缓存以及内容展示，系统执行时间以及内存占用也在该类中处理后加入到最终页面。</p>\r\n<p><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * Output Class\r\n *\r\n * Responsible for sending final output to browser\r\n * 负责发送最终输出到浏览器\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Output\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/output.html\r\n */\r\nclass CI_Output {\r\n\r\n	/**\r\n	 * Current output string\r\n	 * 当前输出字符串\r\n	 * @var string\r\n	 * @access 	protected\r\n	 */\r\n	protected $final_output;\r\n	/**\r\n	 * Cache expiration time\r\n	 * 缓存过期时间\r\n	 * @var int\r\n	 * @access 	protected\r\n	 */\r\n	protected $cache_expiration	= 0;\r\n	/**\r\n	 * List of server headers\r\n	 * 服务器头部列表\r\n	 * @var array\r\n	 * @access 	protected\r\n	 */\r\n	protected $headers			= array();\r\n	/**\r\n	 * List of mime types\r\n	 * MIME类型列表\r\n	 * @var array\r\n	 * @access 	protected\r\n	 */\r\n	protected $mime_types		= array();\r\n	/**\r\n	 * Determines wether profiler is enabled\r\n	 * 确定是否允许wether分析\r\n	 * @var book\r\n	 * @access 	protected\r\n	 */\r\n	protected $enable_profiler	= FALSE;\r\n	/**\r\n	 * Determines if output compression is enabled\r\n	 * 确定是否允许输出压缩\r\n	 * @var bool\r\n	 * @access 	protected\r\n	 */\r\n	protected $_zlib_oc			= FALSE;\r\n	/**\r\n	 * List of profiler sections\r\n	 * 分析器部分的列表\r\n	 * @var array\r\n	 * @access 	protected\r\n	 */\r\n	protected $_profiler_sections = array();\r\n	/**\r\n	 * Whether or not to parse variables like {elapsed_time} and {memory_usage}\r\n	 * 是否解析变量（如{elapsed_time}和{memory_usage})\r\n	 * @var bool\r\n	 * @access 	protected\r\n	 */\r\n	protected $parse_exec_vars	= TRUE;\r\n\r\n	/**\r\n	 * Constructor\r\n	 *\r\n	 */\r\n	function __construct()\r\n	{\r\n		$this-&gt;_zlib_oc = @ini_get(\'zlib.output_compression\');//通过php.ini的配置获取是否启用输出压缩\r\n\r\n		// Get mime types for later 获取mime类型\r\n		if (defined(\'ENVIRONMENT\') AND file_exists(APPPATH.\'config/\'.ENVIRONMENT.\'/mimes.php\'))\r\n		{\r\n		    include APPPATH.\'config/\'.ENVIRONMENT.\'/mimes.php\';\r\n		}\r\n		else\r\n		{\r\n			include APPPATH.\'config/mimes.php\';\r\n		}\r\n\r\n\r\n		$this-&gt;mime_types = $mimes;\r\n\r\n		log_message(\'debug\', \"Output类初始化完毕\");\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Get Output\r\n	 * 获取输出内容\r\n	 * Returns the current output string\r\n	 * 返回当前的输出字符串\r\n	 * @access	public\r\n	 * @return	string\r\n	 */\r\n	function get_output()\r\n	{\r\n		return $this-&gt;final_output;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set Output\r\n	 * 设置输出内容\r\n	 * Sets the output string\r\n	 * 设置输出字符串，这里貌似支持连贯操作。。返回的是当前对象\r\n	 * @access	public\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	function set_output($output)\r\n	{\r\n		$this-&gt;final_output = $output;\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Append Output\r\n	 *  追加到Output上\r\n	 *\r\n	 * Appends data onto the output string\r\n	 * 追加数据到输出字符串\r\n	 * @access	public\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	function append_output($output)\r\n	{\r\n		if ($this-&gt;final_output == \'\')\r\n		{\r\n			$this-&gt;final_output = $output;\r\n		}\r\n		else\r\n		{\r\n			$this-&gt;final_output .= $output;\r\n		}\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set Header\r\n	 * 设置头部\r\n	 * Lets you set a server header which will be outputted with the final display.\r\n	 * 让你可以设置将会作为最终显示输出的服务器头部\r\n	 * Note:  If a file is cached, headers will not be sent.  We need to figure out\r\n	 * how to permit header data to be saved with the cache data...\r\n	 * 注意： 如果一个文件已经缓存，头部将不会被发送。我们需要指出怎样去允许头部数据保存到缓存数据中\r\n	 * @access	public\r\n	 * @param	string\r\n	 * @param 	bool\r\n	 * @return	void\r\n	 */\r\n	function set_header($header, $replace = TRUE)\r\n	{\r\n		// If zlib.output_compression is enabled it will compress the output,\r\n		// 如果zlib.output_compression开启了，将会压缩输出\r\n		// but it will not modify the content-length header to compensate for\r\n		// 但是这样不会修改content-length头部去弥补减少的数据，这样就会造成浏览器\r\n		// the reduction, causing the browser to hang waiting for more data.\r\n		// 一直在等待更多的数据，我们通过跳过content-length字段解决这个问题\r\n		// We\'ll just skip content-length in those cases.\r\n		// strncasecmp()比较字符串，不区分大小写\r\n		if ($this-&gt;_zlib_oc &amp;&amp; strncasecmp($header, \'content-length\', 14) == 0)\r\n		{\r\n			return;\r\n		}\r\n\r\n		$this-&gt;headers[] = array($header, $replace);\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set Content Type Header\r\n	 * 设置Content Type头部\r\n	 * @access	public\r\n	 * @param	string	extension of the file we\'re outputting\r\n	 * @return	void\r\n	 */\r\n	function set_content_type($mime_type)\r\n	{\r\n		if (strpos($mime_type, \'/\') === FALSE)\r\n		{\r\n			$extension = ltrim($mime_type, \'.\');\r\n\r\n			// Is this extension supported?\r\n			if (isset($this-&gt;mime_types[$extension]))\r\n			{\r\n				$mime_type =&amp; $this-&gt;mime_types[$extension];\r\n\r\n				if (is_array($mime_type))\r\n				{\r\n					$mime_type = current($mime_type);\r\n				}\r\n			}\r\n		}\r\n\r\n		$header = \'Content-Type: \'.$mime_type;\r\n\r\n		$this-&gt;headers[] = array($header, TRUE);\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set HTTP Status Header 设置HTTP状态头\r\n	 * moved to Common procedural functions in 1.7.2\r\n	 *  在1.7.2版本之后移动到了Common函数库中（Common.php）\r\n	 * @access	public\r\n	 * @param	int		the status code\r\n	 * @param	string\r\n	 * @return	void\r\n	 */\r\n	function set_status_header($code = 200, $text = \'\')\r\n	{\r\n		set_status_header($code, $text);\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Enable/disable Profiler\r\n	 * 允许/禁止分析器\r\n	 * @access	public\r\n	 * @param	bool\r\n	 * @return	void\r\n	 */\r\n	function enable_profiler($val = TRUE)\r\n	{\r\n		$this-&gt;enable_profiler = (is_bool($val)) ? $val : TRUE;\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set Profiler Sections\r\n	 * 设置分析部分\r\n	 * Allows override of default / config settings for Profiler section display\r\n	 * 允许覆写默认配置\r\n	 * @access	public\r\n	 * @param	array\r\n	 * @return	void\r\n	 */\r\n	function set_profiler_sections($sections)\r\n	{\r\n		foreach ($sections as $section =&gt; $enable)\r\n		{\r\n			$this-&gt;_profiler_sections[$section] = ($enable !== FALSE) ? TRUE : FALSE;\r\n		}\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set Cache\r\n	 * 设置缓存时间\r\n	 * @access	public\r\n	 * @param	integer\r\n	 * @return	void\r\n	 */\r\n	function cache($time)\r\n	{\r\n		$this-&gt;cache_expiration = ( ! is_numeric($time)) ? 0 : $time;\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Display Output\r\n	 * 显示输出\r\n	 * All \"view\" data is automatically put into this variable by the controller class:\r\n	 * 所有的view数据在控制器类中被自动的放入变量$this-&gt;final_output中\r\n	 * $this-&gt;final_output\r\n	 *\r\n	 * This function sends the finalized output data to the browser along\r\n	 * 这个函数发送最终的输出数据到浏览器（包含服务器头部和分析器数据）\r\n	 * with any server headers and profile data.  It also stops the\r\n	 * 它也停止了基准测试时间计时器，所以页面渲染速度和内存消耗也可以显示\r\n	 * benchmark timer so the page rendering speed and memory usage can be shown.\r\n	 *\r\n	 * @access	public\r\n	 * @param 	string\r\n	 * @return	mixed\r\n	 */\r\n	function _display($output = \'\')\r\n	{\r\n		// Note:  We use globals because we can\'t use $CI =&amp; get_instance()\r\n		// 注意，这里使用全局变量时因为不能使用$CI = &amp; get_instance()获取控制器实例对象\r\n		// since this function is sometimes called by the caching mechanism,\r\n		// 因为缓存机制的使用，有时控制器实例对象还没有被实例化，所以这里就没有CI超级对象了。\r\n		// which happens before the CI super object is available.\r\n		\r\n		// 具体是在CodeIgniter.php中，载入输出类后，会判断是否是存在缓存的文件，如果存在的话，会直接\r\n		// 调用_display_cache()方法，在_display_cache()方法中又调用了该方法，此时，控制器类并没有被实例化，\r\n		// 但是基准测试类和配置类已经实例化了，这里就只能通过全局对象获取了。\r\n		global $BM, $CFG;\r\n\r\n		// Grab the super object if we can.\r\n		// 如果存在的话，获取CI超级对象\r\n		if (class_exists(\'CI_Controller\'))\r\n		{\r\n			$CI =&amp; get_instance();\r\n		}\r\n\r\n		// --------------------------------------------------------------------\r\n\r\n		// Set the output data\r\n		// 设置输出数据，这只有在没有提供output参数的时候调用最终渲染的页面数据\r\n		if ($output == \'\')\r\n		{\r\n			$output =&amp; $this-&gt;final_output;\r\n		}\r\n\r\n		// --------------------------------------------------------------------\r\n\r\n		// Do we need to write a cache file?  Only if the controller does not have its\r\n		// 是否需要写入一个缓存文件？ 只有在控制器类没有自己实现_output()方法，同时我们已经获取到了CI超级对象的情况下才缓存\r\n		// own _output() method and we are not dealing with a cache file, which we\r\n		// can determine by the existence of the $CI object above\r\n		if ($this-&gt;cache_expiration &gt; 0 &amp;&amp; isset($CI) &amp;&amp; ! method_exists($CI, \'_output\'))\r\n		{\r\n			$this-&gt;_write_cache($output);\r\n		}\r\n\r\n		// --------------------------------------------------------------------\r\n\r\n		// Parse out the elapsed time and memory usage, \r\n		// 解析出运行时间和内存消耗\r\n		// then swap the pseudo-variables with the data\r\n		// 然后把{}之间的虚假变量替换成获取的值\r\n		$elapsed = $BM-&gt;elapsed_time(\'total_execution_time_start\', \'total_execution_time_end\');\r\n\r\n		if ($this-&gt;parse_exec_vars === TRUE)\r\n		{\r\n			$memory	 = ( ! function_exists(\'memory_get_usage\')) ? \'0\' : round(memory_get_usage()/1024/1024, 2).\'MB\';\r\n\r\n			$output = str_replace(\'{elapsed_time}\', $elapsed, $output);\r\n			$output = str_replace(\'{memory_usage}\', $memory, $output);\r\n		}\r\n\r\n		// --------------------------------------------------------------------\r\n\r\n		// Is compression requested? 是否请求压缩\r\n		// 在php.ini中关闭，同时配置中要求使用的时候才进行压缩\r\n		// 在php.ini中如果是开启压缩的，那么在这里就没必要在压缩了\r\n		if ($CFG-&gt;item(\'compress_output\') === TRUE &amp;&amp; $this-&gt;_zlib_oc == FALSE)\r\n		{\r\n			if (extension_loaded(\'zlib\'))//extension_loaded()返回指定的扩展是否已经加载了\r\n			{\r\n				if (isset($_SERVER[\'HTTP_ACCEPT_ENCODING\']) AND strpos($_SERVER[\'HTTP_ACCEPT_ENCODING\'], \'gzip\') !== FALSE)\r\n				{\r\n					ob_start(\'ob_gzhandler\');\r\n				}\r\n			}\r\n		}\r\n\r\n		// --------------------------------------------------------------------\r\n\r\n		// Are there any server headers to send?\r\n		// 是否有服务器头部需要发送\r\n		if (count($this-&gt;headers) &gt; 0)\r\n		{\r\n			foreach ($this-&gt;headers as $header)\r\n			{\r\n				// header()发送原生的http头\r\n				@header($header[0], $header[1]);\r\n			}\r\n		}\r\n\r\n		// --------------------------------------------------------------------\r\n\r\n		// Does the $CI object exist? 获取到了$CI超级对象了吗\r\n		// If not we know we are dealing with a cache file so we\'ll\r\n		// 如果没有的话我们知道我们正在处理的是一个缓存文件，因此我们将简单的输出它并退出\r\n		// simply echo out the data and exit.\r\n		if ( ! isset($CI))\r\n		{\r\n			echo $output;\r\n			log_message(\'debug\', \"最终输出已经发送到了浏览器\");\r\n			log_message(\'debug\', \"当前执行时间: \".$elapsed);\r\n			return TRUE;\r\n		}\r\n\r\n		// --------------------------------------------------------------------\r\n		/**\r\n		 *  ！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！\r\n		 * 这地方要注意，在&lt;/body&gt;和&lt;/html&gt;之间一定不要放任何的内容，特别是js以及统计代码等，如果放到这里\r\n		 * 在开启profiler的情况下，这之间的数据会被清除！！！\r\n		 * ！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！\r\n		 */\r\n		\r\n		// Do we need to generate profile data? 需要获取属性数据吗\r\n		// If so, load the Profile class and run it. 如果是的话，载入Profile类并运行它\r\n		if ($this-&gt;enable_profiler == TRUE)\r\n		{\r\n			$CI-&gt;load-&gt;library(\'profiler\');\r\n\r\n			if ( ! empty($this-&gt;_profiler_sections))\r\n			{\r\n				$CI-&gt;profiler-&gt;set_sections($this-&gt;_profiler_sections);\r\n			}\r\n\r\n			// If the output data contains closing &lt;/body&gt; and &lt;/html&gt; tags\r\n			// 如果输出数据中包含了HTML结束标签&lt;/body&gt;和&lt;/html&gt;的话，\r\n			// we will remove them and add them back after we insert the profile data\r\n			// 我们将会移除他们并在插入profile数据之后再添加上\r\n			if (preg_match(\"|&lt;/body&gt;.*?&lt;/html&gt;|is\", $output))\r\n			{\r\n				$output  = preg_replace(\"|&lt;/body&gt;.*?&lt;/html&gt;|is\", \'\', $output);\r\n				$output .= $CI-&gt;profiler-&gt;run();\r\n				$output .= \'&lt;/body&gt;&lt;/html&gt;\';\r\n			}\r\n			else\r\n			{\r\n				$output .= $CI-&gt;profiler-&gt;run();\r\n			}\r\n		}\r\n\r\n		// --------------------------------------------------------------------\r\n\r\n		// Does the controller contain a function named _output()?\r\n		// 判断控制器是否包含方法_output()\r\n		// If so send the output there.  Otherwise, echo it.\r\n		// 如果存在的话，调用控制器的_output()方法输出\r\n		// 否则直接输出\r\n		if (method_exists($CI, \'_output\'))\r\n		{\r\n			$CI-&gt;_output($output);\r\n		}\r\n		else\r\n		{\r\n			echo $output;  // Send it to the browser!\r\n		}\r\n\r\n		log_message(\'debug\', \"最终数据已发送到浏览器\");\r\n		log_message(\'debug\', \"当前执行时间: \".$elapsed);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Write a Cache File\r\n	 * 写一个缓存文件\r\n	 * @access	public\r\n	 * @param 	string\r\n	 * @return	void\r\n	 */\r\n	function _write_cache($output)\r\n	{\r\n		$CI =&amp; get_instance();\r\n		$path = $CI-&gt;config-&gt;item(\'cache_path\');//从配置文件获取缓存文件存放路径\r\n\r\n		$cache_path = ($path == \'\') ? APPPATH.\'cache/\' : $path;//缓存文件存放路径\r\n\r\n		if ( ! is_dir($cache_path) OR ! is_really_writable($cache_path))\r\n		{\r\n			log_message(\'error\', \"不能写入缓存文件: \".$cache_path);\r\n			return;\r\n		}\r\n\r\n		$uri =	$CI-&gt;config-&gt;item(\'base_url\').\r\n				$CI-&gt;config-&gt;item(\'index_page\').\r\n				$CI-&gt;uri-&gt;uri_string();\r\n\r\n		$cache_path .= md5($uri);\r\n		//以写创建的方式打开缓存文件\r\n		if ( ! $fp = @fopen($cache_path, FOPEN_WRITE_CREATE_DESTRUCTIVE))\r\n		{\r\n			log_message(\'error\', \"不能写入缓存文件: \".$cache_path);\r\n			return;\r\n		}\r\n		// 缓存文件的有效时间\r\n		$expire = time() + ($this-&gt;cache_expiration * 60);\r\n		// 对文件写入之前，首先取得对文件的写锁，这样，可以确保不是两个操作同时写入文件\r\n		// 文件的有效时间在文件内容的开头写入，格式是\"过期时间TS---&gt;\" + 缓存内容\r\n		if (flock($fp, LOCK_EX))//对文件取得写锁\r\n		{\r\n			fwrite($fp, $expire.\'TS---&gt;\'.$output);\r\n			flock($fp, LOCK_UN);//释放锁定\r\n		}\r\n		else\r\n		{\r\n			log_message(\'error\', \"不能安全锁定文件: \".$cache_path);\r\n			return;\r\n		}\r\n		fclose($fp);\r\n		@chmod($cache_path, FILE_WRITE_MODE);//改变缓存文件权限为0666（rw-rw-rw-)\r\n\r\n		log_message(\'debug\', \"已写入缓存文件: \".$cache_path);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Update/serve a cached file\r\n	 * 更新/提供缓存文件\r\n	 * @access	public\r\n	 * @param 	object	config class\r\n	 * @param 	object	uri class\r\n	 * @return	void\r\n	 */\r\n	function _display_cache(&amp;$CFG, &amp;$URI)\r\n	{\r\n		$cache_path = ($CFG-&gt;item(\'cache_path\') == \'\') ? APPPATH.\'cache/\' : $CFG-&gt;item(\'cache_path\');\r\n\r\n		// Build the file path.  The file name is an MD5 hash of the full URI\r\n		// 建立文件路径，文件名是MD5哈希后的完整URI\r\n		$uri =	$CFG-&gt;item(\'base_url\').\r\n				$CFG-&gt;item(\'index_page\').\r\n				$URI-&gt;uri_string;\r\n\r\n		$filepath = $cache_path.md5($uri);\r\n\r\n		if ( ! @file_exists($filepath))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		if ( ! $fp = @fopen($filepath, FOPEN_READ))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		flock($fp, LOCK_SH);//取得共享锁（读锁）\r\n\r\n		$cache = \'\';\r\n		if (filesize($filepath) &gt; 0)\r\n		{\r\n			$cache = fread($fp, filesize($filepath));//从文件中读取出所有内容\r\n		}\r\n\r\n		flock($fp, LOCK_UN);//解除锁定\r\n		fclose($fp);\r\n\r\n		// Strip out the embedded timestamp 去除嵌入的时间戳\r\n		if ( ! preg_match(\"/(\\d+TS---&gt;)/\", $cache, $match))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		// Has the file expired? If so we\'ll delete it. \r\n		// 判断文件是否过期，如果过期了，就删除文件\r\n		if (time() &gt;= trim(str_replace(\'TS---&gt;\', \'\', $match[\'1\'])))\r\n		{\r\n			if (is_really_writable($cache_path))\r\n			{\r\n				@unlink($filepath);//删除缓存文件\r\n				log_message(\'debug\', \"缓存文件已过期，已经删除\");\r\n				return FALSE;\r\n			}\r\n		}\r\n\r\n		// Display the cache 显示缓存内容\r\n		$this-&gt;_display(str_replace($match[\'0\'], \'\', $cache));\r\n		log_message(\'debug\', \"当前缓存文件内容已经发送到客户浏览器.\");\r\n		return TRUE;\r\n	}\r\n\r\n\r\n}</pre></p>','<p>Output.php文件负责了CI视图渲染后的缓存以及内容展示，系统执行时间以及内存占用也在该类中处理后加入到最终页面。</p><p><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * Output Class\r\n *\r\n * Responsible for sending final output to browser\r\n * 负责发送最终输出到浏览器\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Output\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/output.html\r\n */\r\nclass CI_Output {\r\n\r\n	/**\r\n	 * Current output string\r\n	 * 当前输出字符串\r\n	 * @var string\r\n	 * @acces','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(187,'CodeIgniter框架 学习笔记 （12） DB函数-数据库访问“接口”','<p>DB.php中只有一个函数，就是DB函数，该函数实现了CI的数据库访问。</p>\r\n<p>该函数在控制器或者是模型中，通过调用$this-&gt;load-&gt;database();完成初始化，通过$this-&gt;db-&gt;操作 可以执行对数据库的操作。</p>\r\n<p>这里之所以能够通过$this-&gt;load-&gt;database()方式调用数据库而不是直接调用DB函数，是通过在Loader类中的database()方法完成的，当数据库已经实例化过的时候，$this-&gt;load-&gt;database()将不会再次实例化，这样保证了在每次请求执行过程中，只有一个数据库实例在运行。</p>\r\n<p>DB函数首先判断是否传入数据库连接参数，如果没有的话，回去读取database.php配置文件，从配置文件中读取配置，之后，会根据是否启用Active Record模式动态的创建每个数据库的驱动类的父类<span style=\"color:#e53333;\"><b>CI_DB</b></span>，该类直接（不启用active record模式） 或者间接（启用active record，则继承自CI_DB_active_record， 而CI_DB_active_record又继承CI_DB_driver）继承自CI_DB_driver。最后对数据库进行初始化，返回DB对象。</p>\r\n<p></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * Initialize the database\r\n * 初始化数据库\r\n * @category	Database\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/database/\r\n * @param 	string\r\n * @param 	bool	Determines if active record should be used or not 决定是否active record应该被使用\r\n */\r\nfunction &amp;DB($params = \'\', $active_record_override = NULL)\r\n{\r\n	// Load the DB config file if a DSN string wasn\'t passed\r\n	// 如果没有传递过来DSN参数的话，载入DB配置文件\r\n	if (is_string($params) AND strpos($params, \'://\') === FALSE)\r\n	{\r\n		// Is the config file in the environment folder? \r\n		// 是否配置文件在配置的环境文件夹中\r\n		if ( ! defined(\'ENVIRONMENT\') OR ! file_exists($file_path = APPPATH.\'config/\'.ENVIRONMENT.\'/database.php\'))\r\n		{\r\n			if ( ! file_exists($file_path = APPPATH.\'config/database.php\'))\r\n			{\r\n				show_error(\'The configuration file database.php does not exist.\');\r\n			}\r\n		}\r\n\r\n		include($file_path);\r\n\r\n		if ( ! isset($db) OR count($db) == 0)\r\n		{\r\n			show_error(\'在数据库配置文件中没有定义数据库的连接配置.\');\r\n		}\r\n\r\n		if ($params != \'\')\r\n		{\r\n			$active_group = $params;\r\n		}\r\n\r\n		if ( ! isset($active_group) OR ! isset($db[$active_group]))\r\n		{\r\n			show_error(\'你指定了一个不可用的数据库连接组.\');\r\n		}\r\n\r\n		$params = $db[$active_group];\r\n	}\r\n	elseif (is_string($params))\r\n	{\r\n\r\n		/* parse the URL from the DSN string\r\n		 *  从URL中解析DSN\r\n		 *  Database settings can be passed as discreet\r\n		 *  数据库配置可以作为参数或者是在第一个参数中作为数据源名称传递过来\r\n		 *  parameters or as a data source name in the first\r\n		 *  parameter. DSNs must have this prototype:\r\n		 *  DSN必须有这个原型：\r\n		 *  $dsn = \'driver://username:password@hostname/database\';\r\n		 */\r\n		// parse_url() 解析 URL，返回其组成部分\r\n		if (($dns = @parse_url($params)) === FALSE)\r\n		{\r\n			show_error(\'数据库连接字符串不可用\');\r\n		}\r\n\r\n		// rawurldecode()已编码的 URL 字符串进行解码\r\n		$params = array(\r\n							\'dbdriver\'	=&gt; $dns[\'scheme\'],\r\n							\'hostname\'	=&gt; (isset($dns[\'host\'])) ? rawurldecode($dns[\'host\']) : \'\',\r\n							\'username\'	=&gt; (isset($dns[\'user\'])) ? rawurldecode($dns[\'user\']) : \'\',\r\n							\'password\'	=&gt; (isset($dns[\'pass\'])) ? rawurldecode($dns[\'pass\']) : \'\',\r\n							\'database\'	=&gt; (isset($dns[\'path\'])) ? rawurldecode(substr($dns[\'path\'], 1)) : \'\'\r\n						);\r\n\r\n		// were additional config items set?\r\n		// 是否设置了额外的配置项\r\n		if (isset($dns[\'query\']))\r\n		{\r\n			// parse_str()解析查询字符串到变量中\r\n			parse_str($dns[\'query\'], $extra);\r\n\r\n			foreach ($extra as $key =&gt; $val)\r\n			{\r\n				// booleans please\r\n				// 把字符串转换true，false转换为真正boolean值\r\n				if (strtoupper($val) == \"TRUE\")\r\n				{\r\n					$val = TRUE;\r\n				}\r\n				elseif (strtoupper($val) == \"FALSE\")\r\n				{\r\n					$val = FALSE;\r\n				}\r\n\r\n				$params[$key] = $val;\r\n			}\r\n		}\r\n	}\r\n\r\n	// No DB specified yet?  Beat them senseless...\r\n	// 没有指定要连接的数据库驱动\r\n	if ( ! isset($params[\'dbdriver\']) OR $params[\'dbdriver\'] == \'\')\r\n	{\r\n		show_error(\'没有指定要连接的数据库类型.\');\r\n	}\r\n\r\n	// Load the DB classes.  Note: Since the active record class is optional\r\n	// 载入DB类。 注意： 因为active record类是可选的，我们需要动态的去创建一个继承适当的父类（基于我们是否使用active record类）\r\n	// we need to dynamically create a class that extends proper parent class\r\n	// based on whether we\'re using the active record class or not.\r\n	// Kudos to Paul for discovering this clever use of eval()\r\n	// \r\n\r\n	if ($active_record_override !== NULL)\r\n	{\r\n		$active_record = $active_record_override;\r\n	}\r\n\r\n	require_once(BASEPATH.\'database/DB_driver.php\');\r\n\r\n	if ( ! isset($active_record) OR $active_record == TRUE)//启用active_record\r\n	{\r\n		require_once(BASEPATH.\'database/DB_active_rec.php\');\r\n\r\n		if ( ! class_exists(\'CI_DB\'))\r\n		{\r\n			eval(\'class CI_DB extends CI_DB_active_record { }\');//动态创建CI_DB类继承自CI_DB_active_record类\r\n		}\r\n	}\r\n	else\r\n	{\r\n		if ( ! class_exists(\'CI_DB\'))\r\n		{\r\n			eval(\'class CI_DB extends CI_DB_driver { }\'); //动态创建CI_DB直接继承自CI_DB_driver\r\n		}\r\n	}\r\n\r\n	require_once(BASEPATH.\'database/drivers/\'.$params[\'dbdriver\'].\'/\'.$params[\'dbdriver\'].\'_driver.php\');\r\n\r\n	// Instantiate the DB adapter \r\n	// 实例化DB适配器\r\n	$driver = \'CI_DB_\'.$params[\'dbdriver\'].\'_driver\';\r\n	$DB = new $driver($params);\r\n\r\n	if ($DB-&gt;autoinit == TRUE)//在DB_driver中的字段，用于指定是否要对数据库驱动进行初始化操作\r\n	{\r\n		$DB-&gt;initialize();\r\n	}\r\n\r\n	if (isset($params[\'stricton\']) &amp;&amp; $params[\'stricton\'] == TRUE)\r\n	{\r\n		$DB-&gt;query(\'SET SESSION sql_mode=\"STRICT_ALL_TABLES\"\');\r\n	}\r\n\r\n	return $DB;\r\n}</pre>注意的是，这里返回的是引用&amp;DB(...),因此接收返回值也应该使用如$CI-&gt;db =&amp; DB($params, $active_record);的形式，这样可以减少对数据库对象的复制，节省内存，提高效率。<p></p>\r\n<p>&nbsp;</p>','<p>DB.php中只有一个函数，就是DB函数，该函数实现了CI的数据库访问。</p><p>该函数在控制器或者是模型中，通过调用$this-&gt;load-&gt;database();完成初始化，通过$this-&gt;db-&gt;操作 可以执行对数据库的操作。</p><p>这里之所以能够通过$this-&gt;load-&gt;database()方式调用数据库而不是直接调用DB函数，是通过在Loader类中的database()方法完成的，当数据库已经实例化过的时候，$this-&gt;load-&gt;database()将不会再次实例化，这样保证了在每次请求执行过程中，只有一个数据库实例在运行。</p><p>DB函数首先判断是否传入数据库连接参数，如果没有的话，回去读取database.php配置文件，从配置文件中读取配置，之后，会根据是否启用Active Record模式动态的创建每个数据库的驱动类的父类<span style=\"color:#e53333;\"><b>CI_DB</b></span>，该类直接（不启用active record模式） 或者间接（启用act','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(188,'javascript学习笔记','<p>1. 未经初始化的变量，保存特殊值--undefined</p>\n<p>2. 通过var定义的变量为局部变量，在作用域结束后自动销毁，否则为全局变量</p>\n<p>3. ECMAScript中有5种简单的数据类型：undefined， null ， boolean ，number， string。还有一种复杂数据类型object</p>\n<p>4. typeof操作符可能返回的值:undefined ， boolean ， string ， number ， object ， function 。 函数在ECMAScript中是对象，不是数据类型。通过typeof操作符区分函数和其他对象是有必要的。</p>\n<p>5. 从逻辑角度讲， null值表示一个空对象指针，这正是使用typeof检测null值会返回object的原因，如果定义的变量准备用来保存对象，那么最好是把对象初始化为null而不是其他值，只要检查null值就可以知道相应的变量是否已经保存了一个对象的引用了。undefined值是派生自null的，因此null == undefined是true的。</p>\n<p>6. Boolean类型的字面值true和false是区分大小写的，&nbsp; &nbsp; True和False以及其混合方式都不是Boolean值，只是标识符。任何值要转为boolean值，可以使用Boolean()函数，具体转换规则：</p>\n<p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/2ace7e0ddc324f941d9408346ec0013220121204012625.jpg\" id=\"ematt:12\"><img src=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/2ace7e0ddc324f941d9408346ec0013220121204012625.jpg\" width=\"838\" height=\"170\" title=\"点击查看原图\" alt=\"点击查看原图\" border=\"0\" /></a></p>\n<p>7.NaN即非数值，是一个特殊的额数值，这个数值用于表示一个本来应该返回数值的操作数未返回数值的情况，这样就不会抛出错误了，任何涉及NaN的操作都会返回NaN， NaN不与任何值相等，即使是NaN本身，判断一个值是否是NaN，采用函数isNaN(参数),只要参数不能转换成数字，就会返回true（包括字符串，也会返回true）。</p>\n<p>8. 转换为数字有三种方式：Number（） ， parseInt（） ， parseFloat（）。</p>\n<p>9. 在js中，字符串用单引号与双引号是完全相同的，这点与PHP是不同的。</p>\n<p>&nbsp;---------------------------------------------------------</p>\n<p>1. 打开一个窗口</p>\n<p>window.open(url , target, feature, replace)</p>\n<p>下面实例，首先在test_js_1.html中单击，弹出sub.html子页面，子页面关闭，并回调test_js_1.html页面，同时，test_js_1.html也可以关闭sub.html页面。</p>\n<p>首先，test_js_1.html中添加两个按钮:</p>\n<pre class=\"brush:html; toolbar: true; auto-links: true;\">&lt;button onclick=\"openDlg(\'ithink\')\" &gt;打开对话框&lt;/button&gt;\n&lt;button onclick=\"closeDlg(\'ithink\')\" &gt;关闭对话框&lt;/button&gt;</pre><p></p>\n<p>添加处理函数：<pre class=\"brush:js; toolbar: true; auto-links: true;\">	var handler = null;\n	function openDlg(id){\n		handler = window.open(\"sub.html\", id );\n		showMessage(\"打开对话框\");\n	}\n	function closeDlg(id){\n		showMessage(\"关闭对话框\");\n		handler.close();\n	}\n	function showMessage(msg){\n		var result = document.getElementById(\'result\');\n		result.innerHTML = result.innerHTML + \"&lt;br /&gt;\" + msg;\n	}</pre></p>\n<p>&nbsp;添加一个div，用于显示结果：</p>\n<p><pre class=\"brush:html; toolbar: true; auto-links: true;\">&lt;div id=\"result\"&gt;&lt;/div&gt;</pre>然后，创建第二个页面，sub.html，添加下面元素：</p>\n<p><pre class=\"brush:html; toolbar: true; auto-links: true;\">&lt;script type=\"text/javascript\"&gt;\n	function closeDlg(){\n		window.opener.showMessage(\"子页面调用父页面\");\n		window.close();\n	}\n&lt;/script&gt;\n\n&lt;button onclick=\"closeDlg()\" &gt;关闭对话框&lt;/button&gt;</pre>这样，就可以了。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>','<p>1. 未经初始化的变量，保存特殊值--undefined</p>\n<p>2. 通过var定义的变量为局部变量，在作用域结束后自动销毁，否则为全局变量</p>\n<p>3. ECMAScript中有5种简单的数据类型：undefined， null ， boolean ，number， string。还有一种复杂数据类型object</p>\n<p>4. typeof操作符可能返回的值:undefined ， boolean ， string ， number ， object ， function 。 函数在ECMAScript中是对象，不是数据类型。通过typeof操作符区分函数和其他对象是有必要的。</p>\n<p>5. 从逻辑角度讲， null值表示一个空对象指针，这正是使用typeof检测null值会返回object的原因，如果定义的变量准备用来保存对象，那么最好是把对象初始化为null而不是其他值，只要检查null值就可以知道相应的变量是否已经保存了一个对象的引用了。undefined值是派生自null的，因此null == undefined是true的。</p>\n<p>6','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(189,'【转】ubuntu 12.10安装最新Nvidia显卡驱动的问题','<p><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">1.去Nvidia官网[</span><a href=\"http://www.nvidia.cn/page/home.html\" target=\"_blank\" style=\"color:#1d53bf;outline-width:0px;text-decoration:none;font-family:宋体;font-size:14px;line-height:24px;\">http://www.nvidia.cn/page/home.html</a><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">]找到对应你自己显卡的最新稳定版驱动,并下载的到磁盘Nvidia-*.run。</span></p>\r\n<p><span style=\"font-family:宋体;\"><span style=\"font-size:14px;line-height:24px;\">【对于联想Y450等，在64位系统下，可以采用以下命令下载，这样就不用去官网查询了：</span></span></p>\r\n<p></p>\r\n<p><span style=\"font-size:14px;line-height:24px;color:#e53333;\">wget <a href=\"http://cn.download.nvidia.com/XFree86/Linux-x86_64/310.19/NVIDIA-Linux-x86_64-310.19.run\" target=\"_blank\">http://cn.download.nvidia.com/XFree86/Linux-x86_64/310.19/NVIDIA-Linux-x86_64-310.19.run</a></span></p>\r\n<p></p>\r\n<p><span style=\"font-family:宋体;\"><span style=\"font-size:14px;line-height:24px;\">】</span></span></p>\r\n<span style=\"font-family:宋体;font-size:14px;line-height:24px;\">2.准备安装，终端键入：&nbsp;</span><br style=\"font-family:宋体;font-size:14px;line-height:24px;\" />\r\n<span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><span class=\"edit_font_normal\">sudo geidt&nbsp;<span class=\"edit_font_normal\">/</span>etc<span class=\"edit_font_normal\">/</span>modprobe.<span class=\"edit_font_normal\">d</span><span class=\"edit_font_normal\">/</span>blacklist.<span class=\"edit_font_normal\">conf</span></span></span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><br />\r\n</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">加入下列几行</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><br style=\"font-family:宋体;font-size:14px;line-height:24px;\" />\r\n<span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">b</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">lacklist vga16f</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">b</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><br style=\"font-family:宋体;font-size:14px;line-height:24px;\" />\r\n<span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">blacklist nouveau</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><br />\r\n</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">blacklist rivafb</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><br />\r\n</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">blacklist nvidiafb</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><br />\r\n</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">blacklist rivatv</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><br />\r\n</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">（！！！这里有行空行）</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><br />\r\n</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">保存关闭。</span><br style=\"font-family:宋体;font-size:14px;line-height:24px;\" />\r\n<span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">以此屏蔽掉冲突</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">的模块。</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><br style=\"font-family:宋体;font-size:14px;line-height:24px;\" />\r\n<span style=\"font-family:宋体;font-size:14px;line-height:24px;\">3.&nbsp;</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">删除以前安装的</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">nvidia</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">驱动，还有系统自带的</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">nouveau</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">驱动。<br />\r\n</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">切换</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">进入一个虚拟终端，然后再键入</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">删除驱动命令</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">：&nbsp;</span><br style=\"font-family:宋体;font-size:14px;line-height:24px;\" />\r\n<span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><span class=\"edit_font_normal\">sudo apt<span class=\"edit_font_normal\">-</span>get&nbsp;<span class=\"edit_font_normal\">--</span>purge remove nvidia<span class=\"edit_font_normal\">-*</span></span></span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><br />\r\n</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">sudo apt<span class=\"edit_font_normal\">-</span>get&nbsp;<span class=\"edit_font_normal\">--</span>purge remove xserver<span class=\"edit_font_normal\">-</span>xorg<span class=\"edit_font_normal\">-</span>video<span class=\"edit_font_normal\">-</span>nouveau</span><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">&nbsp;</span><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><br />\r\n</span><p><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\">如果驱动无法删除，则先执行：</span></p>\r\n<p><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><span class=\"edit_font_normal\"><span class=\"edit_font_normal\">udo apt<span class=\"edit_font_normal\">-</span>get&nbsp;<span class=\"edit_font_normal\">/</span>etc<span class=\"edit_font_normal\">/</span>init.<span class=\"edit_font_normal\">d</span><span class=\"edit_font_normal\">/</span>gdm stop</span></span><span style=\"color:#000000;\">&nbsp;</span><span class=\"edit_font_normal\"><br />\r\n</span><span class=\"edit_font_normal\"><span class=\"edit_font_normal\">sudo apt<span class=\"edit_font_normal\">-</span>get&nbsp;<span class=\"edit_font_normal\">/</span>etc<span class=\"edit_font_normal\">/</span>init.<span class=\"edit_font_normal\">d</span><span class=\"edit_font_normal\">/</span>li</span></span><span style=\"color:#000000;\">ght</span><span class=\"edit_font_normal\"><span class=\"edit_font_normal\">dm stop</span></span><span style=\"color:#000000;\">&nbsp;</span><span class=\"edit_font_normal\">#</span><span style=\"color:#000000;\">有的是这个关闭的&nbsp;</span><br style=\"color:#000000;\" />\r\n<span class=\"edit_font_normal\">桌面消失，</span><span class=\"edit_font_normal\">然后再键入上面的删除驱动命令</span><span class=\"edit_font_normal\">。<br />\r\n</span><span style=\"color:#000000;\">重启。</span><br style=\"color:#000000;\" />\r\n<span class=\"edit_font_normal\"><span class=\"edit_font_normal\">sudo apt<span class=\"edit_font_normal\">-</span>get&nbsp;<span class=\"edit_font_normal\">/</span>etc<span class=\"edit_font_normal\">/</span>init.<span class=\"edit_font_normal\">d</span><span class=\"edit_font_normal\">/</span>gdm stop</span></span><span style=\"color:#000000;\">&nbsp;</span><span class=\"edit_font_normal\"><br />\r\n</span><span class=\"edit_font_normal\"><span class=\"edit_font_normal\">sudo apt<span class=\"edit_font_normal\">-</span>get&nbsp;<span class=\"edit_font_normal\">/</span>etc<span class=\"edit_font_normal\">/</span>init.<span class=\"edit_font_normal\">d</span><span class=\"edit_font_normal\">/</span>li</span></span><span style=\"color:#000000;\">ght</span><span class=\"edit_font_normal\"><span class=\"edit_font_normal\">dm stop</span></span><span style=\"color:#000000;\">&nbsp;</span><span class=\"edit_font_normal\">#</span><span style=\"color:#000000;\">有的是这个关闭的&nbsp;</span><br style=\"color:#000000;\" />\r\n<span style=\"color:#000000;\">4.安装驱动</span><br style=\"color:#000000;\" />\r\n<span style=\"color:#000000;\">切换进入文字终端；</span><br style=\"color:#000000;\" />\r\n<span style=\"color:#000000;\">sudo su #进入root；</span><br style=\"color:#000000;\" />\r\n<span style=\"color:#000000;\">cd 进入你下载驱动文件的目录；</span><br style=\"color:#000000;\" />\r\n<span style=\"color:#000000;\">sh N【Tab】键自动出现 Nvidia-***.run 回车。</span><br style=\"color:#000000;\" />\r\n<span class=\"edit_font_normal\"><span class=\"edit_font_normal\">sudo apt<span class=\"edit_font_normal\">-</span>get&nbsp;<span class=\"edit_font_normal\">/</span>etc<span class=\"edit_font_normal\">/</span>init.<span class=\"edit_font_normal\">d</span><span class=\"edit_font_normal\">/</span>gdm</span></span><span style=\"color:#000000;\">&nbsp;restart</span><span class=\"edit_font_normal\"><br />\r\n</span><span class=\"edit_font_normal\"><span class=\"edit_font_normal\">sudo apt<span class=\"edit_font_normal\">-</span>get&nbsp;<span class=\"edit_font_normal\">/</span>etc<span class=\"edit_font_normal\">/</span>init.<span class=\"edit_font_normal\">d</span><span class=\"edit_font_normal\">/</span>li</span></span><span style=\"color:#000000;\">ght</span><span class=\"edit_font_normal\"><span class=\"edit_font_normal\">dm res</span></span><span style=\"color:#000000;\">tart&nbsp;</span><span class=\"edit_font_normal\">#</span><span style=\"color:#000000;\">有的是这个关闭的&nbsp;</span><br style=\"color:#000000;\" />\r\n<span style=\"color:#000000;\">OK!安装完毕。</span><br style=\"color:#000000;\" />\r\n<br style=\"color:#000000;\" />\r\n<span style=\"color:#000000;\">可能存在问题：</span><br style=\"color:#000000;\" />\r\n</span></p>\r\n<p><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><span style=\"color:#000000;\">系统详细信息里面没有识别到显卡驱动</span></span></p>\r\n<p><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><span style=\"color:#000000;\">&nbsp; &nbsp; &nbsp; &nbsp; 可以这样：sudo apt-get install mesa-utils</span></span></p>\r\n<p><span class=\"edit_font_normal\" style=\"color:#333333;font-family:宋体;font-size:14px;line-height:24px;\"><span style=\"color:#000000;\"><br />\r\n</span></span></p>\r\n<p><span style=\"font-family:宋体;\"><span style=\"font-size:14px;line-height:24px;\">转自：<a href=\"http://tieba.baidu.com/p/2018921828\" target=\"_blank\">百度贴吧</a></span></span></p>\r\n<p></p>','<p><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">1.去Nvidia官网[</span><a href=\"http://www.nvidia.cn/page/home.html\" target=\"_blank\" style=\"color:#1d53bf;outline-width:0px;text-decoration:none;font-family:宋体;font-size:14px;line-height:24px;\">http://www.nvidia.cn/page/home.html</a><span style=\"font-family:宋体;font-size:14px;line-height:24px;\">]找到对应你自己显卡的最新稳定版驱动,并下载的到磁盘Nvidia-*.run。</span></p>\r\n<p><span style=\"font-family:宋体;\"><span style=\"font-size:14px;line-height:24px;\">【对于联想Y450等，在','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(190,'CodeIgniter框架 学习笔记 （13） Config.php配置管理','<p>Config.php主要负责配置文件的读取，以下是官方手册的描述：</p>\r\n<p><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">分析配置文件</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">默认情况下，CodeIgniter已经有一个主要的配置文件，位于<samp style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#480091;font-weight:bold;\">application/config/config.php</samp>。如果你用文本编辑器打开你会看到配置项目被存储在一个叫<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">$config</var>的数组里。</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">您可以添加您自己的配置项目到这个文件里，或者您更愿意让您自己的配置项目与原配置项目分开（assuming you even need config items），简单的创建一个文件并保存到<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">config</dfn>这个文件夹里就行了。</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><strong>提示:</strong>&nbsp;如果你想建立一个和主要配置文件一样格式的配置文件，把你的配置项目建立在一个名为<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">$config</var>的数组中,即使配置文件中有相同的数组名，CodeIgniter也能智能的管理这些文件而不会发生冲突.</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">加载配置文件</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><strong>Note:</strong>&nbsp;CodeIgniter 会自动加载主要的配置文件(<samp style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#480091;font-weight:bold;\">application/config/config.php</samp>), 所以你只需要加载你自己创建的配置文件</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">有两种方法来加载配置文件:</p>\r\n<ol style=\"color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><li style=\"margin-bottom:9px;\"><strong>手动加载</strong><p style=\"margin-top:12px;margin-bottom:12px;\">为了加载一个你自定义的配置文件，你需要在&nbsp;<a href=\"http://codeigniter.org.cn/user_guide/general/controllers.html\" style=\"color:#0134c5;background-color:transparent;text-decoration:initial;outline-style:none;\">controller</a>&nbsp;中这样做:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;\">$this-&gt;config-&gt;load(\'<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">filename</var>\');</code><p style=\"margin-top:12px;margin-bottom:12px;\">这里的&nbsp;<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">filename</var>&nbsp;是你自定义的配置文件的文件名，这个文件名没有 .php 的扩展名.</p>\r\n<p style=\"margin-top:12px;margin-bottom:12px;\">如果你需要加载多个自定义配置文件，一般情况下它们会被合并成一个数组。然而，如果在不同的配置文件中存在同名的索引，那么会发生冲突。为了避免这个问题，你可以把第二个参数设置为<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">TRUE</kbd>&nbsp;，这可以使每个配置文件的内容存储在一个单独的数组中，数组的索引就是配置文件的文件名。请看下面的例子:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;\">// 用这样的方式保存为一个数组: $this-&gt;config[\'blog_settings\'] = $config<br />\r\n$this-&gt;config-&gt;load(\'<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">blog_settings</var>\',&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">TRUE</kbd>);</code><p style=\"margin-top:12px;margin-bottom:12px;\">请阅读下面名为&nbsp;<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">获取配置元素</dfn>&nbsp;的部分以了解在这样的方式下如何取得配置信息</p>\r\n<p style=\"margin-top:12px;margin-bottom:12px;\">第三个参数允许屏蔽当配置文件不存在时产生的错误信息:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;\">$this-&gt;config-&gt;load(\'<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">blog_settings</var>\',&nbsp;<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">FALSE</dfn>,&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">TRUE</kbd>);</code></li>\r\n<li style=\"margin-bottom:9px;\"><strong>自动加载</strong><p style=\"margin-top:12px;margin-bottom:12px;\">如果你需要一个特定配置文件在全局范围内都能使用，你可以使系统自动加载它。要自动加载配置，请打开文件&nbsp;<strong>autoload.php</strong>，它在&nbsp;<samp style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#480091;font-weight:bold;\">application/config/autoload.php</samp>，然后按照文件中的提示增加你想要自动加载的配置文件。</p>\r\n</li>\r\n</ol>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">获取配置元素</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">从配置文件中检索元素，使用下面的函数:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;config-&gt;item(\'<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">item name</var>\');</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">其中&nbsp;<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">item name</var>&nbsp;是 $config 数组中你期望检索的索引. 例如，要获得您选择的语言，你可以这样做:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$lang = $this-&gt;config-&gt;item(\'language\');</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">当试图获取的元素不存在时，此函数返回 FALSE (boolean) 。</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">如果你为了用具体的索引来声明配置数组(避免上述索引重名问题)而在函数&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">$this-&gt;config-&gt;load</kbd>&nbsp;中使用了第二个参数，你可以通过指定函数&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">$this-&gt;config-&gt;item()</kbd>&nbsp;的第二个参数为特定索引名来获取相关的配置元素。例如:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">// 载入一个名为 blog_settings.php 的配置文件，然后把它声明为一个索引为 \"blog_settings\" 的数组<br />\r\n$this-&gt;config-&gt;load(\'<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">blog_settings</var>\',&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">TRUE</kbd>);<br />\r\n<br />\r\n// 在数组 blog_settings 中获取名为 site_name 的配置元素<br />\r\n$site_name = $this-&gt;config-&gt;item(\'<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">site_name</dfn>\', \'<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">blog_settings</var>\');<br />\r\n<br />\r\n// 另外一种方式:<br />\r\n$blog_config = $this-&gt;config-&gt;item(\'<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">blog_settings</var>\');<br />\r\n$site_name = $blog_config[\'site_name\'];</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">设置一项元素</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">如果你想动态设置/改变一个现有的配置元素，你可以使用:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;config-&gt;set_item(\'<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">item_name</var>\', \'<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">item_value</var>\');</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">其中&nbsp;<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">item_name</var>&nbsp;是你希望改变的 $config 数组的索引,&nbsp;<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">item_value</var>&nbsp;是改变后的值.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><strong>注意：</strong>这里修改的配置元素并不是改变配置文件(application/config/config.php)的值，仅改变当前<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">$this-&gt;config-&gt;item()</var>方法取到的值</p>\r\n<a name=\"environments\" style=\"color:#0134c5;outline-style:none;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"></a><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">环境</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">你可以根据当前的开发/服务环境读取不同的配置文件.&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">ENVIRONMENT</kbd>&nbsp;常量在 index.php 定义, 在&nbsp;<a href=\"http://codeigniter.org.cn/user_guide/general/environments.html\" style=\"color:#0134c5;background-color:transparent;text-decoration:initial;outline-style:none;\">处理多环境</a>&nbsp;一章有详细的描述和说明.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">一个特定环境的配置文件, 需要按此路径创建或者复制一个文件： application/config/{ENVIRONMENT}/{FILENAME}.php</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">例如，要创建一个仅\'production\'环境的 config.php, 你应该:</p>\r\n<ol style=\"color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><li style=\"margin-bottom:9px;\">创建文件夹：application/config/production/</li>\r\n<li style=\"margin-bottom:9px;\">复制现有的 config.php 到上面的文件夹</li>\r\n<li style=\"margin-bottom:9px;\">编辑 application/config/production/config.php 设定你在\'production\'环境所需的设置</li>\r\n</ol>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">当你设置&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">ENVIRONMENT</kbd>&nbsp;常量为 \'production\', 你刚创建的仅\'production\'环境的 config.php 配置文件将被加载。</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">你可以放置以下配置文件到特定环境的文件夹:</p>\r\n<ul style=\"list-style-image:url(http://codeigniter.org.cn/images/user_guide/arrow.gif);margin:10px 0px 12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><li style=\"margin-bottom:9px;\">默认的 CodeIgniter 配置文件</li>\r\n<li style=\"margin-bottom:9px;\">你自己的用户配置文件</li>\r\n</ul>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><strong>注意:</strong>&nbsp;CodeIgniter 会先尝试加载当前环境的配置文件。 如果文件不存在，将加载全局配置文件，例如 (<samp style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#480091;font-weight:bold;\">application/config/</samp>) 。 这意味着你没有必要把&nbsp;<strong>所有的</strong>配置文件放在特定环境的文件夹里， − 仅仅把各环境不同的放进去就行了。</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">辅助函数</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">配置类有以下辅助函数:</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">$this-&gt;config-&gt;site_url();</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">该函数得到你网站的 URL，其中包含了你在 config 文件中设置的 \"index\" 的值。</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">$this-&gt;config-&gt;base_url();</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">该函数返回站点的根 URL，可以在这个函数后拼接一个 URL 路径，用以生成 CSS 或图片文件的 URL。</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">以上两个函数一般通过<a href=\"http://codeigniter.org.cn/user_guide/helpers/url_helper.html\" style=\"color:#0134c5;background-color:transparent;text-decoration:initial;outline-style:none;\">URL 辅助函数</a>中相应的函数（site_url() 和 base_url()）调用。</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">$this-&gt;config-&gt;system_url();</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">该函数得到&nbsp;<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">system 文件夹</dfn>的 URL。</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"></p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * CodeIgniter Config Class\r\n *\r\n * This class contains functions that enable config files to be managed\r\n * 这个类包含了管理配置文件的方法\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Libraries\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/config.html\r\n */\r\nclass CI_Config {\r\n\r\n	/**\r\n	 * List of all loaded config values\r\n	 * 所有载入的配置值列表\r\n	 * @var array\r\n	 */\r\n	var $config = array();\r\n	/**\r\n	 * List of all loaded config files\r\n	 * 已经载入的配置文件列表\r\n	 * @var array\r\n	 */\r\n	var $is_loaded = array();\r\n	/**\r\n	 * List of paths to search when trying to load a config file\r\n	 * 载入配置文件时要搜索的路径\r\n	 * @var array\r\n	 */\r\n	var $_config_paths = array(APPPATH);\r\n\r\n	/**\r\n	 * Constructor\r\n	 * 构造函数\r\n	 * Sets the $config data from the primary config.php file as a class variable\r\n	 * 从主config.php文件读取设置$config数据\r\n	 * @access   public\r\n	 * @param   string	the config file name\r\n	 * @param   boolean  if configuration values should be loaded into their own section\r\n	 * @param   boolean  true if errors should just return false, false if an error message should be displayed\r\n	 * @return  boolean  if the file was successfully loaded or not\r\n	 */\r\n	function __construct()\r\n	{\r\n		$this-&gt;config =&amp; get_config();\r\n		log_message(\'debug\', \"Config Class Initialized\");\r\n\r\n		// Set the base_url automatically if none was provided\r\n		// 如果base_url没有设置的话，自动设置一个\r\n		if ($this-&gt;config[\'base_url\'] == \'\')\r\n		{\r\n			if (isset($_SERVER[\'HTTP_HOST\']))\r\n			{\r\n				$base_url = isset($_SERVER[\'HTTPS\']) &amp;&amp; strtolower($_SERVER[\'HTTPS\']) !== \'off\' ? \'https\' : \'http\';\r\n				$base_url .= \'://\'. $_SERVER[\'HTTP_HOST\'];\r\n				$base_url .= str_replace(basename($_SERVER[\'SCRIPT_NAME\']), \'\', $_SERVER[\'SCRIPT_NAME\']);\r\n			}\r\n\r\n			else\r\n			{\r\n				$base_url = \'http://localhost/\';\r\n			}\r\n\r\n			$this-&gt;set_item(\'base_url\', $base_url);\r\n		}\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Load Config File\r\n	 * z载入配置文件\r\n	 * @access	public\r\n	 * @param	string	the config file name 配置文件名\r\n	 * @param   boolean  if configuration values should be loaded into their own section \r\n	 * @param   boolean  true if errors should just return false, false if an error message should be displayed\r\n	 * @return	boolean	if the file was loaded correctly\r\n	 */\r\n	function load($file = \'\', $use_sections = FALSE, $fail_gracefully = FALSE)\r\n	{\r\n		$file = ($file == \'\') ? \'config\' : str_replace(\'.php\', \'\', $file);\r\n		$found = FALSE;\r\n		$loaded = FALSE;\r\n\r\n		$check_locations = defined(\'ENVIRONMENT\')\r\n			? array(ENVIRONMENT.\'/\'.$file, $file)\r\n			: array($file);\r\n\r\n		foreach ($this-&gt;_config_paths as $path)\r\n		{\r\n			foreach ($check_locations as $location)\r\n			{\r\n				$file_path = $path.\'config/\'.$location.\'.php\';\r\n\r\n				if (in_array($file_path, $this-&gt;is_loaded, TRUE))\r\n				{\r\n					$loaded = TRUE;\r\n					continue 2;\r\n				}\r\n\r\n				if (file_exists($file_path))\r\n				{\r\n					$found = TRUE;\r\n					break;\r\n				}\r\n			}\r\n\r\n			if ($found === FALSE)\r\n			{\r\n				continue;\r\n			}\r\n\r\n			include($file_path);\r\n\r\n			if ( ! isset($config) OR ! is_array($config))\r\n			{\r\n				if ($fail_gracefully === TRUE)\r\n				{\r\n					return FALSE;\r\n				}\r\n				show_error(\'Your \'.$file_path.\' file does not appear to contain a valid configuration array.\');\r\n			}\r\n\r\n			if ($use_sections === TRUE)\r\n			{\r\n				if (isset($this-&gt;config[$file]))\r\n				{\r\n					$this-&gt;config[$file] = array_merge($this-&gt;config[$file], $config);\r\n				}\r\n				else\r\n				{\r\n					$this-&gt;config[$file] = $config;\r\n				}\r\n			}\r\n			else\r\n			{\r\n				$this-&gt;config = array_merge($this-&gt;config, $config);\r\n			}\r\n\r\n			$this-&gt;is_loaded[] = $file_path;\r\n			unset($config);\r\n\r\n			$loaded = TRUE;\r\n			log_message(\'debug\', \'Config file loaded: \'.$file_path);\r\n			break;\r\n		}\r\n\r\n		if ($loaded === FALSE)\r\n		{\r\n			if ($fail_gracefully === TRUE)\r\n			{\r\n				return FALSE;\r\n			}\r\n			show_error(\'The configuration file \'.$file.\'.php does not exist.\');\r\n		}\r\n\r\n		return TRUE;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Fetch a config file item\r\n	 * 获取一个配置文件项\r\n	 *\r\n	 * @access	public\r\n	 * @param	string	the config item name 配置项名字\r\n	 * @param	string	the index name 索引名字\r\n	 * @param	bool\r\n	 * @return	string\r\n	 */\r\n	function item($item, $index = \'\')\r\n	{\r\n		if ($index == \'\')//没有索引，直接使用config[$item]\r\n		{\r\n			if ( ! isset($this-&gt;config[$item]))\r\n			{\r\n				return FALSE;\r\n			}\r\n\r\n			$pref = $this-&gt;config[$item];\r\n		}\r\n		else//含索引，使用config[$index][$item]\r\n		{\r\n			if ( ! isset($this-&gt;config[$index]))\r\n			{\r\n				return FALSE;\r\n			}\r\n\r\n			if ( ! isset($this-&gt;config[$index][$item]))\r\n			{\r\n				return FALSE;\r\n			}\r\n\r\n			$pref = $this-&gt;config[$index][$item];\r\n		}\r\n\r\n		return $pref;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Fetch a config file item - adds slash after item (if item is not empty)\r\n	 * 获取一个配置文件项目 - 在项目后面添加斜线（如果项目是非空的）\r\n	 * @access	public\r\n	 * @param	string	the config item name\r\n	 * @param	bool\r\n	 * @return	string\r\n	 */\r\n	function slash_item($item)\r\n	{\r\n		if ( ! isset($this-&gt;config[$item]))//没有要获取的项\r\n		{\r\n			return FALSE;\r\n		}\r\n		if( trim($this-&gt;config[$item]) == \'\')//如果获取的项的值是空的，返回空字符\r\n		{\r\n			return \'\';\r\n		}\r\n\r\n		return rtrim($this-&gt;config[$item], \'/\').\'/\';//返回项 ， 去掉右侧的/，重新添加，以确保右边总是只有一个/\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Site URL\r\n	 * Returns base_url . index_page [. uri_string]\r\n	 * 返回base_rul. index_page [. uri_string]\r\n	 * @access	public\r\n	 * @param	string	the URI string\r\n	 * @return	string\r\n	 */\r\n	function site_url($uri = \'\')\r\n	{\r\n		if ($uri == \'\')\r\n		{\r\n			return $this-&gt;slash_item(\'base_url\').$this-&gt;item(\'index_page\');\r\n		}\r\n\r\n		if ($this-&gt;item(\'enable_query_strings\') == FALSE)\r\n		{\r\n			$suffix = ($this-&gt;item(\'url_suffix\') == FALSE) ? \'\' : $this-&gt;item(\'url_suffix\');\r\n			return $this-&gt;slash_item(\'base_url\').$this-&gt;slash_item(\'index_page\').$this-&gt;_uri_string($uri).$suffix;\r\n		}\r\n		else\r\n		{\r\n			return $this-&gt;slash_item(\'base_url\').$this-&gt;item(\'index_page\').\'?\'.$this-&gt;_uri_string($uri);\r\n		}\r\n	}\r\n\r\n	// -------------------------------------------------------------\r\n\r\n	/**\r\n	 * Base URL\r\n	 * Returns base_url [. uri_string]\r\n	 * 基础URL\r\n	 * @access public\r\n	 * @param string $uri\r\n	 * @return string\r\n	 */\r\n	function base_url($uri = \'\')\r\n	{\r\n		return $this-&gt;slash_item(\'base_url\').ltrim($this-&gt;_uri_string($uri), \'/\');\r\n	}\r\n\r\n	// -------------------------------------------------------------\r\n\r\n	/**\r\n	 * Build URI string for use in Config::site_url() and Config::base_url()\r\n	 * 建立URI字符串，在Config::site_url和Config::base_url()中使用\r\n	 * @access protected\r\n	 * @param  $uri\r\n	 * @return string\r\n	 */\r\n	protected function _uri_string($uri)\r\n	{\r\n		if ($this-&gt;item(\'enable_query_strings\') == FALSE)\r\n		{\r\n			if (is_array($uri))\r\n			{\r\n				$uri = implode(\'/\', $uri);\r\n			}\r\n			$uri = trim($uri, \'/\');\r\n		}\r\n		else\r\n		{\r\n			if (is_array($uri))\r\n			{\r\n				$i = 0;\r\n				$str = \'\';\r\n				foreach ($uri as $key =&gt; $val)\r\n				{\r\n					$prefix = ($i == 0) ? \'\' : \'&amp;\';\r\n					$str .= $prefix.$key.\'=\'.$val;\r\n					$i++;\r\n				}\r\n				$uri = $str;\r\n			}\r\n		}\r\n	    return $uri;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * System URL\r\n	 * 系统URL\r\n	 * @access	public\r\n	 * @return	string\r\n	 */\r\n	function system_url()\r\n	{\r\n		$x = explode(\"/\", preg_replace(\"|/*(.+?)/*$|\", \"\\\\1\", BASEPATH));\r\n		return $this-&gt;slash_item(\'base_url\').end($x).\'/\';\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set a config file item\r\n	 * 设置一个配置文件项\r\n	 * @access	public\r\n	 * @param	string	the config item key\r\n	 * @param	string	the config item value\r\n	 * @return	void\r\n	 */\r\n	function set_item($item, $value)\r\n	{\r\n		$this-&gt;config[$item] = $value;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Assign to Config\r\n	 * 批量为配置项赋值\r\n	 * This function is called by the front controller (CodeIgniter.php) 这个函数在配置类被实例化之后，\r\n	 * after the Config class is instantiated.  It permits config items 被前端控制器CodeIgniter.php调用\r\n	 * to be assigned or overriden by variables contained in the index.php file 它允许在index.php中赋值和覆写配置项。\r\n	 *\r\n	 * @access	private\r\n	 * @param	array\r\n	 * @return	void\r\n	 */\r\n	function _assign_to_config($items = array())\r\n	{\r\n		if (is_array($items))\r\n		{\r\n			foreach ($items as $key =&gt; $val)\r\n			{\r\n				$this-&gt;set_item($key, $val);\r\n			}\r\n		}\r\n	}\r\n}</pre></p>\r\n</p>','<p>Config.php主要负责配置文件的读取，以下是官方手册的描述：</p><p><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">分析配置文件</h2><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">默认情况下，CodeIgniter已经有一个主要的配置文件，位于<samp style=\"','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(191,'CodeIgniter框架 学习笔记 （14） Security安全类','<p>Security.php类主要完成用户提交数据的安全检查，主要针对XSS（跨站脚本攻击） 和CSRF（跨站请求伪造）进行处理，关于XSS的相关内容，可以参考<a href=\"https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\" target=\"_blank\">https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet</a></p>\r\n<p>关于安全类的用法，手册中的说法：</p>\r\n<p><h1 style=\"color:#e13300;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#666666;font-weight:normal;font-size:24px;margin:0px 0px 20px;padding:3px 0px 7px 3px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">安全类</h1>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">安全类包含一些方法，能帮助您创建安全的应用程序，对输入的数据进行安全方面的处理.</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">XSS 过滤</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">CodeIgniter 包含了跨站脚本攻击的防御机制，它可以自动地对所有POST以及COOKIE数据进行过滤，或者您也可以针对单个项目来运行它。默认情况下，它&nbsp;<strong>不会</strong>&nbsp;全局运行，因为这样也需要一些执行开销，况且您也不一定在所有情况下都用得到它.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">XSS过滤器会查找那些常被用来触发JavaScript或者其他类型的企图劫持cookie或进行其它恶意行为的代码. 如果发现任何不允许的内容，它将把那些内容转换为字符实体，以确保安全.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">注意: 此函数只应该用来处理那些提交过来的数据. 它不适合在常规运行时使用，因为它执行时的开销也是不容忽视的.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">要使用XSS过滤器对数据进行过滤，请使用此函数:</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">$this-&gt;security-&gt;xss_clean()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">下面是一个使用实例:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$data = $this-&gt;security-&gt;xss_clean($data);</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">如果你希望过滤器能自动过滤所有被访问到的POST或者COOKIE数据，请打开你的&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">application/config/config.php</kbd>&nbsp;文件，进行如下设置即可启用自动过滤:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$config[\'global_xss_filtering\'] = TRUE;</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">说明: 如果你使用表单验证类，同样也有XSS过滤的选项.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">第二个可选的参数,&nbsp;<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">is_image</dfn>, 允许此函数对图片进行检测以发现那些潜在的 XSS 攻击, 这对于保证文件上传的安全非常有用. 当此参数被设置为&nbsp;<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">TRUE</dfn>&nbsp;时, 此函数的返回值不是一个修改过的字符串而是一个布尔值, 如果图片是安全的则返回 TRUE, 相反, 如果图片中包含有潜在的、可能会被浏览器尝试运行的恶意信息, 函数将返回FALSE.</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">if ($this-&gt;security-&gt;xss_clean($file, TRUE) === FALSE)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;// file failed the XSS test<br />\r\n}</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">$this-&gt;security-&gt;sanitize_filename()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">当接受用户所输入的文件名时, 最好是对它们进行一下“消毒”, 这样能避免目录被遍历以及其它安全相关的问题. 要完成这项工作, 请使用安全类中的&nbsp;<dfn style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#00620c;font-weight:bold;font-style:normal;\">sanitize_filename()</dfn>&nbsp;方法. 下面是一个实例:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$filename = $this-&gt;security-&gt;sanitize_filename($this-&gt;input-&gt;post(\'filename\'));</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">如果你允许用户所输入的内容中包含有相对路径，例如&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">file/in/some/approved/folder.txt</kbd>, 你可以把第二个可选参数&nbsp;<samp style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#480091;font-weight:bold;\">$relative_path</samp>&nbsp;设置为TRUE.</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$filename = $this-&gt;security-&gt;sanitize_filename($this-&gt;input-&gt;post(\'filename\'), TRUE);</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;line-height:normal;\">跨站请求伪造(Cross-site request forgery,CSRF)</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">打开你的&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">application/config/config.php</kbd>&nbsp;文件，进行如下设置，即可启用 csrf 保护:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$config[\'csrf_protection\'] = TRUE;</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">如果你使用&nbsp;<a href=\"http://codeigniter.org.cn/user_guide/helpers/form_helper.html\" style=\"color:#0134c5;background-color:transparent;text-decoration:initial;outline-style:none;\">表单辅助函数</a>,&nbsp;<var style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#8f5b00;font-weight:bold;font-style:normal;\">form_open()</var>&nbsp;函数将会自动地在你的表单中插入一个隐藏的csrf字段.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"></p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"></p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\">下面是该类的代码，已加中文注释：</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif, 宋体;font-size:14px;line-height:normal;\"><pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * Security Class\r\n * 安全类\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Security\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/security.html\r\n */\r\nclass CI_Security {\r\n\r\n	/**\r\n	 * Random Hash for protecting URLs\r\n	 * 为保护URL（跨站脚本攻击）的随机hash值\r\n	 * @var string\r\n	 * @access protected\r\n	 */\r\n	protected $_xss_hash			= \'\';\r\n	/**\r\n	 * Random Hash for Cross Site Request Forgery Protection Cookie\r\n	 *  防止跨站请求伪造cookie的随机hash\r\n	 * @var string\r\n	 * @access protected\r\n	 */\r\n	protected $_csrf_hash			= \'\';\r\n	/**\r\n	 * Expiration time for Cross Site Request Forgery Protection Cookie\r\n	 * Defaults to two hours (in seconds)\r\n	 * 跨站请求保护Cookie的过期时间，默认是2小时（单位秒）\r\n	 * @var int\r\n	 * @access protected\r\n	 */\r\n	protected $_csrf_expire			= 7200;\r\n	/**\r\n	 * Token name for Cross Site Request Forgery Protection Cookie\r\n	 * 跨站请求伪造保护的Cookie令牌名\r\n	 * @var string\r\n	 * @access protected\r\n	 */\r\n	protected $_csrf_token_name		= \'ci_csrf_token\';\r\n	/**\r\n	 * Cookie name for Cross Site Request Forgery Protection Cookie\r\n	 * 跨站请求伪造保护的Cookie的Cookie名\r\n	 * @var string\r\n	 * @access protected\r\n	 */\r\n	protected $_csrf_cookie_name	= \'ci_csrf_token\';\r\n	/**\r\n	 * List of never allowed strings\r\n	 * 不允许字符串的列表\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_never_allowed_str = array(\r\n		\'document.cookie\'	=&gt; \'[removed]\',\r\n		\'document.write\'	=&gt; \'[removed]\',\r\n		\'.parentNode\'		=&gt; \'[removed]\',\r\n		\'.innerHTML\'		=&gt; \'[removed]\',\r\n		\'window.location\'	=&gt; \'[removed]\',\r\n		\'-moz-binding\'		=&gt; \'[removed]\',\r\n		\'&lt;!--\'				=&gt; \'&amp;lt;!--\',\r\n		\'--&gt;\'				=&gt; \'--&amp;gt;\',\r\n		\'&lt;![CDATA[\'			=&gt; \'&amp;lt;![CDATA[\',\r\n		\'&lt;comment&gt;\'			=&gt; \'&amp;lt;comment&amp;gt;\'\r\n	);\r\n\r\n	/* never allowed, regex replacement */\r\n	/**\r\n	 * List of never allowed regex replacement\r\n	 * 不允许的字符串，使用正则替换\r\n	 * @var array\r\n	 * @access protected\r\n	 */\r\n	protected $_never_allowed_regex = array(\r\n		\'javascript\\s*:\',\r\n		\'expression\\s*(\\(|&amp;\\#40;)\', // CSS and IE\r\n		\'vbscript\\s*:\', // IE, surprise!\r\n		\'Redirect\\s+302\',\r\n		\"([\\\"\'])?data\\s*:[^\\\\1]*?base64[^\\\\1]*?,[^\\\\1]*?\\\\1?\"\r\n	);\r\n\r\n	/**\r\n	 * Constructor\r\n	 *\r\n	 * @return	void\r\n	 */\r\n	public function __construct()\r\n	{\r\n		// Is CSRF protection enabled? \r\n		// 是否允许CSRF保护？\r\n		if (config_item(\'csrf_protection\') === TRUE)\r\n		{\r\n			// CSRF config\r\n			foreach (array(\'csrf_expire\', \'csrf_token_name\', \'csrf_cookie_name\') as $key)\r\n			{\r\n				if (FALSE !== ($val = config_item($key)))\r\n				{\r\n					$this-&gt;{\'_\'.$key} = $val;\r\n				}\r\n			}\r\n\r\n			// Append application specific cookie prefix\r\n			// 添加应用指定的cookie前缀\r\n			if (config_item(\'cookie_prefix\'))\r\n			{\r\n				$this-&gt;_csrf_cookie_name = config_item(\'cookie_prefix\').$this-&gt;_csrf_cookie_name;\r\n			}\r\n\r\n			// Set the CSRF hash\r\n			// 设置csrf哈希\r\n			$this-&gt;_csrf_set_hash();\r\n		}\r\n\r\n		log_message(\'debug\', \"Security Class Initialized\");\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Verify Cross Site Request Forgery Protection\r\n	 * 验证跨站请求伪造保护\r\n	 * @return	object\r\n	 */\r\n	public function csrf_verify()\r\n	{\r\n		// If it\'s not a POST request we will set the CSRF cookie\r\n		// 如果不是一个POST请求的话， 我们将设置CSRF cookie\r\n		if (strtoupper($_SERVER[\'REQUEST_METHOD\']) !== \'POST\')\r\n		{\r\n			return $this-&gt;csrf_set_cookie();\r\n		}\r\n\r\n		// Do the tokens exist in both the _POST and _COOKIE arrays? 是否两个名字都提交了\r\n		if ( ! isset($_POST[$this-&gt;_csrf_token_name], $_COOKIE[$this-&gt;_csrf_cookie_name]))\r\n		{\r\n			$this-&gt;csrf_show_error();\r\n		}\r\n\r\n		// Do the tokens match? 令牌是否匹配\r\n		if ($_POST[$this-&gt;_csrf_token_name] != $_COOKIE[$this-&gt;_csrf_cookie_name])\r\n		{\r\n			$this-&gt;csrf_show_error();\r\n		}\r\n\r\n		// We kill this since we\'re done and we don\'t want to\r\n		// 如果已经完成了，清理通过post提交的令牌字段\r\n		// polute the _POST array\r\n		unset($_POST[$this-&gt;_csrf_token_name]);\r\n\r\n		// Nothing should last forever 清理掉cookie中的令牌\r\n		unset($_COOKIE[$this-&gt;_csrf_cookie_name]);\r\n		$this-&gt;_csrf_set_hash();\r\n		$this-&gt;csrf_set_cookie();\r\n\r\n		log_message(\'debug\', \'CSRF token verified\');\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set Cross Site Request Forgery Protection Cookie\r\n	 * 设置跨站请求伪造保护Cookie\r\n	 * @return	object\r\n	 */\r\n	public function csrf_set_cookie()\r\n	{\r\n		$expire = time() + $this-&gt;_csrf_expire;\r\n		$secure_cookie = (config_item(\'cookie_secure\') === TRUE) ? 1 : 0;\r\n		//当存在HTTPS时可以设置Cookie\r\n		if ($secure_cookie &amp;&amp; (empty($_SERVER[\'HTTPS\']) OR strtolower($_SERVER[\'HTTPS\']) === \'off\'))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		setcookie($this-&gt;_csrf_cookie_name, $this-&gt;_csrf_hash, $expire, config_item(\'cookie_path\'), config_item(\'cookie_domain\'), $secure_cookie);\r\n\r\n		log_message(\'debug\', \"CRSF cookie Set\");\r\n\r\n		return $this;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Show CSRF Error\r\n	 * 显示CSRF错误\r\n	 * @return	void\r\n	 */\r\n	public function csrf_show_error()\r\n	{\r\n		show_error(\'The action you have requested is not allowed.\');\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Get CSRF Hash\r\n	 *\r\n	 * Getter Method\r\n	 *\r\n	 * @return 	string 	self::_csrf_hash\r\n	 */\r\n	public function get_csrf_hash()\r\n	{\r\n		return $this-&gt;_csrf_hash;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Get CSRF Token Name\r\n	 * 获取csrf令牌名\r\n	 * Getter Method\r\n	 *\r\n	 * @return 	string 	self::csrf_token_name\r\n	 */\r\n	public function get_csrf_token_name()\r\n	{\r\n		return $this-&gt;_csrf_token_name;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * XSS Clean\r\n	 *\r\n	 * Sanitizes data so that Cross Site Scripting Hacks can be\r\n	 * 对数据进行过滤，从而可以防止跨站脚本攻击\r\n	 * prevented.  This function does a fair amount of work but\r\n	 * 这个函数做了一般量的工作，但是确实极其彻底的，\r\n	 * it is extremely thorough, designed to prevent even the\r\n	 * 设计用来防止即使是大多数模糊的XSS企图。\r\n	 * most obscure XSS attempts.  Nothing is ever 100% foolproof,\r\n	 * 当然，没有什么是100%安全的，但是我们在这个过滤器中已经做了我们所能做想到的了。\r\n	 * of course, but I haven\'t been able to get anything passed\r\n	 * the filter.\r\n	 *\r\n	 * Note: This function should only be used to deal with data\r\n	 * 注意： 这个函数应该仅仅被用来处理提交过来的数据，\r\n	 * upon submission.  It\'s not something that should\r\n	 * 在通常的运行过程中，不应该使用该函数。\r\n	 * be used for general runtime processing.\r\n	 *\r\n	 * This function was based in part on some code and ideas I\r\n	 * got from Bitflux: http://channel.bitflux.ch/wiki/XSS_Prevention\r\n	 *\r\n	 * To help develop this script I used this great list of\r\n	 * vulnerabilities along with a few other hacks I\'ve\r\n	 * harvested from examining vulnerabilities in other programs:\r\n	 * http://ha.ckers.org/xss.html\r\n	 *\r\n	 * @param	mixed	string or array\r\n	 * @param 	bool\r\n	 * @return	string\r\n	 */\r\n	public function xss_clean($str, $is_image = FALSE)\r\n	{\r\n		/*\r\n		 * Is the string an array?\r\n		 * 参数$str是字符串还是数组?\r\n		 * 如果是数组的话，递归进行处理\r\n		 */\r\n		if (is_array($str))\r\n		{\r\n			while (list($key) = each($str))\r\n			{\r\n				$str[$key] = $this-&gt;xss_clean($str[$key]);\r\n			}\r\n\r\n			return $str;\r\n		}\r\n\r\n		/*\r\n		 * Remove Invisible Characters\r\n		 * 移除不可见字符\r\n		 */\r\n		$str = remove_invisible_characters($str);//这个函数在Common.php中，是个通用函数\r\n\r\n		// Validate Entities in URLs \r\n		// 验证在URL中的字符实体\r\n		$str = $this-&gt;_validate_entities($str);\r\n\r\n		/*\r\n		 * URL Decode\r\n		 * URL解码\r\n		 * Just in case stuff like this is submitted:\r\n		 * 主要是在提交的数据时以下情况时\r\n		 * &lt;a href=\"http://%77%77%77%2E%67%6F%6F%67%6C%65%2E%63%6F%6D\"&gt;Google&lt;/a&gt;\r\n		 *\r\n		 * Note: Use rawurldecode() so it does not remove plus signs.\r\n		 * rawurldecode() 不会把加号（\'+\'）解码为空格，而 urldecode() 可以。 \r\n		 */\r\n		$str = rawurldecode($str);\r\n\r\n		/*\r\n		 * Convert character entities to ASCII\r\n		 * 转换字符实体为ASCII\r\n		 * This permits our tests below to work reliably.\r\n		 * 这使得我们下面的测试是可靠的，我们仅仅转换含有tags的，可能会造成安全问题的实体\r\n		 * We only convert entities that are within tags since\r\n		 * these are the ones that will pose security problems.\r\n		 * \r\n		 */\r\n\r\n		$str = preg_replace_callback(\"/[a-z]+=([\\\'\\\"]).*?\\\\1/si\", array($this, \'_convert_attribute\'), $str);\r\n\r\n		$str = preg_replace_callback(\"/&lt;\\w+.*?(?=&gt;|&lt;|$)/si\", array($this, \'_decode_entity\'), $str);\r\n\r\n		/*\r\n		 * Remove Invisible Characters Again!\r\n		 * 再次移除不可见字符\r\n		 */\r\n		$str = remove_invisible_characters($str);\r\n\r\n		/*\r\n		 * Convert all tabs to spaces\r\n		 * 转换所有的tabs为空格\r\n		 * This prevents strings like this: ja	vascript\r\n		 * 这用来防止字符串类似于ja	vascript\r\n		 * NOTE: we deal with spaces between characters later.\r\n		 * 注意： 我们将在后面处理字符之间的空格\r\n		 * NOTE: preg_replace was found to be amazingly slow here on\r\n		 * 注意：preg_replace在这里是极其缓慢的对于大块的数据，所以使用str_replace\r\n		 * large blocks of data, so we use str_replace.\r\n		 */\r\n\r\n		if (strpos($str, \"\\t\") !== FALSE)//只有在字符串中确实存在tabs时才进行替换，减少替换次数\r\n		{\r\n			$str = str_replace(\"\\t\", \' \', $str);\r\n		}\r\n\r\n		/*\r\n		 * Capture converted string for later comparison\r\n		 * 为以后的比较捕获转换的字符串\r\n		 */\r\n		$converted_string = $str;\r\n\r\n		// Remove Strings that are never allowed\r\n		// 移除不允许的字符串\r\n		$str = $this-&gt;_do_never_allowed($str);\r\n\r\n		/*\r\n		 * Makes PHP tags safe\r\n		 * 使PHP标签安全\r\n		 * Note: XML tags are inadvertently replaced too:\r\n		 * 注意： XML标签也会被无意的替换\r\n		 * &lt;?xml\r\n		 *\r\n		 * But it doesn\'t seem to pose a problem.\r\n		 * 但是这不会造成什么问题的。\r\n		 */\r\n		if ($is_image === TRUE)//对图片地址进行判断\r\n		{\r\n			// Images have a tendency to have the PHP short opening and\r\n			// 图片有含有PHP短标记打开和关闭的倾向，因此，跳过他们\r\n			// closing tags every so often so we skip those and only\r\n			// do the long opening tags.\r\n			// 把&lt;?php =&gt; &amp;lt;?php , &lt;? =&gt; &amp;lt;?\r\n			$str = preg_replace(\'/&lt;\\?(php)/i\', \"&amp;lt;?\\\\1\", $str);\r\n		}\r\n		else\r\n		{\r\n			$str = str_replace(array(\'&lt;?\', \'?\'.\'&gt;\'),  array(\'&amp;lt;?\', \'?&amp;gt;\'), $str);\r\n		}\r\n\r\n		/*\r\n		 * Compact any exploded words\r\n		 * 压缩所有分解了的单词\r\n		 * This corrects words like:  j a v a s c r i p t\r\n		 * These words are compacted back to their correct state.\r\n		 */\r\n		$words = array(\r\n			\'javascript\', \'expression\', \'vbscript\', \'script\', \'base64\',\r\n			\'applet\', \'alert\', \'document\', \'write\', \'cookie\', \'window\'\r\n		);\r\n\r\n		foreach ($words as $word)\r\n		{\r\n			$temp = \'\';\r\n\r\n			for ($i = 0, $wordlen = strlen($word); $i &lt; $wordlen; $i++)\r\n			{\r\n				$temp .= substr($word, $i, 1).\"\\s*\";\r\n			}\r\n			/* 转化后结果\r\n			 	j\\s*a\\s*v\\s*a\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*\r\n				e\\s*x\\s*p\\s*r\\s*e\\s*s\\s*s\\s*i\\s*o\\s*n\\s*\r\n				v\\s*b\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*\r\n				s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*\r\n				b\\s*a\\s*s\\s*e\\s*6\\s*4\\s*\r\n				a\\s*p\\s*p\\s*l\\s*e\\s*t\\s*\r\n				a\\s*l\\s*e\\s*r\\s*t\\s*\r\n				d\\s*o\\s*c\\s*u\\s*m\\s*e\\s*n\\s*t\\s*\r\n				w\\s*r\\s*i\\s*t\\s*e\\s*\r\n				c\\s*o\\s*o\\s*k\\s*i\\s*e\\s*\r\n				w\\s*i\\s*n\\s*d\\s*o\\s*w\\s*\r\n			 */\r\n			// We only want to do this when it is followed by a non-word character\r\n			// That way valid stuff like \"dealer to\" does not become \"dealerto\"\r\n			$str = preg_replace_callback(\'#(\'.substr($temp, 0, -3).\')(\\W)#is\', array($this, \'_compact_exploded_words\'), $str);\r\n		}\r\n		//经过上面处理后，所有加空格的脚本代码都还原成了原生的js代码了\r\n		\r\n		/*\r\n		 * Remove disallowed Javascript in links or img tags\r\n		 * 移除在链接和图片标签中不允许的javascript代码\r\n		 * We used to do some version comparisons and use of stripos for PHP5,\r\n		 * 我们通常在PHP5中使用stripos做一些版本的比较，\r\n		 * but it is dog slow compared to these simplified non-capturing\r\n		 * 但是特别是当模式在字符串中存在的时候，它要比非捕获的preg_match()慢很多\r\n		 * preg_match(), especially if the pattern exists in the string\r\n		 */\r\n		do\r\n		{\r\n			$original = $str;\r\n\r\n			if (preg_match(\"/&lt;a/i\", $str))\r\n			{\r\n				$str = preg_replace_callback(\"#&lt;a\\s+([^&gt;]*?)(&gt;|$)#si\", array($this, \'_js_link_removal\'), $str);\r\n			}\r\n\r\n			if (preg_match(\"/&lt;img/i\", $str))\r\n			{\r\n				$str = preg_replace_callback(\"#&lt;img\\s+([^&gt;]*?)(\\s?/?&gt;|$)#si\", array($this, \'_js_img_removal\'), $str);\r\n			}\r\n\r\n			if (preg_match(\"/script/i\", $str) OR preg_match(\"/xss/i\", $str))\r\n			{\r\n				$str = preg_replace(\"#&lt;(/*)(script|xss)(.*?)\\&gt;#si\", \'[removed]\', $str);\r\n			}\r\n		}\r\n		while($original != $str);\r\n\r\n		unset($original);\r\n\r\n		// Remove evil attributes such as style, onclick and xmlns\r\n		// 移除有害的属性，比如style ， onclick ， xmlns\r\n		$str = $this-&gt;_remove_evil_attributes($str, $is_image);\r\n\r\n		/*\r\n		 * Sanitize naughty HTML elements\r\n		 * 清理不适当的HTML元素\r\n		 * If a tag containing any of the words in the list\r\n		 * 如果一个标签包含任何一个下面列表中的单词，这个标签转换为一个字符实体\r\n		 * below is found, the tag gets converted to entities.\r\n		 *\r\n		 * So this: &lt;blink&gt;\r\n		 * Becomes: &amp;lt;blink&amp;gt;\r\n		 */\r\n		$naughty = \'alert|applet|audio|basefont|base|behavior|bgsound|blink|body|embed|expression|form|frameset|frame|head|html|ilayer|iframe|input|isindex|layer|link|meta|object|plaintext|style|script|textarea|title|video|xml|xss\';\r\n		$str = preg_replace_callback(\'#&lt;(/*\\s*)(\'.$naughty.\')([^&gt;&lt;]*)([&gt;&lt;]*)#is\', array($this, \'_sanitize_naughty_html\'), $str);\r\n\r\n		/*\r\n		 * Sanitize naughty scripting elements\r\n		 * 清理不合法的脚本元素\r\n		 * Similar to above, only instead of looking for\r\n		 * 与上面的类似，仅仅替换查询到的类似于PHP和Javascript命令的不被允许的标签\r\n		 * tags it looks for PHP and JavaScript commands\r\n		 * that are disallowed.  Rather than removing the\r\n		 * 胜过移除这些代码，转换这些代码为不可执行的实体更好\r\n		 * code, it simply converts the parenthesis to entities\r\n		 * rendering the code un-executable.\r\n		 *\r\n		 * For example:	eval(\'some code\')\r\n		 * Becomes:		eval&amp;#40;\'some code\'&amp;#41;\r\n		 */\r\n		$str = preg_replace(\'#(alert|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\\s*)\\((.*?)\\)#si\', \"\\\\1\\\\2&amp;#40;\\\\3&amp;#41;\", $str);\r\n\r\n\r\n		// Final clean up 最后的清理\r\n		// This adds a bit of extra precaution in case\r\n		// 额外预防，防止上面的处理产生不合法的字符\r\n		// something got through the above filters\r\n		$str = $this-&gt;_do_never_allowed($str);\r\n\r\n		/*\r\n		 * Images are Handled in a Special Way\r\n		 * 图片需要经过特殊的方法处理\r\n		 * - Essentially, we want to know that after all of the character\r\n		 * conversion is done whether any unwanted, likely XSS, code was found.\r\n		 * If not, we return TRUE, as the image is clean.\r\n		 * However, if the string post-conversion does not matched the\r\n		 * string post-removal of XSS, then it fails, as there was unwanted XSS\r\n		 * code found and removed/changed during processing.\r\n		 */\r\n\r\n		if ($is_image === TRUE)\r\n		{\r\n			return ($str == $converted_string) ? TRUE: FALSE;\r\n		}\r\n\r\n		log_message(\'debug\', \"XSS Filtering completed\");\r\n		return $str;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Random Hash for protecting URLs\r\n	 * 保护URL的随机哈希\r\n	 * @return	string\r\n	 */\r\n	public function xss_hash()\r\n	{\r\n		if ($this-&gt;_xss_hash == \'\')\r\n		{\r\n			mt_srand();//随机数生成器种子\r\n			$this-&gt;_xss_hash = md5(time() + mt_rand(0, 1999999999));\r\n		}\r\n\r\n		return $this-&gt;_xss_hash;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * HTML Entities Decode\r\n	 * HTML实体解码\r\n	 * This function is a replacement for html_entity_decode()\r\n	 * 这个函数是用来替换html_entity_decode()函数的\r\n	 * The reason we are not using html_entity_decode() by itself is because\r\n	 * 之所以使用这个替代函数的原因是，html_entity_decode不会转换从技术角度讲不合法的字符\r\n	 * while it is not technically correct to leave out the semicolon\r\n	 * 当编码字符后没有写；时，大部分浏览器都能够正确的解释代码，但是，html_entity_decode将不会解释它\r\n	 * at the end of an entity most browsers will still interpret the entity\r\n	 * correctly.  html_entity_decode() does not convert entities without\r\n	 * html_entity_decode()不会转换没有；的试题，所以使用自己的解决方案。\r\n	 * semicolons, so we are left with our own little solution here. Bummer.\r\n	 *\r\n	 * @param	string\r\n	 * @param	string\r\n	 * @return	string\r\n	 */\r\n	public function entity_decode($str, $charset=\'UTF-8\')\r\n	{\r\n		if (stristr($str, \'&amp;\') === FALSE)\r\n		{\r\n			return $str;\r\n		}\r\n\r\n		$str = html_entity_decode($str, ENT_COMPAT, $charset);\r\n		$str = preg_replace(\'~&amp;#x(0*[0-9a-f]{2,5})~ei\', \'chr(hexdec(\"\\\\1\"))\', $str);\r\n		return preg_replace(\'~&amp;#([0-9]{2,4})~e\', \'chr(\\\\1)\', $str);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Filename Security\r\n	 * 文件名安全\r\n	 * @param	string\r\n	 * @param 	bool\r\n	 * @return	string\r\n	 */\r\n	public function sanitize_filename($str, $relative_path = FALSE)\r\n	{\r\n		$bad = array(\r\n			\"../\",\r\n			\"&lt;!--\",\r\n			\"--&gt;\",\r\n			\"&lt;\",\r\n			\"&gt;\",\r\n			\"\'\",\r\n			\'\"\',\r\n			\'&amp;\',\r\n			\'$\',\r\n			\'#\',\r\n			\'{\',\r\n			\'}\',\r\n			\'[\',\r\n			\']\',\r\n			\'=\',\r\n			\';\',\r\n			\'?\',\r\n			\"%20\",\r\n			\"%22\",\r\n			\"%3c\",		// &lt;\r\n			\"%253c\",	// &lt;\r\n			\"%3e\",		// &gt;\r\n			\"%0e\",		// &gt;\r\n			\"%28\",		// (\r\n			\"%29\",		// )\r\n			\"%2528\",	// (\r\n			\"%26\",		// &amp;\r\n			\"%24\",		// $\r\n			\"%3f\",		// ?\r\n			\"%3b\",		// ;\r\n			\"%3d\"		// =\r\n		);\r\n\r\n		if ( ! $relative_path)\r\n		{\r\n			$bad[] = \'./\';\r\n			$bad[] = \'/\';\r\n		}\r\n\r\n		$str = remove_invisible_characters($str, FALSE);\r\n		return stripslashes(str_replace($bad, \'\', $str));\r\n	}\r\n\r\n	// ----------------------------------------------------------------\r\n\r\n	/**\r\n	 * Compact Exploded Words\r\n	 * 压缩搜索到的单词\r\n	 * Callback function for xss_clean() to remove whitespace from\r\n	 * 回调函数，用于xss_clean()，从类似于 j a v a s c r i p t中移除空格\r\n	 * things like j a v a s c r i p t\r\n	 *\r\n	 * @param	type\r\n	 * @return	type\r\n	 */\r\n	protected function _compact_exploded_words($matches)\r\n	{\r\n		return preg_replace(\'/\\s+/s\', \'\', $matches[1]).$matches[2];\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/*\r\n	 * Remove Evil HTML Attributes (like evenhandlers and style)\r\n	 * 移除有害的HTML属性（比如事件处理和样式）\r\n	 * It removes the evil attribute and either:\r\n	 * 	- Everything up until a space \r\n	 *		For example, everything between the pipes:\r\n	 *		&lt;a |style=document.write(\'hello\');alert(\'world\');| class=link&gt;\r\n	 * 	- Everything inside the quotes\r\n	 *		For example, everything between the pipes:\r\n	 *		&lt;a |style=\"document.write(\'hello\'); alert(\'world\');\"| class=\"link\"&gt;\r\n	 *\r\n	 * @param string $str The string to check\r\n	 * @param boolean $is_image TRUE if this is an image\r\n	 * @return string The string with the evil attributes removed\r\n	 */\r\n	protected function _remove_evil_attributes($str, $is_image)\r\n	{\r\n		// All javascript event handlers (e.g. onload, onclick, onmouseover), style, and xmlns\r\n		// 所有的javascript事件处理（例如： onload ， onclick ， onmouseover） ， style ， 和xmlns\r\n		$evil_attributes = array(\'on\\w*\', \'style\', \'xmlns\', \'formaction\');\r\n\r\n		if ($is_image === TRUE)//图片的话，移除有害列表中的xmlns属性\r\n		{\r\n			/*\r\n			 * Adobe Photoshop puts XML metadata into JFIF images, \r\n			 * Adobe Photoshop在JFIF图片中放入了XML元数据\r\n			 * including namespacing, so we have to allow this for images.\r\n			 * 包含命名空间，所以我们必须对图片允许这些\r\n			 */\r\n			unset($evil_attributes[array_search(\'xmlns\', $evil_attributes)]);//array_search从数组中搜索指定的value的key\r\n		}\r\n\r\n		do {\r\n			$count = 0;\r\n			$attribs = array();\r\n\r\n			// find occurrences of illegal attribute strings without quotes\r\n			// 找出没有加引号的的不合法的属性\r\n			preg_match_all(\'/(\'.implode(\'|\', $evil_attributes).\')\\s*=\\s*([^\\s&gt;]*)/is\', $str, $matches, PREG_SET_ORDER);\r\n\r\n			foreach ($matches as $attr)\r\n			{\r\n\r\n				$attribs[] = preg_quote($attr[0], \'/\');\r\n			}\r\n\r\n			// find occurrences of illegal attribute strings with quotes (042 and 047 are octal quotes)\r\n			preg_match_all(\"/(\".implode(\'|\', $evil_attributes).\")\\s*=\\s*(\\042|\\047)([^\\\\2]*?)(\\\\2)/is\",  $str, $matches, PREG_SET_ORDER);\r\n\r\n			foreach ($matches as $attr)\r\n			{\r\n				$attribs[] = preg_quote($attr[0], \'/\');\r\n			}\r\n\r\n			// replace illegal attribute strings that are inside an html tag\r\n			if (count($attribs) &gt; 0)\r\n			{\r\n				$str = preg_replace(\"/&lt;(\\/?[^&gt;&lt;]+?)([^A-Za-z&lt;&gt;\\-])(.*?)(\".implode(\'|\', $attribs).\")(.*?)([\\s&gt;&lt;])([&gt;&lt;]*)/i\", \'&lt;$1 $3$5$6$7\', $str, -1, $count);\r\n			}\r\n\r\n		} while ($count);\r\n\r\n		return $str;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Sanitize Naughty HTML\r\n	 * 消除有害的HTML\r\n	 * Callback function for xss_clean() to remove naughty HTML elements\r\n	 *\r\n	 * @param	array\r\n	 * @return	string\r\n	 */\r\n	protected function _sanitize_naughty_html($matches)\r\n	{\r\n		// encode opening brace\r\n		$str = \'&amp;lt;\'.$matches[1].$matches[2].$matches[3];\r\n\r\n		// encode captured opening or closing brace to prevent recursive vectors\r\n		$str .= str_replace(array(\'&gt;\', \'&lt;\'), array(\'&amp;gt;\', \'&amp;lt;\'),\r\n							$matches[4]);\r\n\r\n		return $str;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * JS Link Removal\r\n	 * js链接清理\r\n	 * Callback function for xss_clean() to sanitize links\r\n	 * This limits the PCRE backtracks, making it more performance friendly\r\n	 * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in\r\n	 * PHP 5.2+ on link-heavy strings\r\n	 *\r\n	 * @param	array\r\n	 * @return	string\r\n	 */\r\n	protected function _js_link_removal($match)\r\n	{\r\n		return str_replace(\r\n			$match[1],\r\n			preg_replace(\r\n				\'#href=.*?(alert\\(|alert&amp;\\#40;|javascript\\:|livescript\\:|mocha\\:|charset\\=|window\\.|document\\.|\\.cookie|&lt;script|&lt;xss|data\\s*:)#si\',\r\n				\'\',\r\n				$this-&gt;_filter_attributes(str_replace(array(\'&lt;\', \'&gt;\'), \'\', $match[1]))\r\n			),\r\n			$match[0]\r\n		);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * JS Image Removal\r\n	 * JS图片清理\r\n	 * Callback function for xss_clean() to sanitize image tags\r\n	 * This limits the PCRE backtracks, making it more performance friendly\r\n	 * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in\r\n	 * PHP 5.2+ on image tag heavy strings\r\n	 *\r\n	 * @param	array\r\n	 * @return	string\r\n	 */\r\n	protected function _js_img_removal($match)\r\n	{\r\n		return str_replace(\r\n			$match[1],\r\n			preg_replace(\r\n				\'#src=.*?(alert\\(|alert&amp;\\#40;|javascript\\:|livescript\\:|mocha\\:|charset\\=|window\\.|document\\.|\\.cookie|&lt;script|&lt;xss|base64\\s*,)#si\',\r\n				\'\',\r\n				$this-&gt;_filter_attributes(str_replace(array(\'&lt;\', \'&gt;\'), \'\', $match[1]))\r\n			),\r\n			$match[0]\r\n		);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Attribute Conversion\r\n	 * 属性转换\r\n	 * Used as a callback for XSS Clean\r\n	 * 作为回调函数，由XSS Clean调用\r\n	 * @param	array\r\n	 * @return	string\r\n	 */\r\n	protected function _convert_attribute($match)\r\n	{\r\n		return str_replace(array(\'&gt;\', \'&lt;\', \'\\\\\'), array(\'&amp;gt;\', \'&amp;lt;\', \'\\\\\\\\\'), $match[0]);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Filter Attributes\r\n	 * 过滤属性\r\n	 * Filters tag attributes for consistency and safety\r\n	 * 为一致性和安全性过滤标签属性\r\n	 * @param	string\r\n	 * @return	string\r\n	 */\r\n	protected function _filter_attributes($str)\r\n	{\r\n		$out = \'\';\r\n\r\n		if (preg_match_all(\'#\\s*[a-z\\-]+\\s*=\\s*(\\042|\\047)([^\\\\1]*?)\\\\1#is\', $str, $matches))\r\n		{\r\n			foreach ($matches[0] as $match)\r\n			{\r\n				$out .= preg_replace(\"#/\\*.*?\\*/#s\", \'\', $match);\r\n			}\r\n		}\r\n\r\n		return $out;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * HTML Entity Decode Callback\r\n	 * HTML试题解码回调函数\r\n	 * Used as a callback for XSS Clean\r\n	 *\r\n	 * @param	array\r\n	 * @return	string\r\n	 */\r\n	protected function _decode_entity($match)\r\n	{\r\n		return $this-&gt;entity_decode($match[0], strtoupper(config_item(\'charset\')));\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Validate URL entities\r\n	 * 验证URL字符实体\r\n	 * Called by xss_clean()\r\n	 * 被xss_clean()调用\r\n	 * @param 	string\r\n	 * @return 	string\r\n	 */\r\n	protected function _validate_entities($str)\r\n	{\r\n		/*\r\n		 * Protect GET variables in URLs\r\n		 * 保护GET变量\r\n		 */\r\n\r\n		 // 901119URL5918AMP18930PROTECT8198\r\n		 // 如果字符串是&amp;str1=str2，将转换成为xss_hash码 + str1=str2的形式,如3b98e2dffc6cb06a89dcb0d5c60a0206str1=str2\r\n\r\n		$str = preg_replace(\'|\\&amp;([a-z\\_0-9\\-]+)\\=([a-z\\_0-9\\-]+)|i\', $this-&gt;xss_hash().\"\\\\1=\\\\2\", $str);\r\n		\r\n		/*\r\n		 * Validate standard character entities\r\n		 * 验证标准的字符实体\r\n		 * Add a semicolon if missing.  We do this to enable\r\n		 * 如果没有的话，添加一个分号。这样做是为了以后允许字符实体到ASCII的转换\r\n		 * the conversion of entities to ASCII later.\r\n		 * 如果字符串是&amp;str1,str2,转化为&amp;str1;,str2\r\n		 */\r\n		$str = preg_replace(\'#(&amp;\\#?[0-9a-z]{2,})([\\x00-\\x20])*;?#i\', \"\\\\1;\\\\2\", $str);\r\n\r\n		/*\r\n		 * Validate UTF16 two byte encoding (x00)\r\n		 * 验证UTF16两个字节的编码（x00）\r\n		 * Just as above, adds a semicolon if missing.\r\n		 * 跟上面一样，添加分号\r\n		 */\r\n		$str = preg_replace(\'#(&amp;\\#x?)([0-9A-F]+);?#i\',\"\\\\1\\\\2;\",$str);\r\n\r\n		/*\r\n		 * Un-Protect GET variables in URLs\r\n		 * URL中不保护的GET变量\r\n		 */\r\n		$str = str_replace($this-&gt;xss_hash(), \'&amp;\', $str);\r\n\r\n		return $str;\r\n	}\r\n\r\n	// ----------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Do Never Allowed\r\n	 * 移除不允许的字符\r\n	 * A utility function for xss_clean()\r\n	 *\r\n	 * @param 	string\r\n	 * @return 	string\r\n	 */\r\n	protected function _do_never_allowed($str)\r\n	{\r\n		$str = str_replace(array_keys($this-&gt;_never_allowed_str), $this-&gt;_never_allowed_str, $str);\r\n\r\n		foreach ($this-&gt;_never_allowed_regex as $regex)\r\n		{\r\n			$str = preg_replace(\'#\'.$regex.\'#is\', \'[removed]\', $str);\r\n		}\r\n\r\n		return $str;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Set Cross Site Request Forgery Protection Cookie\r\n	 * 设置跨站请求保护Cookie\r\n	 * @return	string\r\n	 */\r\n	protected function _csrf_set_hash()\r\n	{\r\n		if ($this-&gt;_csrf_hash == \'\')\r\n		{\r\n			// If the cookie exists we will use it\'s value. \r\n			// 如果Cookie存在，我们将使用原先的值\r\n			// We don\'t necessarily want to regenerate it with\r\n			// 我们不一定想在每一个载入的页面中重新获取，在当一个页面可能包含嵌入的子页面时，\r\n			// each page load since a page could contain embedded\r\n			// 嵌入的子页面可能造成这个特性失败\r\n			// sub-pages causing this feature to fail\r\n			if (isset($_COOKIE[$this-&gt;_csrf_cookie_name]) &amp;&amp;\r\n				preg_match(\'#^[0-9a-f]{32}$#iS\', $_COOKIE[$this-&gt;_csrf_cookie_name]) === 1)\r\n			{\r\n				return $this-&gt;_csrf_hash = $_COOKIE[$this-&gt;_csrf_cookie_name];\r\n			}\r\n\r\n			return $this-&gt;_csrf_hash = md5(uniqid(rand(), TRUE));//生成新的hash\r\n		}\r\n\r\n		return $this-&gt;_csrf_hash;\r\n	}\r\n\r\n}</pre></p>\r\n</p>\r\n<p>&nbsp;</p>','<p>Security.php类主要完成用户提交数据的安全检查，主要针对XSS（跨站脚本攻击） 和CSRF（跨站请求伪造）进行处理，关于XSS的相关内容，可以参考<a href=\"https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\" target=\"_blank\">https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet</a></p><p>关于安全类的用法，手册中的说法：</p><p><h1 style=\"color:#e13300;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#666666;font-weight:normal;font-size:24px;margin:0px 0px 20px;padding:3px 0px 7px 3px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-se','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(192,'CodeIgniter框架 学习笔记 （15） Input类-全局输入预处理','<p>Input类在系统初始化的时候会自动加载，加载时间可以在<span><a href=\"/post-41.html\" style=\"color:#009900;\" target=\"_blank\">CodeIgniter框架 学习笔记 （5） CodeIgniter系统初始化文件</a>中的图上看出。</span></p>\r\n<p><span>这个类主要完成两个工作，一个是根据配置，全局性的安全预处理所有来自用户的输入数据，二是作为助手函数，提供一些检索用户输入数据的方式。</span></p>\r\n<p>下面是官方手册中的介绍，介绍的比较简单，直接用英文版的吧：</p>\r\n<p></p>\r\n<h1 style=\"color:#e13300;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#666666;font-weight:normal;font-size:24px;margin:0px 0px 20px;padding:3px 0px 7px 3px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">Input Class</h1>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The Input Class serves two purposes:</p>\r\n<ol style=\"color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\"><li style=\"margin-bottom:9px;\">It pre-processes global input data for security.</li>\r\n<li style=\"margin-bottom:9px;\">It provides some helper functions for fetching input data and pre-processing it.</li>\r\n</ol>\r\n<p class=\"important\" style=\"margin-top:10px;margin-bottom:5px;background-color:#fbe6f2;border:1px solid #d893a1;color:#333333;padding:10px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\"><strong>Note:</strong>&nbsp;This class is initialized automatically by the system so there is no need to do it manually.</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">Security Filtering</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The security filtering function is called automatically when a new&nbsp;<a href=\"http://localhost/ci_guide/general/controllers.html\" style=\"color:#0134c5;background-color:transparent;text-decoration:initial;outline-style:none;\">controller</a>&nbsp;is invoked. It does the following:</p>\r\n<ul style=\"list-style-image:url(http://localhost/ci_guide/images/arrow.gif);margin:10px 0px 12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\"><li style=\"margin-bottom:9px;\">If $config[\'allow_get_array\'] is FALSE(default is TRUE), destroys the global GET array.</li>\r\n<li style=\"margin-bottom:9px;\">Destroys all global variables in the event register_globals is turned on.</li>\r\n<li style=\"margin-bottom:9px;\">Filters the GET/POST/COOKIE array keys, permitting only alpha-numeric (and a few other) characters.</li>\r\n<li style=\"margin-bottom:9px;\">Provides XSS (Cross-site Scripting Hacks) filtering. This can be enabled globally, or upon request.</li>\r\n<li style=\"margin-bottom:9px;\">Standardizes newline characters to \\n(In Windows \\r\\n)</li>\r\n</ul>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">XSS Filtering</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The Input class has the ability to filter input automatically to prevent cross-site scripting attacks. If you want the filter to run automatically every time it encounters POST or COOKIE data you can enable it by opening your&nbsp;<kbd style=\"font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;color:#a70000;font-weight:bold;\">application/config/config.php</kbd>&nbsp;file and setting this:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$config[\'global_xss_filtering\'] = TRUE;</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Please refer to the&nbsp;<a href=\"http://localhost/ci_guide/libraries/security.html\" style=\"color:#0134c5;background-color:transparent;text-decoration:initial;outline-style:none;\">Security class</a>&nbsp;documentation for information on using XSS Filtering in your application.</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">Using POST, COOKIE, or SERVER Data</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">CodeIgniter comes with three helper functions that let you fetch POST, COOKIE or SERVER items. The main advantage of using the provided functions rather than fetching an item directly ($_POST[\'something\']) is that the functions will check to see if the item is set and return false (boolean) if not. This lets you conveniently use data without having to test whether an item exists first. In other words, normally you might do something like this:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">if ( ! isset($_POST[\'something\']))<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;$something = FALSE;<br />\r\n}<br />\r\nelse<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;$something = $_POST[\'something\'];<br />\r\n}</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">With CodeIgniter\'s built in functions you can simply do this:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$something = $this-&gt;input-&gt;post(\'something\');</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The three functions are:</p>\r\n<ul style=\"list-style-image:url(http://localhost/ci_guide/images/arrow.gif);margin:10px 0px 12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\"><li style=\"margin-bottom:9px;\">$this-&gt;input-&gt;post()</li>\r\n<li style=\"margin-bottom:9px;\">$this-&gt;input-&gt;cookie()</li>\r\n<li style=\"margin-bottom:9px;\">$this-&gt;input-&gt;server()</li>\r\n</ul>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;post()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The first parameter will contain the name of the POST item you are looking for:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;post(\'some_data\');</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The function returns FALSE (boolean) if the item you are attempting to retrieve does not exist.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The second optional parameter lets you run the data through the XSS filter. It\'s enabled by setting the second parameter to boolean TRUE;</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;post(\'some_data\', TRUE);</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">To return an array of all POST items call without any parameters.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">To return all POST items and pass them through the XSS filter set the first parameter NULL while setting the second parameter to boolean;</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The function returns FALSE (boolean) if there are no items in the POST.</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;post(NULL, TRUE); // returns all POST items with XSS filter&nbsp;<br />\r\n$this-&gt;input-&gt;post(); // returns all POST items without XSS filter</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;get()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">This function is identical to the post function, only it fetches get data:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;get(\'some_data\', TRUE);</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">To return an array of all GET items call without any parameters.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">To return all GET items and pass them through the XSS filter set the first parameter NULL while setting the second parameter to boolean;</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The function returns FALSE (boolean) if there are no items in the GET.</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;get(NULL, TRUE); // returns all GET items with XSS filter&nbsp;<br />\r\n$this-&gt;input-&gt;get(); // returns all GET items without XSS filtering</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;get_post()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">This function will search through both the post and get streams for data, looking first in post, and then in get:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;get_post(\'some_data\', TRUE);</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;cookie()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">This function is identical to the post function, only it fetches cookie data:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;cookie(\'some_data\', TRUE);</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;server()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">This function is identical to the above functions, only it fetches server data:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;server(\'some_data\');</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;set_cookie()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Sets a cookie containing the values you specify. There are two ways to pass information to this function so that a cookie can be set: Array Method, and Discrete Parameters:</p>\r\n<h4 style=\"color:#444444;font-size:14px;margin:22px 0px 0px;padding:0px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">Array Method</h4>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Using this method, an associative array is passed to the first parameter:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$cookie = array(<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;\'name\'&nbsp;&nbsp;&nbsp;=&gt; \'The Cookie Name\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;\'value\'&nbsp;&nbsp;=&gt; \'The Value\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;\'expire\' =&gt; \'86500\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;\'domain\' =&gt; \'.some-domain.com\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;\'path\'&nbsp;&nbsp;&nbsp;=&gt; \'/\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;\'prefix\' =&gt; \'myprefix_\',<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;\'secure\' =&gt; TRUE<br />\r\n);<br />\r\n<br />\r\n$this-&gt;input-&gt;set_cookie($cookie);</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\"><strong>Notes:</strong></p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Only the name and value are required. To delete a cookie set it with the expiration blank.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The expiration is set in&nbsp;<strong>seconds</strong>, which will be added to the current time. Do not include the time, but rather only the number of seconds from&nbsp;<em>now</em>&nbsp;that you wish the cookie to be valid. If the expiration is set to zero the cookie will only last as long as the browser is open.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">For site-wide cookies regardless of how your site is requested, add your URL to the&nbsp;<strong>domain</strong>&nbsp;starting with a period, like this: .your-domain.com</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The path is usually not needed since the function sets a root path.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The prefix is only needed if you need to avoid name collisions with other identically named cookies for your server.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The secure boolean is only needed if you want to make it a secure cookie by setting it to TRUE.</p>\r\n<h4 style=\"color:#444444;font-size:14px;margin:22px 0px 0px;padding:0px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">Discrete Parameters</h4>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">If you prefer, you can set the cookie by passing data using individual parameters:</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;set_cookie($name, $value, $expire, $domain, $path, $prefix, $secure);</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;cookie()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Lets you fetch a cookie. The first parameter will contain the name of the cookie you are looking for (including any prefixes):</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">cookie(\'some_cookie\');</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The function returns FALSE (boolean) if the item you are attempting to retrieve does not exist.</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">The second optional parameter lets you run the data through the XSS filter. It\'s enabled by setting the second parameter to boolean TRUE;</p>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\"><code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;\">cookie(\'some_cookie\', TRUE);</code></p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;ip_address()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Returns the IP address for the current user. If the IP address is not valid, the function will return an IP of: 0.0.0.0</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">echo $this-&gt;input-&gt;ip_address();</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;valid_ip(<var style=\"color:#8f5b00;font-style:normal;\">$ip</var>)</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Takes an IP address as input and returns TRUE or FALSE (boolean) if it is valid or not. Note: The $this-&gt;input-&gt;ip_address() function above validates the IP automatically.</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">if ( ! $this-&gt;input-&gt;valid_ip($ip))<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; echo \'Not Valid\';<br />\r\n}<br />\r\nelse<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; echo \'Valid\';<br />\r\n}</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Accepts an optional second string parameter of \"IPv4\" or \"IPv6\" to specify an IP format. The default checks for both formats.</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;user_agent()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Returns the user agent (web browser) being used by the current user. Returns FALSE if it\'s not available.</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">echo $this-&gt;input-&gt;user_agent();</code><p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">See the&nbsp;<a href=\"http://localhost/ci_guide/libraries/user_agent.html\" style=\"color:#0134c5;background-color:transparent;text-decoration:initial;outline-style:none;\">User Agent Class</a>&nbsp;for methods which extract information from the user agent string.</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;request_headers()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Useful if running in a non-Apache environment where&nbsp;<a href=\"http://php.net/apache_request_headers\" style=\"color:#0134c5;background-color:transparent;text-decoration:initial;outline-style:none;\">apache_request_headers()</a>&nbsp;will not be supported. Returns an array of headers.</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$headers = $this-&gt;input-&gt;request_headers();</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;get_request_header();</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Returns a single member of the request headers array.</p>\r\n<code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;get_request_header(\'some-header\', TRUE);</code><h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;is_ajax_request()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Checks to see if the&nbsp;<var style=\"color:#8f5b00;font-weight:bold;font-style:normal;\">HTTP_X_REQUESTED_WITH</var>&nbsp;server header has been set, and returns a boolean response.</p>\r\n<h2 style=\"border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#999999;font-size:18px;margin:28px 0px 16px;padding:5px 0px 6px;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;line-height:normal;\">$this-&gt;input-&gt;is_cli_request()</h2>\r\n<p style=\"margin-top:12px;margin-right:20px;margin-bottom:12px;color:#333333;font-family:\'Lucida Grande\', Verdana, Geneva, sans-serif;font-size:14px;line-height:normal;\">Checks to see if the&nbsp;<var style=\"color:#8f5b00;font-weight:bold;font-style:normal;\">STDIN</var>&nbsp;constant is set, which is a failsafe way to see if PHP is being run on the command line.</p>\r\n<p><code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\">$this-&gt;input-&gt;is_cli_request()</code><code style=\"font-family:Monaco, Verdana, sans-serif;font-size:12px;background-color:#f9f9f9;border:1px solid #d0d0d0;color:#002166;display:block;margin:14px 0px;padding:12px 10px;line-height:normal;\"><br />\r\n</code></p>\r\n<pre class=\"brush:php; toolbar: true; auto-links: true;\">/**\r\n * Input Class\r\n *\r\n * Pre-processes global input data for security\r\n * 安全预处理全局输入数据\r\n * @package		CodeIgniter\r\n * @subpackage	Libraries\r\n * @category	Input\r\n * @author		ExpressionEngine Dev Team\r\n * @link		http://codeigniter.com/user_guide/libraries/input.html\r\n */\r\nclass CI_Input {\r\n\r\n	/**\r\n	 * IP address of the current user\r\n	 * 当前用户的ip地址\r\n	 * @var string\r\n	 */\r\n	var $ip_address				= FALSE;\r\n	/**\r\n	 * user agent (web browser) being used by the current user\r\n	 * 当前用户（web浏览器）代理\r\n	 * @var string\r\n	 */\r\n	var $user_agent				= FALSE;\r\n	/**\r\n	 * If FALSE, then $_GET will be set to an empty array\r\n	 * 如果是FALSE ， 然后$_GET将被设置为空数组\r\n	 * @var bool\r\n	 */\r\n	var $_allow_get_array		= TRUE;\r\n	/**\r\n	 * If TRUE, then newlines are standardized\r\n	 * 如果为TRUR，新行将被标准化\r\n	 * @var bool\r\n	 */\r\n	var $_standardize_newlines	= TRUE;\r\n	/**\r\n	 * Determines whether the XSS filter is always active when GET, POST or COOKIE data is encountered\r\n	 * Set automatically based on config setting\r\n	 * 决定是否总是在GET ,POST , COOKIE数据中进行XSS过滤\r\n	 * 在配置选项里面配置是否自动开启\r\n	 * @var bool\r\n	 */\r\n	var $_enable_xss			= FALSE;\r\n	/**\r\n	 * Enables a CSRF cookie token to be set.\r\n	 * Set automatically based on config setting\r\n	 * 允许CSRF cookie令牌\r\n	 * @var bool\r\n	 */\r\n	var $_enable_csrf			= FALSE;\r\n	/**\r\n	 * List of all HTTP request headers\r\n	 * HTTP请求头部的列表\r\n	 * @var array\r\n	 */\r\n	protected $headers			= array();\r\n\r\n	/**\r\n	 * Constructor\r\n	 *\r\n	 * Sets whether to globally enable the XSS processing\r\n	 * and whether to allow the $_GET array\r\n	 * 设置是否全局允许XSS处理和是否允许使用$_GET数组\r\n	 * @return	void\r\n	 */\r\n	public function __construct()\r\n	{\r\n		log_message(\'debug\', \"Input Class Initialized\");\r\n\r\n		$this-&gt;_allow_get_array	= (config_item(\'allow_get_array\') === TRUE);\r\n		$this-&gt;_enable_xss		= (config_item(\'global_xss_filtering\') === TRUE);\r\n		$this-&gt;_enable_csrf		= (config_item(\'csrf_protection\') === TRUE);\r\n\r\n		global $SEC;\r\n		$this-&gt;security =&amp; $SEC;\r\n\r\n		// Do we need the UTF-8 class?\r\n		// 是否需要UTF-8类\r\n		if (UTF8_ENABLED === TRUE)\r\n		{\r\n			global $UNI;\r\n			$this-&gt;uni =&amp; $UNI;\r\n		}\r\n\r\n		// Sanitize global arrays\r\n		$this-&gt;_sanitize_globals();\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Fetch from array\r\n	 * 从数组中检索\r\n	 * This is a helper function to retrieve values from global arrays\r\n	 *\r\n	 * @access	private\r\n	 * @param	array\r\n	 * @param	string\r\n	 * @param	bool\r\n	 * @return	string\r\n	 */\r\n	function _fetch_from_array(&amp;$array, $index = \'\', $xss_clean = FALSE)\r\n	{\r\n		if ( ! isset($array[$index]))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		if ($xss_clean === TRUE)\r\n		{\r\n			return $this-&gt;security-&gt;xss_clean($array[$index]);\r\n		}\r\n\r\n		return $array[$index];\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Fetch an item from the GET array\r\n	* 从get数组中检索数据\r\n	* @access	public\r\n	* @param	string\r\n	* @param	bool\r\n	* @return	string\r\n	*/\r\n	function get($index = NULL, $xss_clean = FALSE)\r\n	{\r\n		// Check if a field has been provided 检查是否提供了一个字段\r\n		if ($index === NULL AND ! empty($_GET))\r\n		{\r\n			$get = array();\r\n\r\n			// loop through the full _GET array 循环遍历整个_GET数组\r\n			foreach (array_keys($_GET) as $key)\r\n			{\r\n				$get[$key] = $this-&gt;_fetch_from_array($_GET, $key, $xss_clean);\r\n			}\r\n			return $get;\r\n		}\r\n\r\n		return $this-&gt;_fetch_from_array($_GET, $index, $xss_clean);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Fetch an item from the POST array\r\n	* 从POST数组中获取值\r\n	* @access	public\r\n	* @param	string\r\n	* @param	bool\r\n	* @return	string\r\n	*/\r\n	function post($index = NULL, $xss_clean = FALSE)\r\n	{\r\n		// Check if a field has been provided\r\n		if ($index === NULL AND ! empty($_POST))\r\n		{\r\n			$post = array();\r\n\r\n			// Loop through the full _POST array and return it\r\n			foreach (array_keys($_POST) as $key)\r\n			{\r\n				$post[$key] = $this-&gt;_fetch_from_array($_POST, $key, $xss_clean);\r\n			}\r\n			return $post;\r\n		}\r\n\r\n		return $this-&gt;_fetch_from_array($_POST, $index, $xss_clean);\r\n	}\r\n\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Fetch an item from either the GET array or the POST\r\n	* 从get和post中获取值， post优先\r\n	* @access	public\r\n	* @param	string	The index key\r\n	* @param	bool	XSS cleaning\r\n	* @return	string\r\n	*/\r\n	function get_post($index = \'\', $xss_clean = FALSE)\r\n	{\r\n		if ( ! isset($_POST[$index]) )\r\n		{\r\n			return $this-&gt;get($index, $xss_clean);\r\n		}\r\n		else\r\n		{\r\n			return $this-&gt;post($index, $xss_clean);\r\n		}\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Fetch an item from the COOKIE array\r\n	* 从cookie中获取值\r\n	* @access	public\r\n	* @param	string\r\n	* @param	bool\r\n	* @return	string\r\n	*/\r\n	function cookie($index = \'\', $xss_clean = FALSE)\r\n	{\r\n		return $this-&gt;_fetch_from_array($_COOKIE, $index, $xss_clean);\r\n	}\r\n\r\n	// ------------------------------------------------------------------------\r\n\r\n	/**\r\n	* Set cookie\r\n	* 设置cookie\r\n	* Accepts six parameter, or you can submit an associative\r\n	* array in the first parameter containing all the values.\r\n	*\r\n	* @access	public\r\n	* @param	mixed\r\n	* @param	string	the value of the cookie\r\n	* @param	string	the number of seconds until expiration\r\n	* @param	string	the cookie domain.  Usually:  .yourdomain.com\r\n	* @param	string	the cookie path\r\n	* @param	string	the cookie prefix\r\n	* @param	bool	true makes the cookie secure\r\n	* @return	void\r\n	*/\r\n	function set_cookie($name = \'\', $value = \'\', $expire = \'\', $domain = \'\', $path = \'/\', $prefix = \'\', $secure = FALSE)\r\n	{\r\n		if (is_array($name))\r\n		{\r\n			// always leave \'name\' in last place, as the loop will break otherwise, due to $$item\r\n			foreach (array(\'value\', \'expire\', \'domain\', \'path\', \'prefix\', \'secure\', \'name\') as $item)\r\n			{\r\n				if (isset($name[$item]))\r\n				{\r\n					$$item = $name[$item];\r\n				}\r\n			}\r\n		}\r\n\r\n		if ($prefix == \'\' AND config_item(\'cookie_prefix\') != \'\')\r\n		{\r\n			$prefix = config_item(\'cookie_prefix\');\r\n		}\r\n		if ($domain == \'\' AND config_item(\'cookie_domain\') != \'\')\r\n		{\r\n			$domain = config_item(\'cookie_domain\');\r\n		}\r\n		if ($path == \'/\' AND config_item(\'cookie_path\') != \'/\')\r\n		{\r\n			$path = config_item(\'cookie_path\');\r\n		}\r\n		if ($secure == FALSE AND config_item(\'cookie_secure\') != FALSE)\r\n		{\r\n			$secure = config_item(\'cookie_secure\');\r\n		}\r\n\r\n		if ( ! is_numeric($expire))\r\n		{\r\n			$expire = time() - 86500;\r\n		}\r\n		else\r\n		{\r\n			$expire = ($expire &gt; 0) ? time() + $expire : 0;\r\n		}\r\n\r\n		setcookie($prefix.$name, $value, $expire, $path, $domain, $secure);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Fetch an item from the SERVER array\r\n	* 从server中获取值\r\n	* @access	public\r\n	* @param	string\r\n	* @param	bool\r\n	* @return	string\r\n	*/\r\n	function server($index = \'\', $xss_clean = FALSE)\r\n	{\r\n		return $this-&gt;_fetch_from_array($_SERVER, $index, $xss_clean);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Fetch the IP Address\r\n	* 获取ip地址\r\n	* @return	string\r\n	*/\r\n	public function ip_address()\r\n	{\r\n		if ($this-&gt;ip_address !== FALSE)\r\n		{\r\n			return $this-&gt;ip_address;\r\n		}\r\n\r\n		$proxy_ips = config_item(\'proxy_ips\');\r\n		if ( ! empty($proxy_ips))\r\n		{\r\n			$proxy_ips = explode(\',\', str_replace(\' \', \'\', $proxy_ips));\r\n			foreach (array(\'HTTP_X_FORWARDED_FOR\', \'HTTP_CLIENT_IP\', \'HTTP_X_CLIENT_IP\', \'HTTP_X_CLUSTER_CLIENT_IP\') as $header)\r\n			{\r\n				if (($spoof = $this-&gt;server($header)) !== FALSE)\r\n				{\r\n					// Some proxies typically list the whole chain of IP\r\n					// addresses through which the client has reached us.\r\n					// e.g. client_ip, proxy_ip1, proxy_ip2, etc.\r\n					if (strpos($spoof, \',\') !== FALSE)\r\n					{\r\n						$spoof = explode(\',\', $spoof, 2);\r\n						$spoof = $spoof[0];\r\n					}\r\n\r\n					if ( ! $this-&gt;valid_ip($spoof))\r\n					{\r\n						$spoof = FALSE;\r\n					}\r\n					else\r\n					{\r\n						break;\r\n					}\r\n				}\r\n			}\r\n\r\n			$this-&gt;ip_address = ($spoof !== FALSE &amp;&amp; in_array($_SERVER[\'REMOTE_ADDR\'], $proxy_ips, TRUE))\r\n				? $spoof : $_SERVER[\'REMOTE_ADDR\'];\r\n		}\r\n		else\r\n		{\r\n			$this-&gt;ip_address = $_SERVER[\'REMOTE_ADDR\'];\r\n		}\r\n\r\n		if ( ! $this-&gt;valid_ip($this-&gt;ip_address))\r\n		{\r\n			$this-&gt;ip_address = \'0.0.0.0\';\r\n		}\r\n\r\n		return $this-&gt;ip_address;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Validate IP Address\r\n	* 验证ip地址\r\n	* @access	public\r\n	* @param	string\r\n	* @param	string	ipv4 or ipv6\r\n	* @return	bool\r\n	*/\r\n	public function valid_ip($ip, $which = \'\')\r\n	{\r\n		$which = strtolower($which);\r\n\r\n		// First check if filter_var is available\r\n		if (is_callable(\'filter_var\'))\r\n		{\r\n			switch ($which) {\r\n				case \'ipv4\':\r\n					$flag = FILTER_FLAG_IPV4;\r\n					break;\r\n				case \'ipv6\':\r\n					$flag = FILTER_FLAG_IPV6;\r\n					break;\r\n				default:\r\n					$flag = \'\';\r\n					break;\r\n			}\r\n\r\n			return (bool) filter_var($ip, FILTER_VALIDATE_IP, $flag);\r\n		}\r\n\r\n		if ($which !== \'ipv6\' &amp;&amp; $which !== \'ipv4\')\r\n		{\r\n			if (strpos($ip, \':\') !== FALSE)\r\n			{\r\n				$which = \'ipv6\';\r\n			}\r\n			elseif (strpos($ip, \'.\') !== FALSE)\r\n			{\r\n				$which = \'ipv4\';\r\n			}\r\n			else\r\n			{\r\n				return FALSE;\r\n			}\r\n		}\r\n\r\n		$func = \'_valid_\'.$which;\r\n		return $this-&gt;$func($ip);\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Validate IPv4 Address\r\n	* 验证ipv4地址\r\n	* Updated version suggested by Geert De Deckere\r\n	*\r\n	* @access	protected\r\n	* @param	string\r\n	* @return	bool\r\n	*/\r\n	protected function _valid_ipv4($ip)\r\n	{\r\n		$ip_segments = explode(\'.\', $ip);\r\n\r\n		// Always 4 segments needed\r\n		if (count($ip_segments) !== 4)\r\n		{\r\n			return FALSE;\r\n		}\r\n		// IP can not start with 0\r\n		if ($ip_segments[0][0] == \'0\')\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		// Check each segment\r\n		foreach ($ip_segments as $segment)\r\n		{\r\n			// IP segments must be digits and can not be\r\n			// longer than 3 digits or greater then 255\r\n			if ($segment == \'\' OR preg_match(\"/[^0-9]/\", $segment) OR $segment &gt; 255 OR strlen($segment) &gt; 3)\r\n			{\r\n				return FALSE;\r\n			}\r\n		}\r\n\r\n		return TRUE;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Validate IPv6 Address\r\n	* 验证ipv6地址\r\n	* @access	protected\r\n	* @param	string\r\n	* @return	bool\r\n	*/\r\n	protected function _valid_ipv6($str)\r\n	{\r\n		// 8 groups, separated by :\r\n		// 0-ffff per group\r\n		// one set of consecutive 0 groups can be collapsed to ::\r\n\r\n		$groups = 8;\r\n		$collapsed = FALSE;\r\n\r\n		$chunks = array_filter(\r\n			preg_split(\'/(:{1,2})/\', $str, NULL, PREG_SPLIT_DELIM_CAPTURE)\r\n		);\r\n\r\n		// Rule out easy nonsense\r\n		if (current($chunks) == \':\' OR end($chunks) == \':\')\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		// PHP supports IPv4-mapped IPv6 addresses, so we\'ll expect those as well\r\n		if (strpos(end($chunks), \'.\') !== FALSE)\r\n		{\r\n			$ipv4 = array_pop($chunks);\r\n\r\n			if ( ! $this-&gt;_valid_ipv4($ipv4))\r\n			{\r\n				return FALSE;\r\n			}\r\n\r\n			$groups--;\r\n		}\r\n\r\n		while ($seg = array_pop($chunks))\r\n		{\r\n			if ($seg[0] == \':\')\r\n			{\r\n				if (--$groups == 0)\r\n				{\r\n					return FALSE;	// too many groups\r\n				}\r\n\r\n				if (strlen($seg) &gt; 2)\r\n				{\r\n					return FALSE;	// long separator\r\n				}\r\n\r\n				if ($seg == \'::\')\r\n				{\r\n					if ($collapsed)\r\n					{\r\n						return FALSE;	// multiple collapsed\r\n					}\r\n\r\n					$collapsed = TRUE;\r\n				}\r\n			}\r\n			elseif (preg_match(\"/[^0-9a-f]/i\", $seg) OR strlen($seg) &gt; 4)\r\n			{\r\n				return FALSE; // invalid segment\r\n			}\r\n		}\r\n\r\n		return $collapsed OR $groups == 1;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* User Agent\r\n	* 用户代理\r\n	* @access	public\r\n	* @return	string\r\n	*/\r\n	function user_agent()\r\n	{\r\n		if ($this-&gt;user_agent !== FALSE)\r\n		{\r\n			return $this-&gt;user_agent;\r\n		}\r\n\r\n		$this-&gt;user_agent = ( ! isset($_SERVER[\'HTTP_USER_AGENT\'])) ? FALSE : $_SERVER[\'HTTP_USER_AGENT\'];\r\n\r\n		return $this-&gt;user_agent;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Sanitize Globals\r\n	* 全局消毒\r\n	* This function does the following:\r\n	* 这个函数做下面几件事\r\n	* Unsets $_GET data (if query strings are not enabled)\r\n	* 删除$_GET数据（如果查询字符串不被允许）\r\n	* Unsets all globals if register_globals is enabled\r\n	* 删除所有的全局数据，如果register_globals设为允许的话\r\n	* Standardizes newline characters to \\n\r\n	* 消毒新行字符为\\n\r\n	* @access	private\r\n	* @return	void\r\n	*/\r\n	function _sanitize_globals()\r\n	{\r\n		// It would be \"wrong\" to unset any of these GLOBALS.\r\n		// 下面这些是需要进行保护的全局变量\r\n		$protected = array(\'_SERVER\', \'_GET\', \'_POST\', \'_FILES\', \'_REQUEST\',\r\n							\'_SESSION\', \'_ENV\', \'GLOBALS\', \'HTTP_RAW_POST_DATA\',\r\n							\'system_folder\', \'application_folder\', \'BM\', \'EXT\',\r\n							\'CFG\', \'URI\', \'RTR\', \'OUT\', \'IN\');\r\n\r\n		// Unset globals for securiy. 安全起见，删除全局变量\r\n		// This is effectively the same as register_globals = off\r\n		// 这样的效果和register_globals是相同的\r\n		// 经过下面处理后，所有的非保护的全局变量将被删除掉\r\n		foreach (array($_GET, $_POST, $_COOKIE) as $global)\r\n		{\r\n			if ( ! is_array($global))\r\n			{\r\n				if ( ! in_array($global, $protected))\r\n				{\r\n					global $$global;\r\n					$$global = NULL;\r\n				}\r\n			}\r\n			else\r\n			{\r\n				foreach ($global as $key =&gt; $val)\r\n				{\r\n					if ( ! in_array($key, $protected))\r\n					{\r\n						global $$key;\r\n						$$key = NULL;\r\n					}\r\n				}\r\n			}\r\n		}\r\n\r\n		// Is $_GET data allowed? If not we\'ll set the $_GET to an empty array\r\n		// 是否允许$_GET数据？ 如果不允许的话，设置$_GET为空数组\r\n		if ($this-&gt;_allow_get_array == FALSE)\r\n		{\r\n			$_GET = array();\r\n		}\r\n		else\r\n		{\r\n			if (is_array($_GET) AND count($_GET) &gt; 0)\r\n			{\r\n				foreach ($_GET as $key =&gt; $val)\r\n				{\r\n					$_GET[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($val);\r\n				}\r\n			}\r\n		}\r\n\r\n		// Clean $_POST Data\r\n		// 清理POST数据\r\n		if (is_array($_POST) AND count($_POST) &gt; 0)\r\n		{\r\n			foreach ($_POST as $key =&gt; $val)\r\n			{\r\n				$_POST[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($val);\r\n			}\r\n		}\r\n\r\n		// Clean $_COOKIE Data 清理COOKIE数据\r\n		if (is_array($_COOKIE) AND count($_COOKIE) &gt; 0)\r\n		{\r\n			// Also get rid of specially treated cookies that might be set by a server\r\n			// or silly application, that are of no use to a CI application anyway\r\n			// but that when present will trip our \'Disallowed Key Characters\' alarm\r\n			// http://www.ietf.org/rfc/rfc2109.txt\r\n			// note that the key names below are single quoted strings, and are not PHP variables\r\n			unset($_COOKIE[\'$Version\']);\r\n			unset($_COOKIE[\'$Path\']);\r\n			unset($_COOKIE[\'$Domain\']);\r\n\r\n			foreach ($_COOKIE as $key =&gt; $val)\r\n			{\r\n				$_COOKIE[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($val);\r\n			}\r\n		}\r\n\r\n		// Sanitize PHP_SELF \r\n		$_SERVER[\'PHP_SELF\'] = strip_tags($_SERVER[\'PHP_SELF\']);\r\n\r\n\r\n		// CSRF Protection check on HTTP requests 对HTTP请求进行SCRF保护检查\r\n		if ($this-&gt;_enable_csrf == TRUE &amp;&amp; ! $this-&gt;is_cli_request())\r\n		{\r\n			$this-&gt;security-&gt;csrf_verify();\r\n		}\r\n\r\n		log_message(\'debug\', \"Global POST and COOKIE data sanitized\");\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Clean Input Data\r\n	* 清理输入数据\r\n	* This is a helper function. It escapes data and\r\n	* standardizes newline characters to \\n\r\n	*\r\n	* @access	private\r\n	* @param	string\r\n	* @return	string\r\n	*/\r\n	function _clean_input_data($str)\r\n	{\r\n		if (is_array($str))\r\n		{\r\n			$new_array = array();\r\n			foreach ($str as $key =&gt; $val)\r\n			{\r\n				$new_array[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($val);\r\n			}\r\n			return $new_array;\r\n		}\r\n\r\n		/* We strip slashes if magic quotes is on to keep things consistent\r\n			如果小于PHP5.4版本，并且get_magic_quotes_gpc开启了，则去掉斜线。\r\n		   NOTE: In PHP 5.4 get_magic_quotes_gpc() will always return 0 and\r\n			 it will probably not exist in future versions at all.\r\n			 注意：在PHP5.4及之后版本，get_magic_quotes_gpc()将总是返回0，在后续版本中可能会移除该特性\r\n		*/\r\n		if ( ! is_php(\'5.4\') &amp;&amp; get_magic_quotes_gpc())\r\n		{\r\n			$str = stripslashes($str);\r\n		}\r\n\r\n		// Clean UTF-8 if supported 如果支持的话，清理UTF-8\r\n		if (UTF8_ENABLED === TRUE)\r\n		{\r\n			$str = $this-&gt;uni-&gt;clean_string($str);\r\n		}\r\n\r\n		// Remove control characters 移除控制字符串\r\n		$str = remove_invisible_characters($str);\r\n\r\n		// Should we filter the input data? 过滤输入数据XSS\r\n		if ($this-&gt;_enable_xss === TRUE)\r\n		{\r\n			$str = $this-&gt;security-&gt;xss_clean($str);\r\n		}\r\n\r\n		// Standardize newlines if needed 如果需要的话，消毒换行符\r\n		if ($this-&gt;_standardize_newlines == TRUE)\r\n		{\r\n			if (strpos($str, \"\\r\") !== FALSE)\r\n			{\r\n				$str = str_replace(array(\"\\r\\n\", \"\\r\", \"\\r\\n\\n\"), PHP_EOL, $str);\r\n			}\r\n		}\r\n\r\n		return $str;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	* Clean Keys\r\n	* 清理键\r\n	* This is a helper function. To prevent malicious users\r\n	* 这是一个助手函数\r\n	* from trying to exploit keys we make sure that keys are\r\n	* only named with alpha-numeric text and a few other items.\r\n	*\r\n	* @access	private\r\n	* @param	string\r\n	* @return	string\r\n	*/\r\n	function _clean_input_keys($str)\r\n	{\r\n		if ( ! preg_match(\"/^[a-z0-9:_\\/-]+$/i\", $str))\r\n		{\r\n			exit(\'Disallowed Key Characters.\');\r\n		}\r\n\r\n		// Clean UTF-8 if supported\r\n		if (UTF8_ENABLED === TRUE)\r\n		{\r\n			$str = $this-&gt;uni-&gt;clean_string($str);\r\n		}\r\n\r\n		return $str;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Request Headers\r\n	 * 请求头部\r\n	 * In Apache, you can simply call apache_request_headers(), however for\r\n	 * 在apache上，你可以简单的调用apache_request_headers()函数，然而，在其他的web服务器上，这个函数是未定义的\r\n	 * people running other webservers the function is undefined.\r\n	 *\r\n	 * @param	bool XSS cleaning\r\n	 *\r\n	 * @return array\r\n	 */\r\n	public function request_headers($xss_clean = FALSE)\r\n	{\r\n		// Look at Apache go!\r\n		if (function_exists(\'apache_request_headers\'))\r\n		{\r\n			$headers = apache_request_headers();\r\n		}\r\n		else\r\n		{\r\n			$headers[\'Content-Type\'] = (isset($_SERVER[\'CONTENT_TYPE\'])) ? $_SERVER[\'CONTENT_TYPE\'] : @getenv(\'CONTENT_TYPE\');\r\n\r\n			foreach ($_SERVER as $key =&gt; $val)\r\n			{\r\n				if (strncmp($key, \'HTTP_\', 5) === 0)\r\n				{\r\n					$headers[substr($key, 5)] = $this-&gt;_fetch_from_array($_SERVER, $key, $xss_clean);\r\n				}\r\n			}\r\n		}\r\n\r\n		// take SOME_HEADER and turn it into Some-Header\r\n		foreach ($headers as $key =&gt; $val)\r\n		{\r\n			$key = str_replace(\'_\', \' \', strtolower($key));\r\n			$key = str_replace(\' \', \'-\', ucwords($key));\r\n\r\n			$this-&gt;headers[$key] = $val;\r\n		}\r\n\r\n		return $this-&gt;headers;\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Get Request Header\r\n	 * 获取请求头部\r\n	 * Returns the value of a single member of the headers class member\r\n	 * \r\n	 * @param 	string		array key for $this-&gt;headers\r\n	 * @param	boolean		XSS Clean or not\r\n	 * @return 	mixed		FALSE on failure, string on success\r\n	 */\r\n	public function get_request_header($index, $xss_clean = FALSE)\r\n	{\r\n		if (empty($this-&gt;headers))\r\n		{\r\n			$this-&gt;request_headers();\r\n		}\r\n\r\n		if ( ! isset($this-&gt;headers[$index]))\r\n		{\r\n			return FALSE;\r\n		}\r\n\r\n		if ($xss_clean === TRUE)\r\n		{\r\n			return $this-&gt;security-&gt;xss_clean($this-&gt;headers[$index]);\r\n		}\r\n\r\n		return $this-&gt;headers[$index];\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Is ajax Request?\r\n	 * 是否是ajax请求\r\n	 * Test to see if a request contains the HTTP_X_REQUESTED_WITH header\r\n	 *\r\n	 * @return 	boolean\r\n	 */\r\n	public function is_ajax_request()\r\n	{\r\n		return ($this-&gt;server(\'HTTP_X_REQUESTED_WITH\') === \'XMLHttpRequest\');\r\n	}\r\n\r\n	// --------------------------------------------------------------------\r\n\r\n	/**\r\n	 * Is cli Request?\r\n	 * 是否是cli请求\r\n	 * Test to see if a request was made from the command line\r\n	 *\r\n	 * @return 	bool\r\n	 */\r\n	public function is_cli_request()\r\n	{\r\n		return (php_sapi_name() === \'cli\' OR defined(\'STDIN\'));\r\n	}\r\n\r\n}</pre>','<p>Input类在系统初始化的时候会自动加载，加载时间可以在<span><a href=\"/post-41.html\" style=\"color:#009900;\" target=\"_blank\">CodeIgniter框架 学习笔记 （5） CodeIgniter系统初始化文件</a>中的图上看出。</span></p><p><span>这个类主要完成两个工作，一个是根据配置，全局性的安全预处理所有来自用户的输入数据，二是作为助手函数，提供一些检索用户输入数据的方式。</span></p><p>下面是官方手册中的介绍，介绍的比较简单，直接用英文版的吧：</p><h1 style=\"color:#e13300;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#666666;font-weight:normal;font-size:24px;margin:0px 0px 20px;padding:3px 0px 7px 3px;font-family:\'Lucida Grande\', Verda','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(193,'【转】javascript BOM','<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:1.75em;\"><strong style=\"margin:0px;padding:0px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;color:#953734;font-size:16px;\">浏览器对象模型 BOM(browser object model)</span></strong></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:1.75em;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">基本的BOM体系结构：</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\"><img title=\"e4e6e20c6eed6d7994ca6b86.jpg\" border=\"0\" hspace=\"0\" src=\"http://www.izeq.net/upload/image/43531345263394.jpg\" width=\"428\" height=\"400\" style=\"margin:0px;padding:0px;border:0px;width:428px;float:none;height:400px;\" /><br style=\"margin:0px;padding:0px;\" />\r\n</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><strong style=\"margin:0px;padding:0px;\">window</strong></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">window对象是BOM对象的核心。所有对象和集合都以某种方式回接到window对象。</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">alert(window.document === document); //true</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">window对象表示整个浏览器窗口。如果页面使用框架集合，每个框架都由它自己的window对象表示，存放在frames集合中。</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\"><br style=\"margin:0px;padding:0px;\" />\r\n</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><strong style=\"margin:0px;padding:0px;\">系统对话框</strong></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">alert(\'你好\') &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"margin:0px;padding:0px;color:#8db3e2;\">//弹出警告框</span></span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">confirm(\'你确定？\') &nbsp; &nbsp; &nbsp;<span style=\"margin:0px;padding:0px;color:#8db3e2;\">&nbsp;//带确定和取消按钮的提示框，返回true或false</span></span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">prompt(\'请输入数字\',1) &nbsp; &nbsp;<span style=\"margin:0px;padding:0px;color:#8db3e2;\">//输入提示框，返回你输入的值</span></span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\"><br style=\"margin:0px;padding:0px;\" />\r\n</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><strong style=\"margin:0px;padding:0px;\">新建窗口</strong></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">open(\"url\",\"target\",\"width=200,height=200,top=100 ...\") &nbsp;</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">open返回子窗口的window对象</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">var a = open()</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">a.alert(\'hi\'); &nbsp;<span style=\"margin:0px;padding:0px;color:#8db3e2;\">//在子窗口中弹出</span></span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">&nbsp; &nbsp; &nbsp; &nbsp;</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><strong style=\"margin:0px;padding:0px;\">子窗口操作父窗口</strong></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">opener.document.write(\'在父窗口中输出\');</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">&nbsp; &nbsp; &nbsp; &nbsp;</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><strong style=\"margin:0px;padding:0px;\">窗口位置</strong></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">//IE支持screenLeft,firefox支持screenX,其他浏览器2个都支持,跨浏览器方法</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">var left = (typeof screenLeft == \'number\') ? screenLeft : screenX;</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">var top = (typeof screenTop == \'number\') ? screenTop : screenY;</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">&nbsp; &nbsp; &nbsp; &nbsp;</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><strong style=\"margin:0px;padding:0px;\">窗口大小</strong></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">firefox,safari,opera,chrome :</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">innerWidth,innerHeight &nbsp;<span style=\"margin:0px;padding:0px;color:#8db3e2;\">//页面长高</span></span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">outerWidth,outerHeight &nbsp;<span style=\"margin:0px;padding:0px;color:#8db3e2;\">//页面长高+边框及工具栏等</span></span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">//跨浏览器获取窗口大小</span></p>\r\n<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"></p>\r\n<div style=\"margin:0px;padding:0px;word-break:break-all;word-wrap:break-word;color:#454545;font-family:Arial;font-size:14px;line-height:28px;\"><div id=\"highlighter_29673\" class=\"syntaxhighlighter js\" style=\"padding:0px;word-break:break-all;word-wrap:break-word;width:816px;margin:1em 0px !important;position:relative !important;font-size:1em !important;\"><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-spacing:0px;width:815px;margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:1px solid #c0c0c0 !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:left !important;top:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;\"><tbody style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\"><tr style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\"><td class=\"gutter\" style=\"word-break:break-all;word-wrap:break-word;margin:0px !important;padding:5px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;\"><div class=\"line number1 index0 alt2\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:#fafafa !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:#fafafa !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">3</div>\r\n<div class=\"line number4 index3 alt1\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">4</div>\r\n<div class=\"line number5 index4 alt2\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:#fafafa !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">5</div>\r\n<div class=\"line number6 index5 alt1\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">6</div>\r\n<div class=\"line number7 index6 alt2\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:#fafafa !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">7</div>\r\n<div class=\"line number8 index7 alt1\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">8</div>\r\n<div class=\"line number9 index8 alt2\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:#fafafa !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">9</div>\r\n<div class=\"line number10 index9 alt1\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">10</div>\r\n<div class=\"line number11 index10 alt2\" style=\"word-break:break-all;word-wrap:break-word;white-space:nowrap;margin:0px !important;padding:0px 0.5em 0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:#fafafa !important;border-width:0px 3px 0px 0px !important;border-right-style:solid !important;border-right-color:#6ce26c !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;text-align:right !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\">11</div>\r\n</td>\r\n<td class=\"code\" style=\"word-break:break-all;word-wrap:break-word;width:749px;margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;\"><div class=\"container\" style=\"word-break:break-all;word-wrap:break-word;margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:relative !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\"><div class=\"line number1 index0 alt2\" style=\"word-break:break-all;word-wrap:break-word;margin:0px !important;padding:0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:#fafafa !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\"><code class=\"js keyword\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-weight:bold !important;font-size:1em !important;min-height:auto !important;color:#006699 !important;\">var</code>&nbsp;<code class=\"js plain\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;\">width = window.innerWidth;&nbsp;&nbsp;</code><code class=\"js comments\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;color:#008200 !important;\">//加window防止IE不支持</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"word-break:break-all;word-wrap:break-word;margin:0px !important;padding:0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\"><code class=\"js keyword\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-weight:bold !important;font-size:1em !important;min-height:auto !important;color:#006699 !important;\">var</code>&nbsp;<code class=\"js plain\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;\">height = window.innerHeight;</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"word-break:break-all;word-wrap:break-word;margin:0px !important;padding:0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:#fafafa !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;min-height:auto !important;\"><code class=\"js keyword\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-weight:bold !important;font-size:1em !important;min-height:auto !important;color:#006699 !important;\">if</code><code class=\"js plain\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;\">(</code><code class=\"js keyword\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-weight:bold !important;font-size:1em !important;min-height:auto !important;color:#006699 !important;\">typeof</code>&nbsp;<code class=\"js plain\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;\">width !=&nbsp;</code><code class=\"js string\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;color:blue !important;\">\'number\'</code><code class=\"js plain\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;\">){&nbsp;&nbsp;&nbsp;</code><code class=\"js comments\" style=\"margin:0px !important;padding:0px !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;border:0px !important;float:none !important;left:auto !important;line-height:1.1em !important;outline:0px !important;overflow:visible !important;position:static !important;right:auto !important;top:auto !important;width:auto !important;box-sizing:content-box !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;min-height:auto !important;color:#008200 !important;\">//在IE下是undefined</code></div>\r\n<div class=\"line number4 index3 alt1\" style=\"word-break:break-all;word-wrap:break-word;margin:0px !important;padding:0px 1em !important;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radiu','<p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:1.75em;\"><strong style=\"margin:0px;padding:0px;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;color:#953734;font-size:16px;\">浏览器对象模型 BOM(browser object model)</span></strong></p><p style=\"margin-bottom:0px;padding:0px;color:#454545;font-family:Arial;font-size:14px;line-height:1.75em;\"><span class=\"Apple-style-span\" style=\"margin:0px;padding:0px;\">基本的BOM体系结构：</span></p><p style=\"marg','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(194,'【转】javascript知识点思维导图','<p>转自：http://julying.com/blog/author/julying/</p><p> <a href=\"#dom\">DOM基本操作</a> |<a href=\"#array\">数组</a> &nbsp;|<a href=\"#dataType\">数据类型</a> &nbsp;|<a href=\"#function\">函数基础</a> &nbsp;|<a href=\"#process\">流程语句</a> &nbsp;|<a href=\"#regex\">正则表达式 </a> &nbsp;|<a href=\"#string\">字符串函数</a> &nbsp;|<a href=\"#var\"> 变量 </a> &nbsp;|<a href=\"#window\">window对象 </a> &nbsp;|<a href=\"#operator\">运算符</a></p><div id=\"ithink\"><p><a name=\"dom\">DOM基本操作</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/fe711668424c0e51d2ea0e9465f57da620121211144804.gif\" id=\"ematt:13\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/fe711668424c0e51d2ea0e9465f57da620121211144804.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p><p><a name=\"array\">数组</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/937967a342f8748d7301cb1d1994023220121211144807.gif\" id=\"ematt:14\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/937967a342f8748d7301cb1d1994023220121211144807.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p><p><a name=\"dataType\">数据类型</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/e41e10287e14d8c7ecb3d2954f2dbdf020121211144810.gif\" id=\"ematt:15\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/e41e10287e14d8c7ecb3d2954f2dbdf020121211144810.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p><p><a name=\"function\">函数基础</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/3352dc69ac512f864bbf39ff89ebb2b020121211144812.gif\" id=\"ematt:16\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/3352dc69ac512f864bbf39ff89ebb2b020121211144812.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p><p><a name=\"process\">流程语句</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/8b3026916ae93181f27abf8c2cd3592520121211144823.gif\" id=\"ematt:18\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/8b3026916ae93181f27abf8c2cd3592520121211144823.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p><p><a name=\"regex\">正则表达式</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/197218d84393ade9c908d829ffbbc5b220121211144831.gif\" id=\"ematt:19\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/197218d84393ade9c908d829ffbbc5b220121211144831.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p><p><a name=\"string\">字符串函数</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/0abd0e62b366070566fc4e9124d4c2d720121211144838.gif\" id=\"ematt:20\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/0abd0e62b366070566fc4e9124d4c2d720121211144838.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p><p><a name=\"var\">变量</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/5f59a3d9b79ba033fc7c101fb14ec37b20121211144839.gif\" id=\"ematt:21\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/5f59a3d9b79ba033fc7c101fb14ec37b20121211144839.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p><p><a name=\"window\">window对象</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/4766d9fd7df61cb1d834bea6af84930220121211144847.gif\" id=\"ematt:22\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/4766d9fd7df61cb1d834bea6af84930220121211144847.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p><p><a name=\"operator\">运算符</a></p><p><a target=\"_blank\" href=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/002341f6c08a587d52dbbc22a75b368220121211145747.gif\" id=\"ematt:23\"><img src=\"/public/common/images/loading.gif\" class=\"lazy\" data-original=\"http://code404-emlog.stor.sinaapp.com/content/uploadfile/201212/002341f6c08a587d52dbbc22a75b368220121211145747.gif\" alt=\"点击查看原图\" border=\"0\" /></a></p></div><style type=\"text/css\" _ue_org_tagname=\"style\">\n#ithink img {\n    width:700px;\n    border:2px solid #CCC;\n}\n</style>','关于javascript的一些思维导图， 总结归纳了javascript的知识。方便查看以及学习。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(195,'Sublime Text2 插件','<p>安装PHP Ci框架支持：</p>\n<p>&nbsp; &nbsp;&nbsp;<span style=\"color:#444444;font-family:Tahoma, \'Microsoft Yahei\', Simsun;font-size:14px;line-height:21px;\">https://github.com/mpmont/ci-snippets</span></p>\n<p><span style=\"color:#444444;font-family:Tahoma, \'Microsoft Yahei\', Simsun;font-size:14px;line-height:21px;\">插件：</span></p>\nhttp://blog.csdn.net/w6611415/article/details/7725566<p><span style=\"color:#444444;font-family:Tahoma, \'Microsoft Yahei\', Simsun;font-size:14px;line-height:21px;\"><br />\n</span></p>\n<p><span style=\"color:#444444;font-family:\'Tahoma, Microsoft Yahei, Simsun\';\"><span style=\"font-size:14px;line-height:21px;\">安装CTags，代码提示功能：</span></span></p>\n<p><span style=\"color:#444444;font-family:\'Tahoma, Microsoft Yahei, Simsun\';\"><span style=\"font-size:14px;line-height:21px;\">&nbsp; &nbsp; 1. 首先到https://github.com/SublimeText/CTags下载下来CTags，并按照说明安装（放到Sublime目录下的插件目录中），下载ctags.exe文件，将ctags.exe放到sublime根目录下。</span></span></p>\n<p><span style=\"color:#444444;font-family:\'Tahoma, Microsoft Yahei, Simsun\';\"><span style=\"font-size:14px;line-height:21px;\">&nbsp; &nbsp; 2. 操作：</span></span></p>\n<p><span style=\"color:#444444;font-family:\'Tahoma, Microsoft Yahei, Simsun\';\"><span style=\"font-size:14px;line-height:21px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 使用代码定义查看，需要在项目目录下先建立.ctags文件<br />\n</span></span></p>\n<p><table style=\"margin-top:15px;margin-right:0px;margin-left:0px;padding:0px;border:0px;border-spacing:0px;font-size:14px;font:inherit;color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;line-height:22px;text-align:start;margin-bottom:0px !important;\"><tbody style=\"margin:0px;padding:0px;border:0px;\"><tr style=\"margin:0px;padding:0px;border-width:1px 0px 0px;border-top-style:solid;border-top-color:#cccccc;\"><th style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">Command</th>\n<th style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">Key Binding</th>\n<th style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">Alt Binding</th>\n<th style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">Mouse Binding</th>\n</tr>\n<tr style=\"margin:0px;padding:0px;border-width:1px 0px 0px;border-top-style:solid;border-top-color:#cccccc;background-color:#f8f8f8;\"><td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">rebuild_ctags</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">ctrl+t ctrl+r</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n</tr>\n<tr style=\"margin:0px;padding:0px;border-width:1px 0px 0px;border-top-style:solid;border-top-color:#cccccc;\"><td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">navigate_to_definition</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">ctrl+t ctrl+t</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">ctrl+&gt;</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">ctrl+shift+left_click</td>\n</tr>\n<tr style=\"margin:0px;padding:0px;border-width:1px 0px 0px;border-top-style:solid;border-top-color:#cccccc;background-color:#f8f8f8;\"><td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">jump_back</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">ctrl+t ctrl+b</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">ctrl+&lt;</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">ctrl+shift+right_click</td>\n</tr>\n<tr style=\"margin:0px;padding:0px;border-width:1px 0px 0px;border-top-style:solid;border-top-color:#cccccc;\"><td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">jump_back to_last_modification</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">ctrl+t ctrl+m</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n</tr>\n<tr style=\"margin:0px;padding:0px;border-width:1px 0px 0px;border-top-style:solid;border-top-color:#cccccc;background-color:#f8f8f8;\"><td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">show_symbols</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">alt+s</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n</tr>\n<tr style=\"margin:0px;padding:0px;border-width:1px 0px 0px;border-top-style:solid;border-top-color:#cccccc;\"><td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">show_symbols multi</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">alt+shift+s</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n</tr>\n<tr style=\"margin:0px;padding:0px;border-width:1px 0px 0px;border-top-style:solid;border-top-color:#cccccc;background-color:#f8f8f8;\"><td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">show_symbols suffix</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\">ctrl+alt+shift+s</td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n<td style=\"margin:0px;padding:6px 13px;border:1px solid #cccccc;\"></td>\n</tr>\n</tbody>\n</table>\n</p>\n<p>命令如上表所示，使用快捷键ctrl+t , 然后ctrl+r即可建立。</p>\n<p>跳转到代码定义时，命令是连续按两次ctrl+t。</p>','<p>安装PHP Ci框架支持：</p>\n<p>&nbsp; &nbsp;&nbsp;<span style=\"color:#444444;font-family:Tahoma, \'Microsoft Yahei\', Simsun;font-size:14px;line-height:21px;\">https://github.com/mpmont/ci-snippets</span></p>\n<p><span style=\"color:#444444;font-family:Tahoma, \'Microsoft Yahei\', Simsun;font-size:14px;line-height:21px;\"><br />\n</span></p>\n<p><span style=\"color:#444444;font-family:Tahoma, \'Microsoft Yahei\', Simsun;font-size:14px;line-height:21px;\"><br />\n</span></p>','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(196,'仙剑奇侠传5前传 瑕MV 有情燕','<p><embed src=\"http://www.tudou.com/v/gCmGaBfOgKs/&amp;resourceId=0_05_02_99/v.swf\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" wmode=\"opaque\" width=\"480\" height=\"400\" /></p>','仙剑奇侠传5前传 瑕MV 有情燕','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(197,'Maven在windows下的安装配置','<p>当前安装环境：windows 8 企业版</p><p><br /></p><p>安装Maven需要先安装JDK，安装JDK这里就不说了，我的电脑安装的是1.7</p><p><br /></p><p>首先 ，需要到maven官方网站下载maven，网址：<a href=\"http://maven.apache.org/download.cgi\" target=\"_blank\" title=\"maven下载\">http://maven.apache.org/download.cgi</a></p><p>我下载的是3.0.4版本。</p><p><br /></p><p>下载下来后，解压到硬盘中的任意位置（任意位置是指你想要安装maven的位置，maven是不需要安装的解压缩后，配置一下就可以使用），我放到了D:\\Programs\\apache-maven-3.0.4</p><p><br /></p><p>接下来配置环境变量，安装Maven需要配置两个环境变量，一个是PATH， 一个是M2_HOME.</p><p>1. 在PATH中添加当前maven执行文件的路径，在maven目录下的bin中，也就是path中添加如下<strong>;D:\\Programs\\apache-maven-3.0.4\\bin</strong> &nbsp; &nbsp;.</p><p>2. 添加环境变量M2_HOME, 取值为Maven的安装目录，如:D:\\Programs\\apache-maven-3.0.4</p><p><br /></p><p>配置完成后，检验一下安装是否成功，打开命令提示符界面，输入：</p><pre class=\"brush:plain;toolbar:false;\">C:\\Users\\code.404&gt;mvn -version</pre><p>如果可以看到输出如下结果，说明配置成功。</p><p><br /></p><pre class=\"brush:plain;toolbar:false;\">Apache Maven 3.0.4 (r1232337; 2012-01-17 16:44:56+0800)\nMaven home: D:\\Programs\\apache-maven-3.0.4\nJava version: 1.7.0, vendor: Oracle Corporation\nJava home: C:\\Program Files\\Java\\jdk1.7.0\\jre\nDefault locale: zh_CN, platform encoding: GBK\nOS name: \"windows nt (unknown)\", version: \"6.2\", arch: \"amd64\", family: \"windows\n\"</pre><p><br /></p>','当前安装环境：windows 8 企业版\n\n安装Maven需要先安装JDK，安装JDK这里就不说了，我的电脑安装的是1.7\n首先 ，需要到maven官方网站下载maven，网址：http://maven.apache.org/download.cgi   \n我下载的是3.0.4版本。\n下载下来后，解压到硬盘中的任意位置（任意位置是指你想要安装maven的位置，maven是不需要安装的解压缩后，配置一下就可以使用），我放到了D:\\Programs\\apache-maven-3.0.4','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(198,'Gnome3在菜单中添加自定义应用程序','<p>在Gnome3中添加自定义的应用程序图标，可以通过在/usr/share/application/文件夹中增加相应的程序说明文件添加。如zendstudio.desktop，下面是一个例子：<br /></p><pre class=\"brush:bash;toolbar:false;\">[Desktop Entry]\nEncoding=UTF-8                    #编码格式\nName=ZendStudio                    #程序名称\nComment=Lanch Zend Studio            #程序说明\nExec=/opt/ZendStudio/ZendStudio        #程序执行文件\nTerminal=false                        #是否在终端中运行\nType=Application                    #程序类型\nIcon=/opt/ZendStudio/icon.xpm        #程序图标\nCategories=Development;IDE;PHP;        #程序所属分类</pre><p><br /></p>','在Gnome3中添加自定义的应用程序图标，可以通过在/usr/share/application/文件夹中增加相应的程序说明文件添加。如zendstudio.desktop，下面是一个例子','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(199,'思维导图：CanvasRenderingContext2D','<p>html5 Canvas的CanvasRenderingContext2D对象相关的思维导图，梳理了与绘图有关的方法。<br /></p><p><img src=\"http://code404-orionis.stor.sinaapp.com/public/uploads/files/aba4c3767d6cf84608279daf6d5b55ed.jpg\" width=\"800\" height=\"3077\" border=\"0\" hspace=\"0\" vspace=\"0\" style=\"width:800px;height:3077px;float:none;\" /><br /></p>','html5 Canvas的CanvasRenderingContext2D对象相关的思维导图，梳理了与绘图有关的方法。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(200,'Eclipse 插件积累','<p>Apache Maven：<a href=\"http://m2eclipse.sonatype.org/sites/m2e\">http://m2eclipse.sonatype.org/sites/m2e</a></p><p> <br /></p><p>EGit P2 ： <a href=\"http://download.eclipse.org/egit/updates\">http://download.eclipse.org/egit/updates</a></p><p> <br /></p><p>Subclipse 1.6.x Update Site： <span class=\"Apple-tab-span\"></span><a href=\"http://subclipse.tigris.org/update_1.6.x\">http://subclipse.tigris.org/update_1.6.x</a></p><p> <br /></p><p><br /></p>','Apache Maven：http://m2eclipse.sonatype.org/sites/m2e\nEGit P2 ： http://download.eclipse.org/egit/updates\n​Subclipse 1.6.x Update Site： http://subclipse.tigris.org/update_1.6.x','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(201,'Dwr学习思维导图','<p style=\"line-height:16px;\"><a target=\"_blank\" href=\"http://code404-orionis.stor.sinaapp.com/public/uploads/files/7692c40cf5e3a4736cf3b28b16e475e7.swf\"><img src=\"http://code404-orionis.stor.sinaapp.com/public/uploads/files/e90ffd592a9beae0d3d141c39540c7ef.JPG\" width=\"600\" height=\"373\" border=\"0\" hspace=\"0\" vspace=\"0\" style=\"width:600px;height:373px;float:none;\" /></a></p><p><br /></p><p><a target=\"_blank\" href=\"http://code404-orionis.stor.sinaapp.com/public/uploads/files/7692c40cf5e3a4736cf3b28b16e475e7.swf\">单击图片查看</a></p>','自己学习Dwr时画的思维导图，用MindManager画的，不过不是很全，只画了基础部分的图，方便梳理学习的知识吧。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(202,'Freemarker学习笔记','<p>1.&nbsp;Freemarker的标记<br /></p><p>${...}:&nbsp;FreeMarker&nbsp;will&nbsp;replace&nbsp;it&nbsp;in&nbsp;the&nbsp;output&nbsp;with&nbsp;the&nbsp;actual&nbsp;value&nbsp;of&nbsp;the&nbsp;thing&nbsp;inside&nbsp;the&nbsp;curly&nbsp;brackets.&nbsp;They&nbsp;are&nbsp;called&nbsp;<strong>interpolation</strong>s</p><pre class=\"brush:html;toolbar:false;\">${\"Hello ${user}!\"}\n${\"${user}${user}${user}${user}\"}</pre><p>&nbsp;</p><p>FTL&nbsp;tags：&nbsp;The&nbsp;name&nbsp;of&nbsp;these&nbsp;tags&nbsp;start&nbsp;with&nbsp;<tt>#</tt>.&nbsp;(User-defined&nbsp;FTL&nbsp;tags&nbsp;use&nbsp;<tt>@</tt>&nbsp;instead&nbsp;of&nbsp;<tt>#</tt>,&nbsp;but&nbsp;they&nbsp;are&nbsp;an&nbsp;advanced&nbsp;topic.)<br /></p><p>Comments：Comments&nbsp;are&nbsp;similar&nbsp;to&nbsp;HTML&nbsp;comments,&nbsp;but&nbsp;they&nbsp;are&nbsp;delimited&nbsp;by&nbsp;<tt>&lt;#--&lt;&gt;&nbsp;and<tt>--&gt;</tt>.(Comments&nbsp;can&nbsp;be&nbsp;placed&nbsp;inside&nbsp;FTL&nbsp;tags&nbsp;and&nbsp;interpolations.)<!--#--<--></tt></p><pre class=\"brush:html;toolbar:false;\">Welcome ${user &lt;#--&gt;}!\n[BR]\nWe have these animals:[BR]\n   \n[BR]&lt;#list &lt;#--&gt; animals as &lt;#--&gt; being&gt;[BR]</pre><p><br /></p><p>2.&nbsp;几个指令的DEMO</p><p>if&nbsp;指令</p><pre class=\"brush:html;toolbar:false;\">Welcome!Welcome ${user}&lt;#if user=\"=\"&gt;, our beloved leader!  Our latest product:  ${latestProduct.name}!</pre><p><br /></p><pre class=\"brush:html;toolbar:false;\">&lt;#if animals.python.price &lt; animals.elephant.price&gt;\n  Pythons are cheaper than elephants today.\n&lt;#else&gt;  Pythons are not cheaper than elephants today.&lt;#if&gt;</pre><p>list指令<br /></p><pre class=\"brush:html;toolbar:false;\">We have these animals:NamePrice  &lt;#list&gt;${being.name}${being.price} Euros</pre><p>include指令<br /></p><pre class=\"brush:html;toolbar:false;\">Test pageTest pageBlah blah...&lt;#include&gt;</pre><p>&nbsp;<br /></p><p>3.&nbsp;处理遗失的变量</p><p>在使用变量的时候，可以通过在变量的后面增加一个!+默认值的形式指定一个默认值<br /></p><pre class=\"brush:html;toolbar:false;\">Welcome ${user!\"Anonymous\"}!</pre><p>或者是，也可以通过在if的条件之后两个?，判断变量是否存在<br /></p><pre class=\"brush:html;toolbar:false;\">&lt;#if&gt;Welcome ${user}!</pre><p>注意的是，对于！和??，如果在animals.python.price后面的话，仅仅代表的是price的默认值或者是price是否存在，如果要对整个变量起作用的话，应该用()包起来，如(animal.python.price)!&quot;默认值&quot;</p><p>&nbsp;</p><p>4.&nbsp;内建函数</p><p>1）&nbsp;html</p><p>The&nbsp;string&nbsp;with&nbsp;all&nbsp;special&nbsp;HTML&nbsp;characters&nbsp;replaced&nbsp;with&nbsp;entity&nbsp;references&nbsp;(E.g.&nbsp;&lt;&nbsp;with&nbsp;&lt;).&lt;&gt;<p>2)&nbsp;cap_first&nbsp;</p><p>&nbsp;&nbsp;&nbsp;he&nbsp;string&nbsp;with&nbsp;the&nbsp;first&nbsp;letter&nbsp;converted&nbsp;to&nbsp;upper&nbsp;case</p><p>3)&nbsp;lower_case</p><p>The&nbsp;lowercase&nbsp;version&nbsp;of&nbsp;the&nbsp;string</p><p>4)&nbsp;upper_case</p><p>&nbsp;&nbsp;&nbsp;The&nbsp;uppercase&nbsp;version&nbsp;of&nbsp;the&nbsp;string</p><p>5)&nbsp;trim</p><p>&nbsp;&nbsp;&nbsp;The&nbsp;string&nbsp;without&nbsp;leading&nbsp;and&nbsp;trailing&nbsp;white-spaces</p><p>6)&nbsp;size</p><p>&nbsp;&nbsp;The&nbsp;number&nbsp;of&nbsp;elements&nbsp;in&nbsp;the&nbsp;sequence</p><p>7)&nbsp;int</p><p>&nbsp;&nbsp;&nbsp;The&nbsp;number&nbsp;of&nbsp;elements&nbsp;in&nbsp;the&nbsp;sequence</p><pre class=\"brush:html;toolbar:false;\">${test?html}\n${test?upper_case?html}</pre><p>5.&nbsp;方法调用</p><p>&nbsp;</p><pre class=\"brush:html;toolbar:false;\">假设调用一个方法repeat,第一个参数是要操作的变量，后面的是参数\n${repeat(\"What\", 3)} \n   \n${repeat(repeat(\"x\", 2), 3) + repeat(\"What\", 4)?upper_case}</pre><p>&nbsp;</p><p>&nbsp;</p><p>常见问题</p><p>1.&nbsp;&nbsp;中文乱码问题解决方案:</p><p>&nbsp;</p><pre class=\"brush:xml;toolbar:false;\">&lt;beans:bean id=\"freemarkerConfig\"\n        class=\"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer\"&gt;\n        &lt;beans:property name=\"templateLoaderPath\" value=\"/WEB-INF/views/\" /&gt;\n        &lt;beans:property name=\"defaultEncoding\" value=\"utf-8\"&gt;&lt;/beans:property&gt;\n    &lt;/beans:bean&gt;\n    &lt;beans:bean id=\"viewResolver\"\n        class=\"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver\"&gt;\n        &lt;beans:property name=\"cache\" value=\"true\" /&gt;\n        &lt;beans:property name=\"prefix\" value=\"\" /&gt;\n        &lt;beans:property name=\"suffix\" value=\".ftl\" /&gt;\n        &lt;beans:property name=\"contentType\" value=\"text/html;charset=utf-8\"&gt;&lt;/beans:property&gt;\n    &lt;/beans:bean&gt;</pre><p>在freemarkerConfig中增加默认的编码为utf-8，同时viewResolver的contentType也设置为utf-8的。</p><p>当然，页面中head之间增加</p><!--).<--><p>&nbsp;</p><pre class=\"brush:html;toolbar:false;\">&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;</pre><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p></p>','FreeMarker is a \"template engine\"; a generic tool to generate text output (anything from HTML to autogenerated source code) based on templates. It\'s a Java package, a class library for Java programmers. It\'s not an application for end-users in itself, but something that programmers can embed into their products.','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(203,'FreeMarker做的一个简单页面模板','<p>首先写一个ftl文件page.ftl，作为自定义的指令文件。</p><pre class=\"brush:html;toolbar:false;\">&lt;#macro page \n    title \n    keywords=\"\" \n    description=\"\" \n    script=\"\" \n    css=\"\"\n    copyright=\"版权所有 CopyRight 2013 Orionis\"\n    &gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"/&gt;\n&lt;title&gt;${title}&lt;/title&gt;\n&lt;meta name=\"keywords\" content=\"${keywords}\"/&gt;\n&lt;meta name=\"description\" content=\"${description}\"/&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;link rel=\"stylesheet\" href=\"resources/front/css/style.css\"/&gt;\n&lt;link rel=\"stylesheet\" href=\"resources/common/css/960.css\"/&gt;\n&lt;link rel=\"stylesheet\" href=\"resources/front/css/core.css\"/&gt;\n${css}\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"container\"&gt;\n    &lt;!--页面中要放的内容，如统一的导航等等--&gt;\n        &lt;#nested&gt;\n&lt;/div&gt;\n&lt;script type=\"text/javascript\" src=\"resources/common/js/jquery-1.9.1.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"resources/common/js/jquery.pos-fixed.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"resources/front/js/core.js\"&gt;&lt;/script&gt;\n${script}\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;/#macro&gt;</pre><p>在使用时如下：</p><pre class=\"brush:html;toolbar:false;\">&lt;#import \"_fragment/page.ftl\" as page&gt;\n \n&lt;#assign js&gt;\n    &lt;script type=\'text/javascript\' src=\'/springmvc/dwr/engine.js\'&gt;&lt;/script&gt;\n    &lt;script type=\'text/javascript\' src=\'/springmvc/dwr/interface/DwrDemo.js\'&gt;&lt;/script&gt;\n&lt;/#assign&gt;\n&lt;@page.page title=\"Freemarker\" script=\"${js}\"&gt;\n    &lt;!--这里放页面内容--&gt;\n&lt;/@page.page&gt;</pre><p><br /></p>','用Freemarker做的一个简单页面模板，用起来比以前用jsp写页面方便多了。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(204,'Jap自定义标签嵌入body内容','<p>在jsp tag文件中定义了tag后，如果在调用过程中希望在tag体中加入html等内容，则需要在tag中定义属性为fragment，调用内容用jsp:invoke，使用时需要将内容放在&lt;jsp:attribute之间。<br /></p><p><br /></p><p>标签文件orionis_header.tag</p><pre class=\"brush:java;toolbar:false;\">&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"  %&gt;\n \n&lt;%@ attribute name=\"title\" required=\"false\" description=\"页面的标题\"  %&gt;\n&lt;%@ attribute name=\"keywords\" required=\"false\" description=\"页面关键字\" %&gt;\n&lt;%@ attribute name=\"description\" required=\"false\" description=\"页面描述\" %&gt;\n&lt;%@ attribute name=\"css\" fragment=\"true\" description=\"css片段\" %&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"/&gt;\n&lt;title&gt;&lt;c:out value=\"${title }\" escapeXml=\"false\" default=\"ddd\" /&gt;&lt;/title&gt;\n&lt;meta name=\"keywords\" content=\'&lt;c:out value=\"${keywords }\" default=\"\" /&gt;\'/&gt;\n&lt;meta name=\"description\" content=\'&lt;c:out value=\"${description }\" default=\"\" /&gt;\'/&gt;\n&lt;link rel=\"stylesheet\" href=\"resources/orionis/css/style.css\"/&gt;\n&lt;link rel=\"stylesheet\" href=\"resources/960grid/960.css\"/&gt;\n&lt;link rel=\"stylesheet\" href=\"resources/orionis/css/core.css\"/&gt;\n&lt;jsp:invoke fragment=\"css\"&gt;&lt;/jsp:invoke&gt;\n&lt;/head&gt;\n&lt;body&gt;</pre><p>调用标签的页面</p><pre class=\"brush:java;toolbar:false;\">&lt;%@ taglib tagdir=\"/WEB-INF/tags\" prefix=\"o\" %&gt;\n&lt;o:orion_header&gt;\n    &lt;jsp:attribute name=\"css\"&gt;\n        &lt;link rel=\"stylesheet\" href=\"resources/960grid/960.css\"/&gt;\n    &lt;/jsp:attribute&gt;\n&lt;/o:orion_header&gt;</pre><p><br /></p>','​在jsp tag文件中定义了tag后，如果在调用过程中希望在tag体中加入html等内容，则需要在tag中定义属性为fragment，调用内容用jsp:invoke，使用时需要将内容放在<jsp:attribute之间。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(205,'【转载】maven无法解析org.apache.maven.plugins:2.4.3解决方案','<p>eclipse加载maven工程提示pom.xml无法解析org.apache.maven.plugins:maven-resources-plugin:2.4.3解决方案</p><p>【转载<span>http://blog.csdn.net/imlmy/article/details/8268293</span>】</p><p style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\"><strong><span style=\"font-size:18px;\">原因</span></strong></p><p style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\">这是由于缺少maven-resources-plugin-2.4.3.jar文件。这个文件是在{user.home}\\.m2\\repository\\org\\apache\\maven\\plugins\\maven-resources-plugin\\下。{user.home}是maven的配置路径，一般是我的文档，是window-preferences-MyEclipse-Maven4MyEclipse-User Setting里面的Local Repository。</p><p style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\"><br /></p><p style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\"><strong><span style=\"font-size:18px;\">解决方案</span></strong></p><p style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\">1、在pom.xml文件中加入maven-resources-plugin配置</p><p style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\"><br /></p><pre class=\"lang-xml prettyprint prettyprinted\" name=\"code\" style=\"word-wrap:break-word;color:#362e2b;font-size:14px;background-color:#eeeeee;padding:5px;border:0px;vertical-align:baseline;font-family:consolas, menlo, monaco, &#39;lucida console&#39;, &#39;liberation mono&#39;, &#39;dejavu sans mono&#39;, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, monospace, serif;overflow:auto;width:auto;max-height:600px;line-height:18px;margin-top:0px;margin-bottom:10px;\"><code style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;font-family:consolas, menlo, monaco, &#39;lucida console&#39;, &#39;liberation mono&#39;, &#39;dejavu sans mono&#39;, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, monospace, serif;\"><span class=\"tag\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;color:#800000;\">&lt;dependency&gt;</span><span class=\"pln\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;\"></span><span class=\"tag\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;color:#800000;\">&lt;groupId&gt;</span><span class=\"pln\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;\">org.apache.maven.plugins</span><span class=\"tag\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;color:#800000;\">&lt;/groupId&gt;</span><span class=\"pln\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;\"></span><span class=\"tag\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;color:#800000;\">&lt;artifactId&gt;</span><span class=\"pln\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;\">maven-resources-plugin</span><span class=\"tag\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;color:#800000;\">&lt;/artifactId&gt;</span><span class=\"pln\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;\"></span><span class=\"tag\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;color:#800000;\">&lt;version&gt;</span><span class=\"pln\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;\">2.4.3</span><span class=\"tag\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;color:#800000;\">&lt;/version&gt;</span><span class=\"pln\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;\"></span><span class=\"tag\" style=\"margin:0px;padding:0px;border:0px;vertical-align:baseline;background-color:transparent;color:#800000;\">&lt;/dependency&gt;</span></code></pre><span style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\">2、在命令行下运行</span><code style=\"color:#362e2b;font-size:14px;margin:0px;padding:1px 5px;border:0px;vertical-align:baseline;background-color:#eeeeee;font-family:consolas, menlo, monaco, &#39;lucida console&#39;, &#39;liberation mono&#39;, &#39;dejavu sans mono&#39;, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, monospace, serif;line-height:18px;\">mvn install</code><span style=\"color:#362e2b;font-size:14px;background-color:#ffffff;font-family:arial, &#39;liberation sans&#39;, &#39;dejavu sans&#39;, sans-serif;line-height:18px;\"> ，如果执行正确应该会在{user.home}\\.m2\\repository\\org\\apache\\maven\\plugins\\maven-resources-plugin\\下看到maven-resources-plugin-2.4.3.jar文件</span><span style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\"></span><p style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\"><br /></p><p style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\"><span style=\"font-family:arial, &#39;liberation sans&#39;, &#39;dejavu sans&#39;, sans-serif;line-height:18px;\">3、刷新工程（右键工程选择刷新项）</span></p><p style=\"color:#362e2b;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;\"><span style=\"font-family:arial, &#39;liberation sans&#39;, &#39;dejavu sans&#39;, sans-serif;line-height:18px;\">4、刷新maven配置，右键工程节点，选择Maven4MyEclipse-Update Project Configuration</span></p><p><br /></p>','eclipse加载maven工程提示pom.xml无法解析org.apache.maven.plugins:maven-resources-plugin:2.4.3解决方案\nhttp://blog.csdn.net/imlmy/article/details/8268293','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(206,'【译】阐释Java中的volatile和synchronizated','<p>最好的理解方式是通过查看volatile和synchronized的不同效果。volatile是一个字段修饰符，而synchronized则用来修饰一个代码块或者是方法。因此，我们可以列出使用这两个关键字的三种不同的访问方式：<br /></p><pre class=\"brush:java;toolbar:false;\">int i1; \nint geti1(){\n    return i1;\n}\n  \nvolatile int i2;\nint geti2(){\n    return i2;\n}\n  \nint i3;\nsynchronized int geti3(){\n    return i3;\n}</pre><p>geti1()访问存储在当前线程中的值。线程可以有一个变量的本地副本，不同线程中的数据是不相同的。特别的，另一个线程在他自己的线程中更新了i1的话，但是当前线程中保存的i1的值与这个更新了的i1是不同的。事实上，在java中有一个主内存的概念，这个内存区域存储了了变量当前&quot;正确&quot;的值。线程中也有他们自己对这个变量的副本，在线程中，这个副本与主内存中的变量的值是不同的。所以，对于主内存来说，它所持有的i1的值可能是1，而线程1的值可能是2，而线程2的值可能是3.如果线程2和线程3都更新了这个i1的值，对主内存和其他线程来说是没有影响的。<br /></p><p>另一方面，geti2（）邮箱的从主内存中访问了i2的值。volatile变量是不允许不同的线程中存储该变量的副本的。一个声明为volatile的变量必须保证数据在所有线程中的同步，无论在哪个线程中更新或者是访问这个变量，所有的其它线程都是直接可以看到同样的值的。当然，volatile变量比普通变量有着更高的访问和更新开销，因此，线程有自己的数据副本是更加高效的。</p><p>如果volatile已经在跨线程中同步了，那synchronized又是什么呢？这里有两点不同：</p><p>首先，synchronized获取和释放一个监控锁，如果两个线程使用同样的监控锁的话，可以强制在同一时间只有一个线程执行代码块。但是synchronized也同步内存。事实上synchronized同步了整个线程的内存和主内存。所以执行geti3做了如下操作：</p><p>1. 线程获取this对象的监控锁（假设监控者没有被锁，否则线程将会等待知道它释放这个锁）</p><p>2. 线程内存刷新它所有的变量，例如，它所有的变量从主内存中读取</p><p>3. 代码块被执行（这里设置当前的i3返回值，可能刚刚从主内存中重置）</p><p>4. 任何对变量的改变可能已经写到了主内存， 但是对geti3()来说，这里并没有任何改变</p><p>5. 线程释放this对象的监控锁</p><p>所以，volatile仅仅是同步一个变量在线程内存和主内存中的值，synchronized同步线程内存和主内存中所有的变量值，并锁定和释放监控锁。看起来synchronized比volatile会产生更多的开销。</p><p>使用volatile关键字让变量不会保持在一个寄存器中，这保证了这个变量在线程之间是真实的可共享的。</p><p>在虚拟机中的同步必须让变量在寄存器中是无效的。<br /></p><p>当虚拟机进入了同步方法或者是同步块时，它必须冲在在本地寄存器中缓存的数据。在虚拟机推出同步方法或者是同步块之前，它必须存储它的本地寄存器到主内存中。</p><p><br /></p><p>原文[<a href=\"http://sumitpal.wordpress.com/2010/05/22/volatile-and-synchronized-in-java-explained/\">http://sumitpal.wordpress.com/2010/05/22/volatile-and-synchronized-in-java-explained/</a>]</p>','最好的理解方式是通过查看volatile和synchronized的不同效果。volatile是一个字段修饰符，而synchronized则用来修饰一个代码块或者是方法。因此，我们可以列出使用这两个关键字的三种不同的访问方式','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(207,'Tiles3整合SpringMVC','<p>在SpringMVC中使用Tiles还是很方便的，这里做一个简单的DEMO。</p><p>首先需要在项目的类库中添加相关的jar文件，这里使用的是Maven管理，因此，只需要添加pom即可.</p><pre class=\"brush:xml;toolbar:false;\">&lt;!-- Tiles --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;commons-digester&lt;/groupId&gt;\n    &lt;artifactId&gt;commons-digester&lt;/artifactId&gt;\n    &lt;version&gt;2.1&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n    &lt;artifactId&gt;tiles-core&lt;/artifactId&gt;\n    &lt;version&gt;3.0.1&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n    &lt;artifactId&gt;tiles-api&lt;/artifactId&gt;\n    &lt;version&gt;3.0.1&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n    &lt;artifactId&gt;tiles-jsp&lt;/artifactId&gt;\n    &lt;version&gt;3.0.1&lt;/version&gt;\n&lt;/dependency&gt;</pre><p>添加完依赖的jar包之后，接下来需要配置SpringMVC使用Tiles的视图解析，这里使用的是Tiles3&nbsp;，因此需要Spring版本在3.2之上，低版本的只支持到Tiles2.</p><pre class=\"brush:xml;toolbar:false;\">&lt;!-- 视图解析--&gt;\n&lt;bean id=\"tilesConfigurer\" class=\"org.springframework.web.servlet.view.tiles3.TilesConfigurer\"&gt;\n    &lt;property name=\"definitions\"&gt;\n        &lt;list&gt;\n            &lt;value&gt;/WEB-INF/tiles/general.xml&lt;/value&gt;\n        &lt;/list&gt;\n    &lt;/property&gt;\n&lt;/bean&gt;\n&lt;bean id=\"viewResolver\" class=\"org.springframework.web.servlet.view.UrlBasedViewResolver\"&gt;\n    &lt;property name=\"order\" value=\"1\" /&gt;\n    &lt;property name=\"viewClass\" value=\"org.springframework.web.servlet.view.tiles3.TilesView\"&gt;&lt;/property&gt;\n&lt;/bean&gt;\n&lt;bean\n    class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\"&gt;\n    &lt;property name=\"prefix\" value=\"/WEB-INF/views/\" /&gt;\n    &lt;property name=\"suffix\" value=\".jsp\" /&gt;\n    &lt;property name=\"order\" value=\"2\" /&gt;\n&lt;/bean&gt;</pre><p>这里配置了两个视图解析bean，当Tiles配置中没有匹配的规则时，使用SpringMVC默认的匹配规则。</p><pre class=\"brush:xml;toolbar:false;\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;!DOCTYPE tiles-definitions PUBLIC \"-//Apache Software Foundation//DTD Tiles Configuration 3.0//EN\" \"http://tiles.apache.org/dtds/tiles-config_3_0.dtd\"&gt;\n&lt;tiles-definitions&gt;       \n    &lt;!-- 前端页面模板 --&gt;\n    &lt;definition name=\"template_page\" template=\"/WEB-INF/templates/page.jsp\"&gt;&lt;/definition&gt;\n    &lt;definition name=\"template_base\" template=\"/WEB-INF/templates/base.jsp\"&gt;&lt;/definition&gt;\n     \n    &lt;!-- 引用整体模板  视图名 + .page  --&gt;\n    &lt;definition name=\"*.page\" extends=\"template_page\" &gt;\n        &lt;put-attribute name=\"body\" value=\"/WEB-INF/views/{1}.jsp\" /&gt;\n    &lt;/definition&gt;\n    &lt;definition name=\"*/*.page\" extends=\"template_page\"&gt;\n        &lt;put-attribute name=\"body\" value=\"/WEB-INF/views/{1}/{2}.jsp\" /&gt;\n    &lt;/definition&gt;\n    &lt;definition name=\"*/*/*.page\" extends=\"template_page\"&gt;\n        &lt;put-attribute name=\"body\" value=\"/WEB-INF/views/{1}/{2}/{3}.jsp\" /&gt;\n    &lt;/definition&gt;\n    &lt;definition name=\"*/*/*/*.page\" extends=\"template_page\"&gt;\n        &lt;put-attribute name=\"body\" value=\"/WEB-INF/views/{1}/{2}/{3}/{4}.jsp\" /&gt;\n    &lt;/definition&gt;\n     \n    &lt;!-- 引用基本模板   视图名 + .base --&gt;\n    &lt;definition name=\"*.base\" extends=\"template_base\" &gt;\n        &lt;put-attribute name=\"body\" value=\"/WEB-INF/views/{1}.jsp\" /&gt;\n    &lt;/definition&gt;\n    &lt;definition name=\"*/*.base\" extends=\"template_base\"&gt;\n        &lt;put-attribute name=\"body\" value=\"/WEB-INF/views/{1}/{2}.jsp\" /&gt;\n    &lt;/definition&gt;\n    &lt;definition name=\"*/*/*.base\" extends=\"template_base\"&gt;\n        &lt;put-attribute name=\"body\" value=\"/WEB-INF/views/{1}/{2}/{3}.jsp\" /&gt;\n    &lt;/definition&gt;\n    &lt;definition name=\"*/*/*/*.base\" extends=\"template_base\"&gt;\n        &lt;put-attribute name=\"body\" value=\"/WEB-INF/views/{1}/{2}/{3}/{4}.jsp\" /&gt;\n    &lt;/definition&gt;\n&lt;/tiles-definitions&gt;</pre><p>上面的Tiles配置文件中，配置了两个页面的模板，当Spring返回视图名为.page或者是.base后缀时，就会匹配到相应的模板。从这里可以看到，Tiles支持通配符匹配的，当然，你也可以使用正则表达式进行规则的匹配或者是Mvel等语言进行规则匹配。</p><p>在模板文件中，使用tiles的标签完成模板的创建。</p><p>如page.</p><pre class=\"brush:html;toolbar:false;\">&lt;%@ taglib prefix=\"tiles\" uri=\"http://tiles.apache.org/tags-tiles\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n...\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;tiles:insertAttribute name=\"body\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><p>最后，在控制器中，只需要返回的视图名为.page就会自动的使用该模板了。</p><pre class=\"brush:java;toolbar:false;\">@RequestMapping(\"login\")\npublic String login(HttpServletRequest req, HttpServletResponse resp, HttpSession session){\n    return \"login.page\";\n}</pre><p>&nbsp;</p>','在SpringMVC中使用Tiles还是很方便的，这里做一个简单的DEMO。\n首先需要在项目的类库中添加相关的jar文件，这里使用的是Maven管理，因此，只需要添加pom即可\n添加完依赖的jar包之后，接下来需要配置SpringMVC使用Tiles的视图解析，这里使用的是Tiles3 ，因此需要Spring版本在3.2之上，低版本的只支持到Tiles2.','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(208,'Spring ROO  项目编译出现找不到org/apache/log4j/Level','<p>在使用Maven编译roo项目的时候，出现找不到org/apache/log4j/Level的错误，但是log4j相关的包确实都在，仍然报错：</p><pre class=\"brush:java;toolbar:false;\">Tests in error:\n  initializationError(name.orionis.roo.domain.RbacUserIntegrationTest): org/apache/log4j/Level</pre><p>解决办法：</p><pre class=\"brush:html;toolbar:false;\">1. 修改pom.xml中java版本为系统使用的版本，比如我的显示是1.6，但是我用的是1.7，因此修改为1.7\n2. 将log4j和slf修改为最新版本\n \n&lt;java.version&gt;1.7&lt;/java.version&gt;\n&lt;slf4j.version&gt;1.7.2&lt;/slf4j.version&gt;\n \n \n&lt;dependency&gt;\n    &lt;groupId&gt;log4j&lt;/groupId&gt;\n    &lt;artifactId&gt;log4j&lt;/artifactId&gt;\n    &lt;version&gt;1.2.17&lt;/version&gt;\n&lt;/dependency&gt;</pre><p><br /></p>','Tests in error:\n  initializationError(name.orionis.roo.domain.RbacUserIntegrationTest): org/apache/log4j/Level','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(209,'Spring MVC整合Spring Web Flow','<p>只是记录了基本的配置，仅供参考。</p><p>1. 首先，添加Maven依赖。</p><pre class=\"brush:xml;toolbar:false;\">&lt;!-- Spring Web Flow --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.webflow&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-webflow&lt;/artifactId&gt;\n    &lt;version&gt;2.3.2.RELEASE&lt;/version&gt;\n&lt;/dependency&gt;</pre><p>2. 配置SpringMVC</p><pre class=\"brush:xml;toolbar:false;\">spring-mvc-webflow.xml\n \n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:webflow=\"http://www.springframework.org/schema/webflow-config\"\n       xsi:schemaLocation=\"\n           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd\n           http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd\"&gt;\n \n    &lt;webflow:flow-executor id=\"flowExecutor\"/&gt;\n \n    &lt;webflow:flow-registry id=\"flowRegistry\" flow-builder-services=\"flowBuilderServices\"&gt;\n        &lt;webflow:flow-location-pattern value=\"/WEB-INF/views/personal/apply/apply-flow.xml\" /&gt;\n    &lt;/webflow:flow-registry&gt;\n \n    &lt;webflow:flow-builder-services id=\"flowBuilderServices\" view-factory-creator=\"mvcViewFactoryCreator\" development=\"true\"/&gt;\n     \n    &lt;bean id=\"mvcViewFactoryCreator\" class=\"org.springframework.webflow.mvc.builder.MvcViewFactoryCreator\"&gt;\n        &lt;property name=\"viewResolvers\"&gt;\n            &lt;list&gt;\n                &lt;ref bean=\"tilesViewResolver\"/&gt;\n            &lt;/list&gt;\n        &lt;/property&gt; \n    &lt;/bean&gt;\n     \n    &lt;!-- Enables FlowHandler URL mapping --&gt;\n    &lt;bean class=\"org.springframework.webflow.mvc.servlet.FlowHandlerAdapter\"&gt;\n        &lt;property name=\"flowExecutor\" ref=\"flowExecutor\" /&gt;\n    &lt;/bean&gt;\n     \n    &lt;!-- Maps request paths to flows in the flowRegistry;\n     e.g. a path of /hotels/booking looks for a flow with id \"hotels/booking\" --&gt;       \n    &lt;bean class=\"org.springframework.webflow.mvc.servlet.FlowHandlerMapping\"&gt;\n        &lt;property name=\"flowRegistry\" ref=\"flowRegistry\"/&gt;\n        &lt;property name=\"order\" value=\"0\"/&gt;\n    &lt;/bean&gt;\n&lt;/beans&gt;</pre><p>3. 流程定义文件<br /></p><pre class=\"brush:xml;toolbar:false;\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;flow xmlns=\"http://www.springframework.org/schema/webflow\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/webflow\n                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd\"&gt;\n \n    &lt;!-- 第一步 填写个人信息 --&gt;\n    &lt;view-state id=\"personal_info\" view=\"personal/apply/step_1_personal_info.page\"&gt;\n        &lt;on-render&gt;\n            &lt;evaluate expression=\"applyController.initialize(flowRequestContext)\" &gt;&lt;/evaluate&gt;\n        &lt;/on-render&gt;\n        &lt;transition on=\"next\" to=\"approve\"&gt;&lt;/transition&gt;\n        &lt;transition on=\"cancel\" to=\"end\"&gt;&lt;/transition&gt;\n    &lt;/view-state&gt;\n \n    &lt;!-- 第二步 填写认证信息 --&gt;\n    &lt;view-state id=\"approve\" view=\"personal/apply/step_2_approve.page\"&gt;\n        &lt;on-render&gt;\n            &lt;evaluate expression=\"applyController.initialize(flowRequestContext)\" &gt;&lt;/evaluate&gt;\n        &lt;/on-render&gt;\n        &lt;transition on=\"prev\" to=\"personal_info\"&gt;&lt;/transition&gt;\n        &lt;transition on=\"next\" to=\"send_address\"&gt;&lt;/transition&gt;\n        &lt;transition on=\"cancel\" to=\"end\"&gt;&lt;/transition&gt;\n    &lt;/view-state&gt;\n     \n    &lt;!-- 第三步 填写邮递地址 --&gt;\n    &lt;view-state id=\"send_address\" view=\"personal/apply/step_3_address.page\"&gt;\n        &lt;on-render&gt;\n            &lt;evaluate expression=\"applyController.initialize(flowRequestContext)\" &gt;&lt;/evaluate&gt;\n        &lt;/on-render&gt;\n        &lt;transition on=\"prev\" to=\"approve\"&gt;&lt;/transition&gt;\n        &lt;transition on=\"next\" to=\"finished\"&gt;&lt;/transition&gt;\n        &lt;transition on=\"cancel\" to=\"end\"&gt;&lt;/transition&gt;\n    &lt;/view-state&gt;\n     \n    &lt;!-- 第四步 打印申请单，缴费 --&gt;\n    &lt;view-state id=\"finished\" view=\"personal/apply/step_4_finished.page\"&gt;\n        &lt;on-render&gt;\n            &lt;evaluate expression=\"applyController.initialize(flowRequestContext)\" &gt;&lt;/evaluate&gt;\n        &lt;/on-render&gt;\n        &lt;transition on=\"prev\" to=\"send_address\"&gt;&lt;/transition&gt;\n        &lt;transition on=\"next\" to=\"end\"&gt;&lt;/transition&gt;\n        &lt;transition on=\"cancel\" to=\"end\"&gt;&lt;/transition&gt;\n    &lt;/view-state&gt;\n     \n    &lt;!-- 认证申请完成 --&gt;\n    &lt;end-state id=\"end\" view=\"redirect:personal/index\"&gt;&lt;/end-state&gt;\n&lt;/flow&gt;</pre><p>4. 访问地址：网址+/apply-flow.html<br /></p>','SpringMVC整合Spring Web Flow，视图展示使用的是Tiles。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(210,'为Maven添加oracle的驱动','<pre class=\"brush:bash;toolbar:false;\">mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.1.0 -Dpackaging=jar -Dfile=ojdbc14.jar  \n   \nmvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0.1.0 -Dpackaging=jar -Dfile=ojdbc6.jar</pre><pre class=\"brush:xml;toolbar:false;\">&lt;dependency&gt;  \n    &lt;groupId&gt;com.oracle&lt;/groupId&gt;  \n    &lt;artifactId&gt;ojdbc6&lt;/artifactId&gt;  \n    &lt;version&gt;11.2.0.1.0&lt;/version&gt;  \n&lt;/dependency&gt;  \n           \n&lt;dependency&gt;  \n    &lt;groupId&gt;com.oracle&lt;/groupId&gt;  \n    &lt;artifactId&gt;ojdbc14&lt;/artifactId&gt;  \n    &lt;version&gt;10.2.0.1.0&lt;/version&gt;  \n&lt;/dependency&gt;</pre><p>原文：<a href=\"http://blog.sina.com.cn/s/blog_3f7823220100z6j5.html\">http://blog.sina.com.cn/s/blog_3f7823220100z6j5.html</a></p>','Oracle JDBC驱动包是需要Oracle官方授权才能被下载，所以必须手动添加才能使用Maven管理。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(211,'Oracle占用8080端口解决办法','<p>解决Oracle占用8080端口问题</p><pre class=\"brush:ps;toolbar:false;\">Oracle 10g：call dbms_xdb.cfg_update(updateXML(dbms_xdb.cfg_get(),\'/xdbconfig/sysconfig/protocolconfig/httpconfig/http-port/text()\',9090));</pre><p><br /></p>','解决Oracle占用8080端口问题','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(212,'Svn内容同步更新','<p>实现SVN内容同步更新，当进行文件提交的时候，自动将提交的内容更新到另一个位置。</p><p>如同步更新到Web服务器以实现即时发布。</p><p><br /></p><p> 在仓库目录下的 hooks文件夹下，建立post-commit.bat文件。<br /></p><pre class=\"brush:bash;toolbar:false;\">@echo off\n\"D:\\Program Files\\VisualSVN\\bin\\svn.exe\" update \"E:\\BaiDuYun\\备份资料\\SVN备份\" –username testuser –password testpwd</pre><p><br /></p><p>如果出现文件只读等错误，则需要修改Svn服务器的执行权限。</p><p>在服务中的SVN服务中修改SVN的登陆身份为administrator即可。</p>','实现SVN内容同步更新','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(213,'测试，增加新域名后的第一篇文章','<p>这篇文章时增加新域名<a href=\"http://blog.orionis.name之后的第一篇文章，现在系统后台仅仅做了一个发文章的页面，连留言回复都没有。。。后台框架也没有。。。。\">http://blog.orionis.name</a>之后的第一篇文章，现在系统后台仅仅做了一个发文章的页面，连留言回复都没有。。。后台框架也没有。。。。</p><p> <br /></p><p>送上游戏一枚：</p><p><iframe class=\"edui-faked-webapp\" title=\"植物大战僵尸\" width=\"560\" height=\"465\" scrolling=\"no\" frameborder=\"0\" src=\"http://app.baidu.com/app/enter?appid=103488&amp;tn=app_canvas&amp;app_spce_id=1&amp;apikey=fI42qGCMe3w2wX65bulfyOfi&amp;api_key=fI42qGCMe3w2wX65bulfyOfi\" logo_url=\"http://apps3.bdimg.com/store/static/kvt/f5d3e48a5aedf458eae6f66a44623fe9.jpg\"></iframe></p><p><br /></p><p>测试一下，<img src=\"http://blog.orionis.name/public/plugs/ueditor/themes/default/images/spacer.gif\" word_img=\"file:///C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\1\\SGTpbq\\5384\\008313EF.gif\" style=\"background:url(http://blog.orionis.name/public/plugs/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" /> <img src=\"http://img.baidu.com/hi/jx2/j_0026.gif\" /></p><pre class=\"brush:js;toolbar:false;\">var http = require(\"http\");\nhttp.createServer(function(request, response){\n     response.write(\"hello\");\n     response.end();\n}).listen(8888);</pre><p><br /></p><p><br /></p><p><br /></p>','这篇文章时增加新域名http://blog.orionis.name之后的第一篇文章，现在系统后台仅仅做了一个发文章的页面，连留言回复都没有。。。后台框架也没有。。。。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(214,'Manager System is testing','<p>后台功能正在完善过程中，该文章用于测试用，仅此而已。<img src=\"http://img.baidu.com/hi/jx2/j_0017.gif\" /><img src=\"http://img.baidu.com/hi/youa/y_0037.gif\" /></p><p><br /></p><pre class=\"brush:cpp;toolbar:false;\">#include &lt;stdio.h&gt;\nint main(){\n    printf(\"Hello,world\");\n}</pre><p><br /></p>','后台功能完善中，测试用。','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(215,'大法师打发','<p>&nbsp;</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(216,'打发四方达撒','<p>发生的范德萨发生大发</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(217,'你好，北京','你好啊，北京，睡觉了哦','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(218,'卧槽，睡觉了，好玩了','卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(219,'卧槽，睡觉了','卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了卧槽，睡觉了，好玩了','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(220,'卧槽，好棒哦','卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦','卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦卧槽，好棒哦','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(221,'的发生发的','士大夫撒发达阿发阿道夫撒的发生','多发发啊发达四方达深v','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(222,'打发打发大','<p>发生的发生地方爱的色放地方阿斯顿<img src=\"http://img.baidu.com/hi/jx2/j_0023.gif\" _src=\"http://img.baidu.com/hi/jx2/j_0023.gif\"/><img src=\"http://localhost/Orionis_SAE/public/uploads/files/064600fd8dfa638f908c274b2b46031b.jpg\" _src=\"http://localhost/Orionis_SAE/public/uploads/files/064600fd8dfa638f908c274b2b46031b.jpg\" width=\"118\" height=\"79\" style=\"width: 89px; height: 28px;\"/></p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(223,'测试文章','<p style=\"text-indent: 2em;\">In WebLogic Server, you configure database connectivity by adding data sources to your WebLogic domain. WebLogic JDBC data sources provide database access and database connection management. Each data source contains a pool of database connections that are created when the data source is created and at server startup. <span style=\"color: rgb(255, 0, 0);\">Applications</span> reserve a database connection from the data source by looking up the data source on the <em><strong>JNDI </strong></em>tree or in the local application context and then callinggetConnection(). When finished with the connection, the application should call&nbsp;connection.close()&nbsp;as early as possible, which returns the database connection to the pool for other applications to use.</p><p style=\"text-indent: 2em;\">Data sources and their connection pools provide connection management processes that help keep your system running and performant.You can set options in the data source to suit your applications and your environment. The following sections describe these options and how to enable them.</p><p><br/></p>','屏幕截图交互 1、屏幕截图介绍    使用了ActiveX控件，目前只支持IE浏览器。 2、注意事项    需要配置的参数除了跟图片上传一样的内容之外，还多出了服务器地址和端口的配置。具体使用时请根据自身服务器的特点做出适应修改。 1 2 3 4 5 6 7 8 9 10 1','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(224,'大法师打发第三方','<p>多发发多少发的说法</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(225,'的发生的发生发','<p>说的范德萨发大水发大水发松岛枫</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(226,'大法师打发','<p>啊发生发生</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(227,'的所发生的发达','<p>撒的发生的<br/></p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(228,'发大水发达','<p><img src=\"http://img.baidu.com/hi/jx2/j_0012.gif\"/>打发四方达的是</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(229,'风撒的发生的','<p>发的俺的沙发爱的色放的</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(230,'打发四方达撒','<p>发生的范德萨发生大发</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(231,'打发四方达撒','<p>发生的范德萨发生大发</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(232,'发生大发生的发达','<p>发达发大水发达撒</p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(233,'你好，我是管宜尧','<p>你好，我是管宜尧，<img src=\"http://img.baidu.com/hi/jx2/j_0025.gif\"/></p>','','http://globalassets.starbucks.com/assets/d50b4c9b2c084e208b90f22c2b7d157d.jpg','mylxsw',NULL,1,NULL,NULL,NULL,NULL),(241,'是打发士大夫',NULL,'撒的发生风大的撒发生大发',NULL,NULL,NULL,1,NULL,1391009937,NULL,NULL),(242,'是打发士大夫','<p>大大大大大大大大大大大大大大大大大大大大大大大大大大大&nbsp;&nbsp;，&nbsp;&nbsp;&nbsp;啊&nbsp;&nbsp;&nbsp;飞&nbsp;&nbsp; <br/></p>','撒的发生风大的撒发生大发',NULL,NULL,NULL,1,NULL,1391009959,NULL,NULL),(243,'是打发士大夫','<p>大大大大大大大大大大大大大大大大大大大大大大大大大大大&nbsp;&nbsp;，&nbsp;&nbsp;&nbsp;啊&nbsp;&nbsp;&nbsp;飞&nbsp;&nbsp; <br/></p>','撒的发生风大的撒发生大发',NULL,NULL,NULL,1,NULL,1391010017,NULL,NULL),(244,'是打发士大夫','<p>大大大大大大大大大大大大大大大大大大大大大大大大大大大&nbsp;&nbsp;，&nbsp;&nbsp;&nbsp;啊&nbsp;&nbsp;&nbsp;飞&nbsp;&nbsp; <br/></p>','撒的发生风大的撒发生大发',NULL,NULL,NULL,1,NULL,1391010035,NULL,NULL),(245,'是打发士大夫','<p>大大大大大大大大大大大大大大大大大大大大大大大大大大大&nbsp;&nbsp;，&nbsp;&nbsp;&nbsp;啊&nbsp;&nbsp;&nbsp;飞&nbsp;&nbsp; <br/></p>','撒的发生风大的撒发生大发',NULL,NULL,NULL,1,NULL,1391010114,NULL,NULL),(246,'是打发士大夫','<p>大大大大大大大大大大大大大大大大大大大大大大大大大大大&nbsp;&nbsp;，&nbsp;&nbsp;&nbsp;啊&nbsp;&nbsp;&nbsp;飞&nbsp;&nbsp; <br/></p>','撒的发生风大的撒发生大发',NULL,NULL,NULL,1,NULL,1391010204,NULL,NULL),(247,'是打发士大夫','<p>大大大大大大大大大大大大大大大大大大大大大大大大大大大&nbsp;&nbsp;，&nbsp;&nbsp;&nbsp;啊&nbsp;&nbsp;&nbsp;飞&nbsp;&nbsp; <br/></p>','撒的发生风大的撒发生大发',NULL,NULL,NULL,1,NULL,1391010234,NULL,NULL),(248,'新的文章，新的开始','<p>这是最新的文章，哈哈哈哈<img src=\"http://img.baidu.com/hi/jx2/j_0024.gif\"/></p><p><iframe width=\"540\" height=\"512\" title=\"黄金矿工\" class=\"edui-faked-webapp\" src=\"http://app.baidu.com/app/enter?appid=100996&amp;tn=app_canvas&amp;app_spce_id=1&amp;apikey=fI42qGCMe3w2wX65bulfyOfi&amp;api_key=fI42qGCMe3w2wX65bulfyOfi\" frameborder=\"0\" scrolling=\"no\" logo_url=\"http://apps3.bdimg.com/store/static/kvt/9905055ad4fddf46ebd44708e45222c1.jpg\"></iframe></p><p><br/></p>','这是最新的文章，哈哈哈哈',NULL,NULL,NULL,1,NULL,1391010365,NULL,NULL),(249,'第二篇文章哦，大家快来看啊','','',NULL,NULL,NULL,1,NULL,1391011118,NULL,NULL),(250,'4 个 Linux 服务器监控工具','<p style=\"margin-top: 0px; margin-bottom: 5pt; padding: 0px; font-family: 微软雅黑, Verdana, sans-serif, 宋体; font-size: 14px; line-height: 22px; white-space: normal; background-color: rgb(255, 255, 255);\">你大概知道如何查看本机的实时进程状况。如果不知道请使用top命令，如需查看命令说明请使用man top.</p><p style=\"margin-top: 0px; margin-bottom: 5pt; padding: 0px; font-family: 微软雅黑, Verdana, sans-serif, 宋体; font-size: 14px; line-height: 22px; white-space: normal; background-color: rgb(255, 255, 255);\">htop是top的扩展版本，能更全面的监控进程（比如，全命令展示，可视化、gui和ui）通过点击鼠标进行交互，更有很丰富的指导说明如何管理进程。</p><p><br/></p>','你大概知道如何查看本机的实时进程状况。如果不知道请使用top命令，如需查看命令说明请使用man top.\nhtop是top的扩展版本',NULL,NULL,NULL,1,NULL,1391012039,NULL,NULL),(251,'sdfasfdsadfsafd','<p>asfsadfsadfsadfasdfasfasfasfasdfasdfasdfasfds</p>','fsdfsadfasdfasdf',NULL,'admin',NULL,1,0,1391068295,NULL,NULL);

/*Table structure for table `ar_article_category` */

DROP TABLE IF EXISTS `ar_article_category`;

CREATE TABLE `ar_article_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL COMMENT '文章id',
  `category_id` int(11) NOT NULL COMMENT '分类ID',
  `sort` smallint(6) DEFAULT NULL COMMENT '显示顺序\n',
  `is_main` smallint(6) DEFAULT NULL COMMENT '是否是主类别',
  PRIMARY KEY (`id`,`article_id`,`category_id`),
  KEY `fk_ar_article_category_ar_article_idx` (`article_id`),
  KEY `fk_ar_article_category_ar_category1_idx` (`category_id`),
  CONSTRAINT `fk_ar_article_category_ar_article` FOREIGN KEY (`article_id`) REFERENCES `ar_article` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_ar_article_category_ar_category1` FOREIGN KEY (`category_id`) REFERENCES `ar_category` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=226 DEFAULT CHARSET=utf8 COMMENT='文章-分类关联\n';

/*Data for the table `ar_article_category` */

insert  into `ar_article_category`(`id`,`article_id`,`category_id`,`sort`,`is_main`) values (2,131,1,NULL,1),(3,132,1,NULL,1),(4,133,1,NULL,1),(5,131,1,NULL,1),(6,132,1,NULL,1),(7,133,1,NULL,1),(8,134,1,NULL,1),(9,135,1,NULL,1),(10,136,1,NULL,1),(11,137,1,NULL,1),(12,138,1,NULL,1),(13,139,1,NULL,1),(14,140,1,NULL,1),(15,141,1,NULL,1),(16,142,1,NULL,1),(17,143,1,NULL,1),(18,144,1,NULL,1),(19,145,1,NULL,1),(20,146,1,NULL,1),(21,147,1,NULL,1),(22,148,1,NULL,1),(23,149,1,NULL,1),(24,150,1,NULL,1),(25,151,1,NULL,1),(26,152,1,NULL,1),(27,153,1,NULL,1),(28,154,1,NULL,1),(29,155,1,NULL,1),(30,156,1,NULL,1),(31,157,1,NULL,1),(32,158,1,NULL,1),(33,159,1,NULL,1),(34,160,1,NULL,1),(35,161,1,NULL,1),(36,162,1,NULL,1),(37,163,1,NULL,1),(38,164,1,NULL,1),(39,165,1,NULL,1),(40,166,1,NULL,1),(41,167,1,NULL,1),(42,168,1,NULL,1),(43,169,1,NULL,1),(44,170,1,NULL,1),(45,171,1,NULL,1),(46,172,1,NULL,1),(47,173,1,NULL,1),(48,174,1,NULL,1),(49,175,1,NULL,1),(50,176,1,NULL,1),(51,177,1,NULL,1),(52,178,1,NULL,1),(53,179,1,NULL,1),(54,180,1,NULL,1),(55,181,1,NULL,1),(56,182,1,NULL,1),(57,183,1,NULL,1),(58,184,1,NULL,1),(59,185,1,NULL,1),(60,186,1,NULL,1),(61,187,1,NULL,1),(62,188,1,NULL,1),(63,189,1,NULL,1),(64,190,1,NULL,1),(65,191,1,NULL,1),(66,192,1,NULL,1),(67,193,1,NULL,1),(68,194,1,NULL,1),(69,195,1,NULL,1),(70,196,1,NULL,1),(71,197,1,NULL,1),(72,198,1,NULL,1),(73,199,1,NULL,1),(74,200,1,NULL,1),(75,201,1,NULL,1),(76,202,1,NULL,1),(77,203,1,NULL,1),(78,204,1,NULL,1),(79,205,1,NULL,1),(80,206,1,NULL,1),(81,207,1,NULL,1),(82,208,1,NULL,1),(83,209,1,NULL,1),(84,210,1,NULL,1),(85,211,1,NULL,1),(86,212,1,NULL,1),(87,213,1,NULL,1),(88,214,1,NULL,1),(89,215,1,NULL,1),(90,216,1,NULL,1),(91,217,1,NULL,1),(92,218,1,NULL,1),(93,219,1,NULL,1),(94,220,1,NULL,1),(95,221,1,NULL,1),(96,222,1,NULL,1),(97,223,1,NULL,1),(98,224,1,NULL,1),(99,225,1,NULL,1),(100,226,1,NULL,1),(101,227,1,NULL,1),(102,228,1,NULL,1),(103,229,1,NULL,1),(104,230,1,NULL,1),(105,231,1,NULL,1),(106,232,1,NULL,1),(107,233,1,NULL,1),(132,131,2,NULL,0),(133,132,2,NULL,0),(134,133,2,NULL,0),(135,134,2,NULL,0),(136,135,2,NULL,0),(137,136,2,NULL,0),(138,137,2,NULL,0),(139,138,2,NULL,0),(140,139,2,NULL,0),(141,140,2,NULL,0),(142,141,2,NULL,0),(143,142,2,NULL,0),(144,143,2,NULL,0),(145,144,2,NULL,0),(146,145,2,NULL,0),(147,146,2,NULL,0),(148,147,2,NULL,0),(149,148,2,NULL,0),(150,149,2,NULL,0),(151,150,2,NULL,0),(152,151,2,NULL,0),(153,152,2,NULL,0),(154,153,2,NULL,0),(155,154,2,NULL,0),(156,155,2,NULL,0),(157,156,2,NULL,0),(158,157,2,NULL,0),(159,158,2,NULL,0),(160,159,2,NULL,0),(161,160,2,NULL,0),(162,161,2,NULL,0),(163,162,2,NULL,0),(164,163,2,NULL,0),(165,164,2,NULL,0),(166,165,2,NULL,0),(167,166,2,NULL,0),(168,167,2,NULL,0),(169,168,2,NULL,0),(170,169,2,NULL,0),(171,170,2,NULL,0),(172,171,2,NULL,0),(173,172,2,NULL,0),(174,173,2,NULL,0),(175,174,2,NULL,0),(176,175,2,NULL,0),(195,131,3,NULL,0),(196,132,3,NULL,0),(197,133,3,NULL,0),(198,134,3,NULL,0),(199,135,3,NULL,0),(200,136,3,NULL,0),(201,137,3,NULL,0),(202,138,3,NULL,0),(203,139,3,NULL,0),(204,140,3,NULL,0),(205,141,3,NULL,0),(206,142,3,NULL,0),(207,143,3,NULL,0),(208,144,3,NULL,0),(209,145,3,NULL,0),(210,146,3,NULL,0),(211,147,3,NULL,0),(212,148,3,NULL,0),(213,149,3,NULL,0),(214,150,3,NULL,0),(215,151,3,NULL,0),(216,241,1,0,0),(217,242,1,0,0),(218,243,1,0,0),(219,244,1,0,0),(220,245,1,0,0),(221,247,1,0,0),(222,248,1,0,0),(223,249,1,0,0),(224,250,1,0,0),(225,251,1,0,0);

/*Table structure for table `ar_article_tag` */

DROP TABLE IF EXISTS `ar_article_tag`;

CREATE TABLE `ar_article_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`,`article_id`,`tag_id`),
  KEY `fk_ar_article_tag_ar_article1_idx` (`article_id`),
  KEY `fk_ar_article_tag_ar_tag1_idx` (`tag_id`),
  CONSTRAINT `fk_ar_article_tag_ar_article1` FOREIGN KEY (`article_id`) REFERENCES `ar_article` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_ar_article_tag_ar_tag1` FOREIGN KEY (`tag_id`) REFERENCES `ar_tag` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COMMENT='文章-标签关联表';

/*Data for the table `ar_article_tag` */

insert  into `ar_article_tag`(`id`,`article_id`,`tag_id`) values (1,248,4),(2,248,5),(3,248,6),(4,249,7),(5,250,3),(6,250,4),(7,250,1),(8,251,8);

/*Table structure for table `ar_category` */

DROP TABLE IF EXISTS `ar_category`;

CREATE TABLE `ar_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) NOT NULL COMMENT '分类名称',
  `isvalid` smallint(1) DEFAULT '1' COMMENT '是否可用',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='文章分类';

/*Data for the table `ar_category` */

insert  into `ar_category`(`id`,`name`,`isvalid`) values (1,'新闻资讯',1),(2,'最新产品',1),(3,'微生活',1);

/*Table structure for table `ar_log` */

DROP TABLE IF EXISTS `ar_log`;

CREATE TABLE `ar_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` int(11) DEFAULT NULL,
  `action_name` varchar(255) DEFAULT NULL,
  `operator` varchar(100) DEFAULT NULL,
  `data` text,
  `action_type` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

/*Data for the table `ar_log` */

insert  into `ar_log`(`id`,`action_time`,`action_name`,`operator`,`data`,`action_type`) values (1,1391786098,'用户admin登陆了系统！','admin',NULL,'event'),(2,1391786118,'用户admin退出了系统！','admin',NULL,'event'),(3,1391786579,'用户admin登陆了系统！','admin',NULL,'event'),(4,1391793841,'用户admin退出了系统！','admin',NULL,'event'),(5,1391793847,'用户admin登陆了系统！','admin',NULL,'event'),(6,1391793856,'用户admin退出了系统！','admin',NULL,'event'),(7,1391793860,'用户admin登陆了系统！','admin',NULL,'event'),(8,1391793869,'用户admin退出了系统！','admin',NULL,'event'),(9,1391793872,'用户admin登陆了系统！','admin',NULL,'event'),(10,1391793919,'用户admin退出了系统！','admin',NULL,'event'),(11,1391793926,'用户admin登陆了系统！','admin',NULL,'event'),(12,1391794905,'用户admin退出了系统！','admin',NULL,'event'),(13,1391829065,'用户admin登陆了系统！','admin',NULL,'event'),(14,1392045711,'用户admin登陆了系统！','admin',NULL,'event'),(15,1392045774,'用户admin退出了系统！','admin',NULL,'event'),(16,1392123911,'用户admin登陆了系统！','admin',NULL,'event');

/*Table structure for table `ar_navigator` */

DROP TABLE IF EXISTS `ar_navigator`;

CREATE TABLE `ar_navigator` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL COMMENT '导航名称',
  `url` varchar(200) DEFAULT NULL COMMENT '链接地址',
  `isvalid` smallint(1) DEFAULT '1' COMMENT '是否可用',
  `intro` varchar(255) DEFAULT NULL COMMENT '简介',
  `sort` varchar(45) DEFAULT NULL COMMENT '显示顺序',
  `pid` int(11) DEFAULT '0' COMMENT '上级id\n',
  `pos` varchar(45) DEFAULT NULL COMMENT '导航位置',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8 COMMENT='导航';

/*Data for the table `ar_navigator` */

insert  into `ar_navigator`(`id`,`name`,`url`,`isvalid`,`intro`,`sort`,`pid`,`pos`) values (1,'咖啡 CAFFEE','articles/lists/1',1,NULL,'90',0,'top'),(2,'影像 MOVIE&PIC','MOVIE',1,NULL,'80',0,'top'),(3,'创业职业 SYB','SYB',1,NULL,'70',0,'top'),(4,'研发R&D','RD',1,NULL,'60',0,'top'),(12,'项目提交 Submit an Idea','Idea',1,NULL,'50',0,'top'),(13,'咖啡世界 Kaffeewelten',NULL,1,NULL,NULL,1,'top'),(14,'服务与发展 <br />Service & Nachhaltigkeit',NULL,1,NULL,NULL,1,'top'),(15,'电影精选 Movie selection',NULL,1,NULL,NULL,2,'top'),(16,'开始创作 Began to write',NULL,1,NULL,NULL,2,'top'),(17,'活动 Activities',NULL,1,NULL,NULL,3,'top'),(18,'机构 Organization',NULL,1,NULL,NULL,3,'top'),(19,'活动 Event',NULL,1,NULL,NULL,4,'top'),(20,'机构 Organization',NULL,1,NULL,NULL,4,'top');

/*Table structure for table `ar_page` */

DROP TABLE IF EXISTS `ar_page`;

CREATE TABLE `ar_page` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) DEFAULT NULL COMMENT '标题',
  `templates` text COMMENT '内容模板',
  `isvalid` smallint(1) DEFAULT '1' COMMENT '是否可用',
  `creator` int(11) DEFAULT NULL COMMENT '创建者',
  `create_date` int(11) DEFAULT NULL COMMENT '创建时间',
  `updator` int(11) DEFAULT NULL COMMENT '更新者',
  `update_date` int(11) DEFAULT NULL COMMENT '更新时间',
  `attr` text COMMENT '属性',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='页面';

/*Data for the table `ar_page` */

insert  into `ar_page`(`id`,`title`,`templates`,`isvalid`,`creator`,`create_date`,`updator`,`update_date`,`attr`) values (1,'测试页面','<div style=\"font-size: 24px\">\r\n	你好，这是测试页面模板!\r\n</div>',1,NULL,NULL,NULL,NULL,NULL);

/*Table structure for table `ar_setting` */

DROP TABLE IF EXISTS `ar_setting`;

CREATE TABLE `ar_setting` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `setting_key` varchar(100) NOT NULL COMMENT '配置项目key',
  `setting_value` text COMMENT '配置项目value',
  `namespace` varchar(100) DEFAULT NULL COMMENT '配置项目命名空间',
  `info` varchar(255) DEFAULT NULL COMMENT '配置项目简介',
  `isvalid` smallint(1) DEFAULT '1' COMMENT '配置项目是否可用',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='系统配置';

/*Data for the table `ar_setting` */

insert  into `ar_setting`(`id`,`setting_key`,`setting_value`,`namespace`,`info`,`isvalid`) values (1,'index_lunbo_imgs','a:5:{i:0;a:3:{s:5:\"title\";s:13:\"这是标题1\";s:3:\"img\";s:64:\"http://ww3.sinaimg.cn/large/adde8400gw1ebn1vgnos8j20k00ag0us.jpg\";s:3:\"url\";s:0:\"\";}i:1;a:3:{s:5:\"title\";s:13:\"这是标题2\";s:3:\"img\";s:64:\"http://ww4.sinaimg.cn/large/adde8400gw1ebn1vktdigj20k00ag0vt.jpg\";s:3:\"url\";s:0:\"\";}i:2;a:3:{s:5:\"title\";s:13:\"这是标题3\";s:3:\"img\";s:64:\"http://ww3.sinaimg.cn/large/adde8400gw1ebn1vokqzqj20k00ag3zo.jpg\";s:3:\"url\";s:0:\"\";}i:3;a:3:{s:5:\"title\";s:13:\"这是标题4\";s:3:\"img\";s:64:\"http://ww4.sinaimg.cn/large/adde8400gw1ebn1vqhh67j20k00aggo0.jpg\";s:3:\"url\";s:0:\"\";}i:4;a:3:{s:5:\"title\";s:13:\"这是标题5\";s:3:\"img\";s:64:\"http://ww2.sinaimg.cn/large/adde8400gw1ebn1vuhpzcj20k00agq4v.jpg\";s:3:\"url\";s:0:\"\";}}','plugin','首页轮播图',1);

/*Table structure for table `ar_tag` */

DROP TABLE IF EXISTS `ar_tag`;

CREATE TABLE `ar_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL COMMENT '标签名',
  `isvalid` smallint(1) DEFAULT '1' COMMENT '是否可用',
  `create_time` int(11) DEFAULT NULL COMMENT '创建时间\n',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COMMENT='标签';

/*Data for the table `ar_tag` */

insert  into `ar_tag`(`id`,`name`,`isvalid`,`create_time`) values (1,'PHP',1,NULL),(2,'Java',1,NULL),(3,'咖啡',1,NULL),(4,'文章',1,1391010365),(5,'新闻',1,1391010365),(6,'最新',1,1391010365),(7,'测试',1,1391011118),(8,'sfsdfds',1,1391068296);

/*Table structure for table `ar_user` */

DROP TABLE IF EXISTS `ar_user`;

CREATE TABLE `ar_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(255) DEFAULT NULL,
  `password` varchar(128) DEFAULT NULL,
  `role` varchar(255) DEFAULT NULL,
  `isvalid` tinyint(1) DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `UNIQUE_USERNAME` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `ar_user` */

insert  into `ar_user`(`id`,`username`,`password`,`role`,`isvalid`) values (1,'admin','d033e22ae348aeb5660fc2140aec35850c4da997','admin',1);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
